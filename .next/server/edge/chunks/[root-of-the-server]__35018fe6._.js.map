{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Documents/07:30:15/frontend/middleware.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { createServerClient } from '@supabase/ssr'\n\nexport async function middleware(req: NextRequest) {\n  let response = NextResponse.next({\n    request: {\n      headers: req.headers,\n    },\n  })\n\n  const supabase = createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        get(name: string) {\n          return req.cookies.get(name)?.value\n        },\n        set(name: string, value: string, options: any) {\n          req.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: req.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value,\n            ...options,\n          })\n        },\n        remove(name: string, options: any) {\n          req.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n          response = NextResponse.next({\n            request: {\n              headers: req.headers,\n            },\n          })\n          response.cookies.set({\n            name,\n            value: '',\n            ...options,\n          })\n        },\n      },\n    }\n  )\n\n  // Get the session\n  const { data: { session } } = await supabase.auth.getSession()\n  const isAuth = !!session?.user\n  const isAuthPage = req.nextUrl.pathname.startsWith('/auth')\n  const isDashboard = req.nextUrl.pathname.startsWith('/dashboard')\n\n  // Redirect unauthenticated users to login\n  if (!isAuth && isDashboard) {\n    const loginUrl = req.nextUrl.clone()\n    loginUrl.pathname = '/auth/login'\n    return NextResponse.redirect(loginUrl)\n  }\n\n  // Redirect authenticated users away from auth pages\n  if (isAuth && isAuthPage) {\n    const dashboardUrl = req.nextUrl.clone()\n    dashboardUrl.pathname = `/dashboard/${session.user.id}`\n    return NextResponse.redirect(dashboardUrl)\n  }\n\n  // Redirect /dashboard to user-specific dashboard\n  if (isDashboard && req.nextUrl.pathname === '/dashboard' && isAuth) {\n    const userDashboardUrl = req.nextUrl.clone()\n    userDashboardUrl.pathname = `/dashboard/${session.user.id}`\n    return NextResponse.redirect(userDashboardUrl)\n  }\n\n  return response\n}\n\nexport const config = {\n  matcher: ['/dashboard/:path*', '/auth/:path*'],\n}"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAEA;AAAA;;;AAEO,eAAe,WAAW,GAAgB;IAC/C,IAAI,WAAW,2OAAY,CAAC,IAAI,CAAC;QAC/B,SAAS;YACP,SAAS,IAAI,OAAO;QACtB;IACF;IAEA,MAAM,WAAW,IAAA,kPAAkB,sUAGjC;QACE,SAAS;YACP,KAAI,IAAY;gBACd,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO;YAChC;YACA,KAAI,IAAY,EAAE,KAAa,EAAE,OAAY;gBAC3C,IAAI,OAAO,CAAC,GAAG,CAAC;oBACd;oBACA;oBACA,GAAG,OAAO;gBACZ;gBACA,WAAW,2OAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,IAAI,OAAO;oBACtB;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA;oBACA,GAAG,OAAO;gBACZ;YACF;YACA,QAAO,IAAY,EAAE,OAAY;gBAC/B,IAAI,OAAO,CAAC,GAAG,CAAC;oBACd;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;gBACA,WAAW,2OAAY,CAAC,IAAI,CAAC;oBAC3B,SAAS;wBACP,SAAS,IAAI,OAAO;oBACtB;gBACF;gBACA,SAAS,OAAO,CAAC,GAAG,CAAC;oBACnB;oBACA,OAAO;oBACP,GAAG,OAAO;gBACZ;YACF;QACF;IACF;IAGF,kBAAkB;IAClB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAC5D,MAAM,SAAS,CAAC,CAAC,SAAS;IAC1B,MAAM,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IACnD,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAEpD,0CAA0C;IAC1C,IAAI,CAAC,UAAU,aAAa;QAC1B,MAAM,WAAW,IAAI,OAAO,CAAC,KAAK;QAClC,SAAS,QAAQ,GAAG;QACpB,OAAO,2OAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,oDAAoD;IACpD,IAAI,UAAU,YAAY;QACxB,MAAM,eAAe,IAAI,OAAO,CAAC,KAAK;QACtC,aAAa,QAAQ,GAAG,CAAC,WAAW,EAAE,QAAQ,IAAI,CAAC,EAAE,EAAE;QACvD,OAAO,2OAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,iDAAiD;IACjD,IAAI,eAAe,IAAI,OAAO,CAAC,QAAQ,KAAK,gBAAgB,QAAQ;QAClE,MAAM,mBAAmB,IAAI,OAAO,CAAC,KAAK;QAC1C,iBAAiB,QAAQ,GAAG,CAAC,WAAW,EAAE,QAAQ,IAAI,CAAC,EAAE,EAAE;QAC3D,OAAO,2OAAY,CAAC,QAAQ,CAAC;IAC/B;IAEA,OAAO;AACT;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAqB;KAAe;AAChD"}}]
}