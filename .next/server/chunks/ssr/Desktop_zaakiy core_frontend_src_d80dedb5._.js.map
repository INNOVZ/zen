{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/stores/customizeStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport type {\n  ChatbotInfo,\n  UploadFile,\n  ConversationInfo,\n} from \"@/types/schemaTypes\";\nimport type {\n  ContextConfig,\n  PerformanceMetrics,\n  ChatResponse,\n} from \"@/app/api/routes\";\nimport type { User } from \"@supabase/supabase-js\";\nimport { chatbotApi, conversationApi, uploadsApi } from \"@/app/api/routes\";\nimport { toast } from \"sonner\";\n\n// Define the store state interface\ninterface CustomizeState {\n  // Loading states\n  loading: boolean;\n  saving: boolean;\n  analyticsLoading: boolean;\n  uploading: boolean;\n\n  // UI state\n  activeTab: string;\n  showCreateForm: boolean;\n  showEmbedModal: boolean;\n  isEditMode: boolean;\n\n  // User and organization data\n  currentUser: User | null;\n  orgChatbots: ChatbotInfo[];\n  selectedChatbot: ChatbotInfo | null;\n\n  // Upload and embed data\n  uploads: UploadFile[];\n  embedCode: string;\n\n  // Analytics and performance\n  performanceMetrics: PerformanceMetrics | null;\n  conversations: ConversationInfo[];\n\n  // Deletion state\n  deletingChatbotId: string | null;\n\n  // Configuration\n  contextConfig: ContextConfig;\n  config: ChatbotInfo;\n\n  // Error states\n  error: string | null;\n  connectionStatus: \"connected\" | \"disconnected\" | \"checking\" | \"partial\";\n\n  // Chat state\n  chatMessages: ChatResponse[];\n  currentConversationId: string | null;\n\n  // Basic Actions\n  setLoading: (loading: boolean) => void;\n  setSaving: (saving: boolean) => void;\n  setActiveTab: (activeTab: string) => void;\n  setShowCreateForm: (showCreateForm: boolean) => void;\n  setShowEmbedModal: (showEmbedModal: boolean) => void;\n  setIsEditMode: (isEditMode: boolean) => void;\n  setAnalyticsLoading: (analyticsLoading: boolean) => void;\n  setUploading: (uploading: boolean) => void;\n  setCurrentUser: (currentUser: User | null) => void;\n  setError: (error: string | null) => void;\n  setConnectionStatus: (\n    status: \"connected\" | \"disconnected\" | \"checking\"\n  ) => void;\n\n  // Data Actions\n  setOrgChatbots: (orgChatbots: ChatbotInfo[]) => void;\n  setSelectedChatbot: (selectedChatbot: ChatbotInfo | null) => void;\n  setUploads: (uploads: UploadFile[]) => void;\n  setEmbedCode: (embedCode: string) => void;\n  setPerformanceMetrics: (\n    performanceMetrics: PerformanceMetrics | null\n  ) => void;\n  setDeletingChatbotId: (deletingChatbotId: string | null) => void;\n  setConversations: (conversations: ConversationInfo[]) => void;\n  setChatMessages: (messages: ChatResponse[]) => void;\n  setCurrentConversationId: (id: string | null) => void;\n\n  // Configuration Actions\n  setContextConfig: (contextConfig: ContextConfig) => void;\n  updateContextConfig: (updates: Partial<ContextConfig>) => void;\n  setConfig: (config: ChatbotInfo) => void;\n  updateConfig: (updates: Partial<ChatbotInfo>) => void;\n\n  // Enhanced Async Actions\n  loadChatbots: () => Promise<void>;\n  loadUploads: () => Promise<void>;\n  loadContextConfig: () => Promise<void>;\n  loadPerformanceMetrics: (days?: number) => Promise<void>;\n  createChatbot: (config: ChatbotInfo) => Promise<ChatbotInfo | null>;\n  updateChatbot: (\n    chatbotId: string,\n    config: ChatbotInfo\n  ) => Promise<ChatbotInfo | null>;\n  deleteChatbot: (chatbotId: string) => Promise<void>;\n  saveContextConfig: (updates: Partial<ContextConfig>) => Promise<void>;\n  uploadFile: (file: File, type: string) => Promise<UploadFile | null>;\n  generateEmbedCode: (chatbotId: string) => string;\n  testConnection: () => Promise<boolean>;\n\n  // Utility Actions\n  resetState: () => void;\n  initializeStore: (retryCount?: number) => Promise<void>;\n}\n\n// Default context configuration\nconst defaultContextConfig: ContextConfig = {\n  org_id: \"\",\n  config_name: \"default\",\n  initial_retrieval_count: 20,\n  semantic_rerank_count: 10,\n  final_context_chunks: 5,\n  max_context_length: 4000,\n  enable_query_rewriting: true,\n  max_query_variants: 3,\n  conversation_context_turns: 3,\n  retrieval_strategy: \"hybrid\",\n  semantic_weight: 0.6,\n  keyword_weight: 0.4,\n  model_tier: \"balanced\",\n  embedding_model: \"text-embedding-3-small\",\n  rerank_model: \"gpt-3.5-turbo\",\n  enable_semantic_rerank: true,\n  enable_hallucination_check: true,\n  enable_source_verification: true,\n  confidence_threshold: 0.7,\n  max_response_time_ms: 5000,\n  enable_caching: true,\n  cache_ttl_minutes: 60,\n  domain_filters: {},\n  business_context: \"\",\n  specialized_instructions: \"\",\n  enable_detailed_logging: true,\n  log_user_queries: true,\n  collect_feedback: true,\n  created_at: \"\",\n  updated_at: \"\",\n};\n\n// Default chatbot configuration\nconst defaultConfig: ChatbotInfo = {\n  id: \"\",\n  name: \"\",\n  description: \"\",\n  color_hex: \"#6a8fff\",\n  tone: \"helpful\",\n  behavior: \"Be helpful and informative while maintaining professionalism\",\n  system_prompt: \"\",\n  greeting_message:\n    \"Hello! I'm your INNOVZ AI Assistant. How can I help you today?\",\n  fallback_message:\n    \"I apologize, but I don't have enough information to answer that accurately. Could you please rephrase or provide more context?\",\n  ai_model_config: {\n    model: \"gpt-4\",\n    temperature: 0.7,\n    max_tokens: 1000,\n  },\n  is_active: true,\n  chain_status: \"ready\",\n  trainer_at: \"\",\n  created_at: \"\",\n  status: \"active\",\n  deployment_config: {\n    url: \"\",\n    headers: {},\n    method: \"POST\",\n  },\n  avatar_url: \"\",\n};\n\n// Create the Zustand store\nexport const useCustomizeStore = create<CustomizeState>()(\n  devtools(\n    (set, get) => ({\n      // Initial state\n      loading: true,\n      saving: false,\n      activeTab: \"basic\",\n      showCreateForm: false,\n      showEmbedModal: false,\n      isEditMode: false,\n      analyticsLoading: false,\n      uploading: false,\n\n      currentUser: null,\n      error: null,\n      connectionStatus: \"checking\",\n\n      orgChatbots: [],\n      selectedChatbot: null,\n      uploads: [],\n      embedCode: \"\",\n      performanceMetrics: null,\n      conversations: [],\n      deletingChatbotId: null,\n\n      contextConfig: defaultContextConfig,\n      config: defaultConfig,\n      chatMessages: [],\n      currentConversationId: null,\n\n      // Basic Actions\n      setLoading: (loading) => set({ loading }, false, \"setLoading\"),\n      setSaving: (saving) => set({ saving }, false, \"setSaving\"),\n      setActiveTab: (activeTab) => set({ activeTab }, false, \"setActiveTab\"),\n      setShowCreateForm: (showCreateForm) =>\n        set({ showCreateForm }, false, \"setShowCreateForm\"),\n      setShowEmbedModal: (showEmbedModal) =>\n        set({ showEmbedModal }, false, \"setShowEmbedModal\"),\n      setIsEditMode: (isEditMode) =>\n        set({ isEditMode }, false, \"setIsEditMode\"),\n      setAnalyticsLoading: (analyticsLoading) =>\n        set({ analyticsLoading }, false, \"setAnalyticsLoading\"),\n      setUploading: (uploading) => set({ uploading }, false, \"setUploading\"),\n      setCurrentUser: (currentUser) =>\n        set({ currentUser }, false, \"setCurrentUser\"),\n      setError: (error) => set({ error }, false, \"setError\"),\n      setConnectionStatus: (connectionStatus) =>\n        set({ connectionStatus }, false, \"setConnectionStatus\"),\n\n      // Data Actions\n      setOrgChatbots: (orgChatbots) =>\n        set({ orgChatbots }, false, \"setOrgChatbots\"),\n      setSelectedChatbot: (selectedChatbot) =>\n        set({ selectedChatbot }, false, \"setSelectedChatbot\"),\n      setUploads: (uploads) => set({ uploads }, false, \"setUploads\"),\n      setEmbedCode: (embedCode) => set({ embedCode }, false, \"setEmbedCode\"),\n      setPerformanceMetrics: (performanceMetrics) =>\n        set({ performanceMetrics }, false, \"setPerformanceMetrics\"),\n      setDeletingChatbotId: (deletingChatbotId) =>\n        set({ deletingChatbotId }, false, \"setDeletingChatbotId\"),\n      setConversations: (conversations) =>\n        set({ conversations }, false, \"setConversations\"),\n      setChatMessages: (chatMessages) =>\n        set({ chatMessages }, false, \"setChatMessages\"),\n      setCurrentConversationId: (currentConversationId) =>\n        set({ currentConversationId }, false, \"setCurrentConversationId\"),\n\n      // Configuration Actions\n      setContextConfig: (contextConfig) =>\n        set({ contextConfig }, false, \"setContextConfig\"),\n      updateContextConfig: (updates) =>\n        set(\n          (state) => ({\n            contextConfig: { ...state.contextConfig, ...updates },\n          }),\n          false,\n          \"updateContextConfig\"\n        ),\n\n      setConfig: (config) => set({ config }, false, \"setConfig\"),\n      updateConfig: (updates) =>\n        set(\n          (state) => ({\n            config: { ...state.config, ...updates },\n          }),\n          false,\n          \"updateConfig\"\n        ),\n\n      // Enhanced Async Actions with better error handling\n      loadChatbots: async () => {\n        try {\n          set({ loading: true, error: null });\n          const chatbots = await chatbotApi.getChatbots();\n          set({\n            orgChatbots: chatbots,\n            loading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\") ||\n            error.message.includes(\"Not authenticated\")\n          );\n\n          // Check if this is likely an initial load error (no chatbots loaded yet)\n          const currentState = get();\n          const isInitialLoad = !currentState.orgChatbots || currentState.orgChatbots.length === 0;\n\n          if (isDevelopment && isConnectionError && isInitialLoad) {\n            // In development, suppress error messages during initial load\n            console.debug(\"Initial load - chatbots loading failed (likely auth in progress)\");\n            set({\n              loading: false,\n              connectionStatus: \"disconnected\",\n            });\n            return; // Don't set error state for initial load failures\n          }\n\n          if (isDevelopment && isConnectionError) {\n            // In development, just log a warning for connection errors\n            console.warn(\"Chatbots loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading chatbots:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load chatbots\",\n            loading: false,\n            connectionStatus: \"disconnected\",\n          });\n\n          // Only show toast for unexpected errors, not connection issues in development\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load chatbots. Please check your connection.\");\n          }\n        }\n      },\n\n      loadUploads: async () => {\n        try {\n          const uploads = await uploadsApi.getUploads();\n          set({ uploads, connectionStatus: \"connected\" });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\")\n          );\n\n          if (isDevelopment && isConnectionError) {\n            console.warn(\"Uploads loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading uploads:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load uploads\",\n            connectionStatus: \"disconnected\",\n          });\n\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load knowledge base files.\");\n          }\n        }\n      },\n\n      loadContextConfig: async () => {\n        try {\n          const response = await conversationApi.getContextConfig();\n          if (response && response.success) {\n            set({\n              contextConfig: response.config,\n              connectionStatus: \"connected\",\n            });\n          }\n        } catch (error) {\n          console.error(\"Error loading context config:\", error);\n          set({\n            error: \"Failed to load context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to load AI configuration.\");\n        }\n      },\n\n      loadPerformanceMetrics: async (days = 7) => {\n        try {\n          set({ analyticsLoading: true });\n          const metrics = await conversationApi.getAnalyticsDashboard(days);\n          set({\n            performanceMetrics: metrics,\n            analyticsLoading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          console.error(\"Error loading performance metrics:\", error);\n          set({\n            performanceMetrics: null,\n            analyticsLoading: false,\n            error: \"Failed to load analytics\",\n            connectionStatus: \"disconnected\",\n          });\n          // Don't show error toast for analytics as it's not critical\n        }\n      },\n\n      createChatbot: async (config) => {\n        try {\n          set({ saving: true, error: null });\n          const chatbot = await chatbotApi.createChatbot(config);\n          set((state) => ({\n            orgChatbots: [...state.orgChatbots, chatbot],\n            selectedChatbot: chatbot,\n            saving: false,\n            showCreateForm: false,\n            isEditMode: true,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot created successfully!\");\n          return chatbot;\n        } catch (error) {\n          console.error(\"Error creating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to create chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to create chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      updateChatbot: async (chatbotId, config) => {\n        try {\n          set({ saving: true, error: null });\n          const updatedChatbot = await chatbotApi.updateChatbot(\n            chatbotId,\n            config\n          );\n          set((state) => ({\n            orgChatbots: state.orgChatbots.map((bot) =>\n              bot.id === chatbotId ? updatedChatbot : bot\n            ),\n            selectedChatbot: updatedChatbot,\n            saving: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot updated successfully!\");\n          return updatedChatbot;\n        } catch (error) {\n          console.error(\"Error updating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to update chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      deleteChatbot: async (chatbotId) => {\n        try {\n          set({ deletingChatbotId: chatbotId, error: null });\n          await chatbotApi.deleteChatbot(chatbotId);\n          set((state) => ({\n            orgChatbots: state.orgChatbots.filter(\n              (bot) => bot.id !== chatbotId\n            ),\n            selectedChatbot:\n              state.selectedChatbot?.id === chatbotId\n                ? null\n                : state.selectedChatbot,\n            deletingChatbotId: null,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting chatbot:\", error);\n          set({\n            deletingChatbotId: null,\n            error: \"Failed to delete chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to delete chatbot. Please try again.\");\n        }\n      },\n\n      saveContextConfig: async (updates) => {\n        try {\n          set({ saving: true, error: null });\n          const response = await conversationApi.updateContextConfig(updates);\n\n          if (response && response.success) {\n            set((state) => ({\n              contextConfig: { ...state.contextConfig, ...updates },\n              saving: false,\n              connectionStatus: \"connected\",\n            }));\n            toast.success(\"Context configuration updated successfully!\");\n          } else {\n            throw new Error(response?.message || \"Save failed\");\n          }\n        } catch (error) {\n          console.error(\"Error saving context config:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? `Failed to save: ${error.message}`\n              : \"Failed to update context configuration. Please try again.\";\n          toast.error(errorMessage);\n        }\n      },\n\n      uploadFile: async (file, type) => {\n        try {\n          set({ uploading: true, error: null });\n          const uploadResult = await uploadsApi.uploadFile(file, type);\n          set((state) => ({\n            uploads: [...state.uploads, uploadResult],\n            uploading: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"File uploaded successfully!\");\n          return uploadResult;\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          set({\n            uploading: false,\n            error: \"Failed to upload file\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to upload file. Please try again.\");\n          return null;\n        }\n      },\n\n      testConnection: async () => {\n        try {\n          set({ connectionStatus: \"checking\" });\n          // First try a simple health check without auth\n          try {\n            const healthResponse = await conversationApi.getHealthCheck();\n            if (healthResponse) {\n              // If basic health check passes, try authenticated connection\n              const result = await conversationApi.testConnection();\n              const isConnected = result.success;\n              set({\n                connectionStatus: isConnected ? \"connected\" : \"disconnected\",\n              });\n              return isConnected;\n            }\n          } catch (healthError) {\n            console.warn(\n              \"Health check failed, trying direct connection test:\",\n              healthError\n            );\n          }\n\n          // Fall back to direct authenticated test\n          const result = await conversationApi.testConnection();\n          const isConnected = result.success;\n          set({ connectionStatus: isConnected ? \"connected\" : \"disconnected\" });\n          return isConnected;\n        } catch (error) {\n          console.error(\"Connection test failed:\", error);\n          set({ connectionStatus: \"disconnected\" });\n          return false;\n        }\n      },\n\n      generateEmbedCode: (chatbotId) => {\n        const API_BASE =\n          process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n        const embedScript = `<script>\n  (function() {\n    var script = document.createElement('script');\n    script.src = '${window.location.origin}/chatbot-widget.js';\n    script.setAttribute('data-chatbot-id', '${chatbotId}');\n    script.setAttribute('data-api-url', '${API_BASE}');\n    document.head.appendChild(script);\n  })();\n</script>`;\n        set({ embedCode: embedScript, showEmbedModal: true });\n        return embedScript;\n      },\n\n      initializeStore: async (retryCount = 0) => {\n        const maxRetries = 3;\n        try {\n          set({ loading: true, error: null, connectionStatus: \"checking\" });\n\n          // Test connection first with timeout and retry logic\n          let connectionResult;\n          try {\n            connectionResult = await get().testConnection();\n          } catch (connectionError) {\n            console.warn(\n              \"Initial connection test failed, attempting to continue:\",\n              connectionError\n            );\n            // Continue with initialization even if connection test fails\n            connectionResult = false;\n          }\n\n          // Load all data in parallel with individual error handling\n          const results = await Promise.allSettled([\n            chatbotApi.getChatbots(),\n            uploadsApi.getUploads(),\n            conversationApi.getContextConfig(),\n          ]);\n\n          let hasAnySuccess = false;\n          let criticalFailures = 0;\n\n          // Handle chatbots result (critical for basic functionality)\n          if (results[0].status === \"fulfilled\") {\n            set({ orgChatbots: results[0].value });\n            hasAnySuccess = true;\n          } else {\n            console.error(\"Failed to load chatbots:\", results[0].reason);\n            criticalFailures++;\n          }\n\n          // Handle uploads result (non-critical)\n          if (results[1].status === \"fulfilled\") {\n            set({ uploads: results[1].value });\n            hasAnySuccess = true;\n          } else {\n            console.warn(\n              \"Failed to load uploads (non-critical):\",\n              results[1].reason\n            );\n          }\n\n          // Handle context config result (non-critical, has defaults)\n          if (\n            results[2].status === \"fulfilled\" &&\n            results[2].value &&\n            results[2].value.success\n          ) {\n            // Ensure loaded config has proper org_id\n            const loadedConfig = {\n              ...results[2].value.config,\n              org_id:\n                results[2].value.config.org_id || `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: loadedConfig });\n            console.debug(\"✅ Context config loaded successfully\");\n            hasAnySuccess = true;\n          } else {\n            // Context config failed to load - this is expected if backend is not available\n            console.debug(\n              \"🔧 Context config not available, using built-in defaults\"\n            );\n            // Ensure default config has proper org_id\n            const defaultConfigWithOrgId = {\n              ...defaultContextConfig,\n              org_id: `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: defaultConfigWithOrgId });\n          }\n\n          // Determine if initialization was successful enough\n          if (hasAnySuccess && criticalFailures === 0) {\n            set({\n              loading: false,\n              connectionStatus: connectionResult ? \"connected\" : \"partial\",\n              error: null,\n            });\n            if (!connectionResult) {\n              toast.warning(\n                \"Some features may be limited due to connectivity issues\"\n              );\n            }\n          } else if (\n            hasAnySuccess &&\n            criticalFailures > 0 &&\n            retryCount < maxRetries\n          ) {\n            // Partial success but critical failures - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to critical failures`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else if (!hasAnySuccess && retryCount < maxRetries) {\n            // Complete failure - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to complete failure`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            // Final failure after retries\n            throw new Error(\n              `Failed to load critical application data after ${\n                retryCount + 1\n              } attempts`\n            );\n          }\n        } catch (error) {\n          console.error(\"Error initializing store:\", error);\n          const isRetryable =\n            retryCount < maxRetries &&\n            error instanceof Error &&\n            (error.message.includes(\"network\") ||\n              error.message.includes(\"timeout\") ||\n              error.message.includes(\"fetch\"));\n\n          if (isRetryable) {\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) after error:`,\n              error.message\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1500)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            set({\n              loading: false,\n              error: `Failed to initialize application${\n                retryCount > 0 ? ` after ${retryCount + 1} attempts` : \"\"\n              }`,\n              connectionStatus: \"disconnected\",\n            });\n            toast.error(\n              \"Failed to initialize application. Please check your connection and try refreshing the page.\"\n            );\n          }\n        }\n      },\n\n      resetState: () =>\n        set(\n          {\n            loading: true,\n            saving: false,\n            activeTab: \"basic\",\n            showCreateForm: false,\n            showEmbedModal: false,\n            isEditMode: false,\n            analyticsLoading: false,\n            uploading: false,\n            currentUser: null,\n            error: null,\n            connectionStatus: \"checking\",\n            orgChatbots: [],\n            selectedChatbot: null,\n            uploads: [],\n            embedCode: \"\",\n            performanceMetrics: null,\n            conversations: [],\n            deletingChatbotId: null,\n            contextConfig: defaultContextConfig,\n            config: defaultConfig,\n            chatMessages: [],\n            currentConversationId: null,\n          },\n          false,\n          \"resetState\"\n        ),\n    }),\n    { name: \"customize-store\" }\n  )\n);\n\n// Export convenience hooks for accessing specific parts of the store\nexport const useCustomizeLoading = () =>\n  useCustomizeStore((state) => state.loading);\nexport const useCustomizeSaving = () =>\n  useCustomizeStore((state) => state.saving);\nexport const useCustomizeActiveTab = () =>\n  useCustomizeStore((state) => state.activeTab);\nexport const useCustomizeCurrentUser = () =>\n  useCustomizeStore((state) => state.currentUser);\nexport const useCustomizeOrgChatbots = () =>\n  useCustomizeStore((state) => state.orgChatbots);\nexport const useCustomizeSelectedChatbot = () =>\n  useCustomizeStore((state) => state.selectedChatbot);\nexport const useCustomizeUploads = () =>\n  useCustomizeStore((state) => state.uploads);\nexport const useCustomizeContextConfig = () =>\n  useCustomizeStore((state) => state.contextConfig);\nexport const useCustomizeConfig = () =>\n  useCustomizeStore((state) => state.config);\nexport const useCustomizePerformanceMetrics = () =>\n  useCustomizeStore((state) => state.performanceMetrics);\nexport const useCustomizeConnectionStatus = () =>\n  useCustomizeStore((state) => state.connectionStatus);\n\n// Export compound selectors for common use cases\nexport const useCustomizeActions = () =>\n  useCustomizeStore((state) => ({\n    setLoading: state.setLoading,\n    setSaving: state.setSaving,\n    setActiveTab: state.setActiveTab,\n    updateConfig: state.updateConfig,\n    updateContextConfig: state.updateContextConfig,\n    testConnection: state.testConnection,\n  }));\n\nexport const useCustomizeUIState = () =>\n  useCustomizeStore((state) => ({\n    loading: state.loading,\n    saving: state.saving,\n    activeTab: state.activeTab,\n    showCreateForm: state.showCreateForm,\n    showEmbedModal: state.showEmbedModal,\n    isEditMode: state.isEditMode,\n    analyticsLoading: state.analyticsLoading,\n    connectionStatus: state.connectionStatus,\n  }));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ComponentRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root> & {\n    thumbClassName?: string;\n  }\n>(({ className, thumbClassName, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-10 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n        thumbClassName\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,uBAAS,0PAAgB,CAK7B,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,OAAO,EAAE,oBAC1C,qRAAC,iNAAqB;QACpB,WAAW,IAAA,gKAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,qRAAC,kNAAsB;YACrB,WAAW,IAAA,gKAAE,EACX,8KACA;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,iNAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,qRAAC,gNAAmB;QAClB,aAAU;QACV,WAAW,IAAA,gKAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 741, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,qRAAC;QACC,aAAU;QACV,WAAW,IAAA,gKAAE,EACX,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 765, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,qRAAC,iNAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,qRAAC,kNAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,qRAAC,kNAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,qRAAC,oNAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,gKAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,qRAAC,iNAAoB;gBAAC,OAAO;0BAC3B,cAAA,qRAAC,kRAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,qRAAC,mNAAsB;kBACrB,cAAA,qRAAC,oNAAuB;YACtB,aAAU;YACV,WAAW,IAAA,gKAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,qRAAC;;;;;8BACD,qRAAC,qNAAwB;oBACvB,WAAW,IAAA,gKAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,qRAAC;;;;;;;;;;;;;;;;AAIT;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,qRAAC,kNAAqB;QACpB,aAAU;QACV,WAAW,IAAA,gKAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,qRAAC,iNAAoB;QACnB,aAAU;QACV,WAAW,IAAA,gKAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,qRAAC;gBAAK,WAAU;0BACd,cAAA,qRAAC,0NAA6B;8BAC5B,cAAA,qRAAC,4PAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,qRAAC,qNAAwB;0BAAE;;;;;;;;;;;;AAGjC;AAEA,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,qRAAC,sNAAyB;QACxB,aAAU;QACV,WAAW,IAAA,gKAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,qRAAC,2NAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,gKAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,qRAAC,4QAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;AAEA,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,qRAAC,6NAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,gKAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,qRAAC,kRAAe;YAAC,WAAU;;;;;;;;;;;AAGjC","debugId":null}},
    {"offset": {"line": 998, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/components/dashboard/customize/ContextEngineering.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { useCustomizeStore } from \"@/stores/customizeStore\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { ContextConfig, conversationApi } from \"@/app/api/routes\";\nimport { Save } from \"lucide-react\";\nimport { toast } from \"sonner\";\n\ninterface ContextEngineeringProps {\n  className?: string;\n}\n\nexport default function ContextEngineering({\n  className,\n}: ContextEngineeringProps) {\n  const { saving, contextConfig, updateContextConfig, setSaving } =\n    useCustomizeStore();\n\n  // Individual input states for text fields that need debouncing\n  const [textInputs, setTextInputs] = useState({\n    business_context: contextConfig.business_context || \"\",\n    specialized_instructions: contextConfig.specialized_instructions || \"\",\n  });\n\n  // Update text inputs when store config changes\n  useEffect(() => {\n    setTextInputs({\n      business_context: contextConfig.business_context || \"\",\n      specialized_instructions: contextConfig.specialized_instructions || \"\",\n    });\n  }, [contextConfig]);\n\n  // Debounce function\n  const debounce = <T extends (...args: never[]) => void>(\n    func: T,\n    delay: number\n  ) => {\n    let timeoutId: NodeJS.Timeout;\n    return (...args: Parameters<T>) => {\n      clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => func(...args), delay);\n    };\n  };\n\n  // Debounced update for text fields\n  const debouncedTextUpdate = React.useMemo(() => {\n    return debounce((field: string, value: string) => {\n      updateContextConfig({ [field]: value } as Partial<ContextConfig>);\n    }, 300);\n  }, [updateContextConfig]);\n\n  // Handle text input changes with debouncing\n  const handleTextInputChange = useCallback(\n    (field: keyof typeof textInputs, value: string) => {\n      // Update local state immediately\n      setTextInputs((prev) => ({ ...prev, [field]: value }));\n      // Debounce the store update\n      debouncedTextUpdate(field, value);\n    },\n    [debouncedTextUpdate]\n  );\n\n  // Handle immediate config changes (numbers, booleans, selects)\n  const handleConfigChange = useCallback(\n    (updates: Partial<ContextConfig>) => {\n      updateContextConfig(updates);\n    },\n    [updateContextConfig]\n  );\n\n  // Validate context config\n  const validateContextConfig = (config: ContextConfig): string[] => {\n    const errors: string[] = [];\n\n    // Only require org_id if it's truly empty after fallback attempts\n    if (!config.org_id || config.org_id.trim() === \"\") {\n      errors.push(\n        \"Organization ID could not be determined. Please try refreshing the page.\"\n      );\n    }\n    if (\n      config.confidence_threshold < 0.3 ||\n      config.confidence_threshold > 0.9\n    ) {\n      errors.push(\"Confidence threshold must be between 30% and 90%\");\n    }\n    if (config.final_context_chunks < 1 || config.final_context_chunks > 10) {\n      errors.push(\"Context chunks must be between 1 and 10\");\n    }\n\n    return errors;\n  };\n\n  // Remove the old updateContextConfigLocal function - replaced with handleConfigChange\n\n  // Enhanced context config save with proper error handling\n  const saveContextConfig = async (\n    updates: Partial<ContextConfig>,\n    showToast: boolean = true\n  ) => {\n    try {\n      setSaving(true);\n\n      // Validate updates first\n      const mergedConfig = { ...contextConfig, ...updates };\n      const validationErrors = validateContextConfig(mergedConfig);\n\n      if (validationErrors.length > 0) {\n        throw new Error(`Validation failed: ${validationErrors.join(\", \")}`);\n      }\n\n      console.debug(\"Saving context config with updates:\", updates);\n\n      // Save to backend first\n      const response = await conversationApi.updateContextConfig(updates);\n      console.debug(\n        \"Context config update response:\",\n        JSON.stringify(response, null, 2)\n      );\n\n      if (response && response.success) {\n        // Only update local state after successful backend save\n        updateContextConfig(updates);\n\n        if (showToast) {\n          // Show different messages based on response\n          if (response.message.includes(\"locally\")) {\n            toast.success(\"Context configuration saved locally!\");\n          } else {\n            toast.success(\"Context configuration saved successfully!\");\n          }\n        }\n      } else {\n        throw new Error(response?.message || \"Save failed\");\n      }\n    } catch (error) {\n      console.debug(\"Error saving context config:\", error);\n\n      if (showToast) {\n        let errorMessage = \"Failed to save context configuration.\";\n\n        if (error instanceof Error) {\n          if (\n            error.message.includes(\"404\") ||\n            error.message.includes(\"not found\")\n          ) {\n            errorMessage += \" Backend endpoint not available.\";\n          } else if (\n            error.message.includes(\"401\") ||\n            error.message.includes(\"Authentication\")\n          ) {\n            errorMessage += \" Please log in again.\";\n          } else if (\n            error.message.includes(\"Network\") ||\n            error.message.includes(\"fetch\")\n          ) {\n            errorMessage += \" Check your connection.\";\n          } else {\n            errorMessage += ` Error: ${error.message}`;\n          }\n        }\n\n        toast.error(errorMessage);\n      }\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <span>🔧</span>\n          Advanced AI Configuration\n        </CardTitle>\n        <p className=\"text-gray-600\">\n          Fine-tune how your AI processes and retrieves information to improve\n          response quality and accuracy.\n        </p>\n      </CardHeader>\n      <CardContent className=\"space-y-6\">\n        {/* Model and Performance Settings */}\n        <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 p-6 rounded-lg border border-blue-200\">\n          <h4 className=\"text-md font-semibold text-blue-900 mb-4\">\n            Model & Performance Settings\n          </h4>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <Label htmlFor=\"model-tier\">AI Model Tier</Label>\n              <Select\n                value={contextConfig.model_tier}\n                onValueChange={(value) =>\n                  handleConfigChange({\n                    model_tier: value as\n                      | \"fast\"\n                      | \"balanced\"\n                      | \"premium\"\n                      | \"enterprise\",\n                  })\n                }\n              >\n                <SelectTrigger className=\"mt-2\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"fast\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>⚡</span>\n                      <div>\n                        <div className=\"font-medium\">Fast</div>\n                        <div className=\"text-xs text-gray-500\">\n                          Quick responses, basic quality\n                        </div>\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"balanced\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>⚖️</span>\n                      <div>\n                        <div className=\"font-medium\">Balanced</div>\n                        <div className=\"text-xs text-gray-500\">\n                          Good speed and quality balance\n                        </div>\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"premium\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>💎</span>\n                      <div>\n                        <div className=\"font-medium\">Premium</div>\n                        <div className=\"text-xs text-gray-500\">\n                          High quality, slower responses\n                        </div>\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"enterprise\">\n                    <div className=\"flex items-center gap-2\">\n                      <span>🏢</span>\n                      <div>\n                        <div className=\"font-medium\">Enterprise</div>\n                        <div className=\"text-xs text-gray-500\">\n                          Maximum quality and features\n                        </div>\n                      </div>\n                    </div>\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label>Maximum Response Time</Label>\n              <div className=\"mt-2 space-y-2\">\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>3s</span>\n                  <span>\n                    {(contextConfig.max_response_time_ms / 1000).toFixed(1)}s\n                  </span>\n                  <span>30s</span>\n                </div>\n                <input\n                  type=\"range\"\n                  min=\"3000\"\n                  max=\"30000\"\n                  step=\"1000\"\n                  value={contextConfig.max_response_time_ms}\n                  onChange={(e) =>\n                    handleConfigChange({\n                      max_response_time_ms: parseInt(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Retrieval Strategy Settings */}\n        <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 p-6 rounded-lg border border-green-200\">\n          <h4 className=\"text-md font-semibold text-green-900 mb-4\">\n            Information Retrieval Strategy\n          </h4>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"retrieval-strategy\">Retrieval Method</Label>\n              <Select\n                value={contextConfig.retrieval_strategy}\n                onValueChange={(value) =>\n                  handleConfigChange({\n                    retrieval_strategy: value as\n                      | \"semantic_only\"\n                      | \"hybrid\"\n                      | \"keyword_only\"\n                      | \"domain_specific\",\n                  })\n                }\n              >\n                <SelectTrigger className=\"mt-2\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"semantic_only\">\n                    <div>\n                      <div className=\"font-medium\">Semantic Only</div>\n                      <div className=\"text-xs text-gray-500\">\n                        AI-powered meaning-based search\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"hybrid\">\n                    <div>\n                      <div className=\"font-medium\">Hybrid</div>\n                      <div className=\"text-xs text-gray-500\">\n                        Combines semantic + keyword search\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"keyword_only\">\n                    <div>\n                      <div className=\"font-medium\">Keyword Only</div>\n                      <div className=\"text-xs text-gray-500\">\n                        Traditional keyword matching\n                      </div>\n                    </div>\n                  </SelectItem>\n                  <SelectItem value=\"domain_specific\">\n                    <div>\n                      <div className=\"font-medium\">Domain Specific</div>\n                      <div className=\"text-xs text-gray-500\">\n                        Specialized for specific industries\n                      </div>\n                    </div>\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <Label>Initial Retrieval Count</Label>\n                <Input\n                  type=\"number\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={contextConfig.initial_retrieval_count}\n                  onChange={(e) =>\n                    handleConfigChange({\n                      initial_retrieval_count: parseInt(e.target.value) || 20,\n                    })\n                  }\n                  className=\"mt-2\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Documents to retrieve initially\n                </p>\n              </div>\n\n              <div>\n                <Label>Semantic Rerank Count</Label>\n                <Input\n                  type=\"number\"\n                  min=\"5\"\n                  max=\"50\"\n                  value={contextConfig.semantic_rerank_count}\n                  onChange={(e) =>\n                    handleConfigChange({\n                      semantic_rerank_count: parseInt(e.target.value) || 10,\n                    })\n                  }\n                  className=\"mt-2\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Documents for AI reranking\n                </p>\n              </div>\n\n              <div>\n                <Label>Final Context Chunks</Label>\n                <Input\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"10\"\n                  value={contextConfig.final_context_chunks}\n                  onChange={(e) =>\n                    handleConfigChange({\n                      final_context_chunks: parseInt(e.target.value) || 5,\n                    })\n                  }\n                  className=\"mt-2\"\n                />\n                <p className=\"text-xs text-gray-500 mt-1\">\n                  Final pieces used for response\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Quality Control Settings */}\n        <div className=\"bg-gradient-to-r from-purple-50 to-violet-50 p-6 rounded-lg border border-purple-200\">\n          <h4 className=\"text-md font-semibold text-purple-900 mb-4\">\n            Quality Control & Safety\n          </h4>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-md border\">\n                <div>\n                  <Label>Hallucination Detection</Label>\n                  <p className=\"text-xs text-gray-500\">\n                    Prevent AI from making up information\n                  </p>\n                </div>\n                <Switch\n                  checked={contextConfig.enable_hallucination_check}\n                  onCheckedChange={(checked) =>\n                    handleConfigChange({\n                      enable_hallucination_check: checked,\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-md border\">\n                <div>\n                  <Label>Source Verification</Label>\n                  <p className=\"text-xs text-gray-500\">\n                    Verify information against knowledge base\n                  </p>\n                </div>\n                <Switch\n                  checked={contextConfig.enable_source_verification}\n                  onCheckedChange={(checked) =>\n                    handleConfigChange({\n                      enable_source_verification: checked,\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-md border\">\n                <div>\n                  <Label>Query Rewriting</Label>\n                  <p className=\"text-xs text-gray-500\">\n                    Improve search queries automatically\n                  </p>\n                </div>\n                <Switch\n                  checked={contextConfig.enable_query_rewriting}\n                  onCheckedChange={(checked) =>\n                    handleConfigChange({\n                      enable_query_rewriting: checked,\n                    })\n                  }\n                />\n              </div>\n\n              <div className=\"flex items-center justify-between p-3 bg-white rounded-md border\">\n                <div>\n                  <Label>Semantic Re-ranking</Label>\n                  <p className=\"text-xs text-gray-500\">\n                    AI-powered result relevance improvement\n                  </p>\n                </div>\n                <Switch\n                  checked={contextConfig.enable_semantic_rerank}\n                  onCheckedChange={(checked) =>\n                    handleConfigChange({\n                      enable_semantic_rerank: checked,\n                    })\n                  }\n                />\n              </div>\n            </div>\n\n            <div>\n              <Label>Confidence Threshold</Label>\n              <div className=\"mt-2 space-y-2\">\n                <div className=\"flex justify-between text-sm text-gray-600\">\n                  <span>Permissive (30%)</span>\n                  <span className=\"font-medium\">\n                    {Math.round(contextConfig.confidence_threshold * 100)}%\n                  </span>\n                  <span>Conservative (90%)</span>\n                </div>\n                <input\n                  type=\"range\"\n                  min=\"0.3\"\n                  max=\"0.9\"\n                  step=\"0.05\"\n                  value={contextConfig.confidence_threshold}\n                  onChange={(e) =>\n                    handleConfigChange({\n                      confidence_threshold: parseFloat(e.target.value),\n                    })\n                  }\n                  className=\"w-full\"\n                />\n                <p className=\"text-xs text-gray-500\">\n                  Higher values make the AI more conservative about providing\n                  answers\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Business Context Settings */}\n        <div className=\"bg-gradient-to-r from-orange-50 to-amber-50 p-6 rounded-lg border border-orange-200\">\n          <h4 className=\"text-md font-semibold text-orange-900 mb-4\">\n            Business Context & Instructions\n          </h4>\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"business-context\">Business Context</Label>\n              <Textarea\n                id=\"business-context\"\n                value={textInputs.business_context}\n                onChange={(e) =>\n                  handleTextInputChange(\"business_context\", e.target.value)\n                }\n                className=\"mt-2\"\n                rows={3}\n                placeholder=\"Describe your business, industry, and key context the AI should understand...\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Help the AI understand your business domain and context\n              </p>\n            </div>\n\n            <div>\n              <Label htmlFor=\"specialized-instructions\">\n                Specialized Instructions\n              </Label>\n              <Textarea\n                id=\"specialized-instructions\"\n                value={textInputs.specialized_instructions}\n                onChange={(e) =>\n                  handleTextInputChange(\n                    \"specialized_instructions\",\n                    e.target.value\n                  )\n                }\n                className=\"mt-2\"\n                rows={3}\n                placeholder=\"Any specific instructions for how the AI should behave or respond...\"\n              />\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Specific behavioral guidelines and response patterns\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Configuration Summary */}\n        <div className=\"bg-gray-50 p-4 rounded-lg border\">\n          <h4 className=\"text-md font-semibold text-gray-900 mb-3\">\n            Current Configuration Summary\n          </h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n            <div>\n              <span className=\"text-gray-600\">Model Tier:</span>\n              <div className=\"font-medium capitalize\">\n                {contextConfig.model_tier}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Strategy:</span>\n              <div className=\"font-medium\">\n                {contextConfig.retrieval_strategy.replace(\"_\", \" \")}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Context Chunks:</span>\n              <div className=\"font-medium\">\n                {contextConfig.final_context_chunks}\n              </div>\n            </div>\n            <div>\n              <span className=\"text-gray-600\">Confidence:</span>\n              <div className=\"font-medium\">\n                {Math.round(contextConfig.confidence_threshold * 100)}%\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Save Configuration Button */}\n        <div className=\"pt-4 border-t\">\n          <Button\n            onClick={() => saveContextConfig(contextConfig, true)}\n            disabled={saving}\n            className=\"w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700\"\n            size=\"lg\"\n          >\n            <Save className=\"w-4 h-4 mr-2\" />\n            {saving ? \"Saving Configuration...\" : \"Save Context Configuration\"}\n          </Button>\n          <p className=\"text-xs text-gray-500 mt-2 text-center\">\n            Save your advanced AI configuration settings to the backend\n          </p>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2401, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/app/dashboard/%5BuserId%5D/context-settings/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useParams, useRouter } from \"next/navigation\";\nimport { useCustomizeStore } from \"@/stores/customizeStore\";\nimport { supabase } from \"@/lib/supabase\";\nimport ContextEngineering from \"@/components/dashboard/customize/ContextEngineering\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  BrainCircuit,\n  Settings,\n  AlertTriangle,\n  WifiOff,\n  RefreshCw,\n} from \"lucide-react\";\nimport { toast } from \"sonner\";\n\nexport default function AIConfigurationPage() {\n  const router = useRouter();\n  const { userId } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const {\n    connectionStatus,\n    error,\n    contextConfig,\n    setCurrentUser,\n    setError,\n    initializeStore,\n    testConnection,\n    loadContextConfig,\n  } = useCustomizeStore();\n\n  // Enhanced connection testing\n  const checkConnection = useCallback(async () => {\n    try {\n      const isConnected = await testConnection();\n      if (!isConnected && retryCount < 3) {\n        setRetryCount((prev) => prev + 1);\n        // Auto-retry after a delay\n        setTimeout(() => {\n          checkConnection();\n        }, 2000 * Math.pow(2, retryCount)); // Exponential backoff\n      } else if (isConnected) {\n        setRetryCount(0);\n        setError(null);\n      }\n    } catch (error) {\n      console.error(\"Connection check failed:\", error);\n    }\n  }, [testConnection, retryCount, setError]);\n\n  const initializePage = useCallback(async () => {\n    try {\n      setLoading(true);\n\n      // Get current user session\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n\n      if (!session?.user) {\n        toast.error(\"Authentication required\");\n        router.replace(\"/auth/login\");\n        return;\n      }\n\n      // Check if the userId in URL matches the logged-in user\n      if (session.user.id !== userId) {\n        toast.error(\"Unauthorized access\");\n        router.replace(`/dashboard/${session.user.id}/ai`);\n        return;\n      }\n\n      setCurrentUser(session.user);\n\n      // Initialize store with minimal data needed for context config\n      try {\n        await initializeStore();\n        // Load context configuration specifically\n        await loadContextConfig();\n      } catch (storeError) {\n        console.warn(\n          \"Store initialization failed, continuing with limited functionality:\",\n          storeError\n        );\n        setError(\"Some features may be limited. Please check your connection.\");\n      }\n    } catch (error) {\n      console.error(\"Error initializing AI configuration page:\", error);\n      setError(\n        \"Failed to initialize the AI configuration. Please refresh the page.\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  }, [\n    initializeStore,\n    setCurrentUser,\n    router,\n    userId,\n    setError,\n    loadContextConfig,\n  ]);\n\n  // Load initial data\n  useEffect(() => {\n    initializePage();\n  }, [initializePage]);\n\n  // Periodic connection check\n  useEffect(() => {\n    if (connectionStatus === \"disconnected\") {\n      const interval = setInterval(checkConnection, 30000); // Check every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, [connectionStatus, checkConnection]);\n\n  // Enhanced retry mechanism\n  const handleRetryConnection = async () => {\n    setRetryCount(0);\n    await checkConnection();\n    if (connectionStatus === \"disconnected\") {\n      await initializePage();\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"mx-auto ml-[4.5vw] bg-white rounded-3xl p-8\">\n        <div className=\"flex items-center justify-center min-h-[400px]\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"text-gray-600\">Loading AI Configuration...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mx-auto ml-[4.5vw] bg-white rounded-3xl p-8\">\n      {/* Connection Status Banner */}\n      {connectionStatus === \"disconnected\" && (\n        <Alert className=\"mb-6 border-red-200 bg-red-50\">\n          <WifiOff className=\"h-4 w-4 text-red-600\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>\n              Connection to AI services lost. Some features may be unavailable.\n            </span>\n            <Button\n              onClick={handleRetryConnection}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"ml-4\"\n            >\n              <RefreshCw className=\"h-3 w-3 mr-1\" />\n              Retry\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Error Banner */}\n      {error && (\n        <Alert className=\"mb-6 border-orange-200 bg-orange-50\">\n          <AlertTriangle className=\"h-4 w-4 text-orange-600\" />\n          <AlertDescription>{error}</AlertDescription>\n        </Alert>\n      )}\n\n      {/* Page Header */}\n      <div className=\"mb-8\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-3\">\n            <BrainCircuit className=\"h-8 w-8 text-blue-600\" />\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">\n                AI Configuration Center\n              </h1>\n              <p className=\"text-gray-600 mt-1\">\n                Configure advanced AI behavior, model settings, and retrieval\n                strategies\n              </p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <Badge\n              variant={\n                connectionStatus === \"connected\" ? \"default\" : \"destructive\"\n              }\n              className=\"flex items-center gap-1\"\n            >\n              <div\n                className={`w-2 h-2 rounded-full ${\n                  connectionStatus === \"connected\"\n                    ? \"bg-green-400\"\n                    : \"bg-red-400\"\n                }`}\n              />\n              {connectionStatus === \"connected\" ? \"Connected\" : \"Disconnected\"}\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      {/* Current Configuration Summary */}\n      {contextConfig && (\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Settings className=\"w-5 h-5\" />\n              Current Configuration Overview\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div>\n                <span className=\"font-medium text-gray-700\">Model Tier:</span>\n                <p className=\"capitalize\">\n                  {contextConfig.model_tier || \"balanced\"}\n                </p>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">\n                  Retrieval Strategy:\n                </span>\n                <p className=\"capitalize\">\n                  {contextConfig.retrieval_strategy || \"hybrid\"}\n                </p>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">\n                  Confidence Threshold:\n                </span>\n                <p>\n                  {Math.round(\n                    (contextConfig.confidence_threshold || 0.7) * 100\n                  )}\n                  %\n                </p>\n              </div>\n              <div>\n                <span className=\"font-medium text-gray-700\">\n                  Context Chunks:\n                </span>\n                <p>{contextConfig.final_context_chunks || 5}</p>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Main Configuration Component */}\n      <ContextEngineering />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}