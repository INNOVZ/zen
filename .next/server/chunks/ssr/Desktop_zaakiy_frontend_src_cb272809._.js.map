{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/tabs.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface TabsContextType {\n  value: string;\n  setValue: (value: string) => void;\n}\n\nconst TabsContext = React.createContext<TabsContextType | null>(null);\n\nconst Tabs = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    value?: string;\n    defaultValue?: string;\n    onValueChange?: (value: string) => void;\n  }\n>(\n  (\n    { className, value, defaultValue, onValueChange, children, ...props },\n    ref\n  ) => {\n    const [internalValue, setInternalValue] = React.useState(\n      defaultValue || \"\"\n    );\n    const currentValue = value ?? internalValue;\n\n    const setValue = React.useCallback(\n      (newValue: string) => {\n        if (value === undefined) {\n          setInternalValue(newValue);\n        }\n        onValueChange?.(newValue);\n      },\n      [value, onValueChange]\n    );\n\n    return (\n      <TabsContext.Provider value={{ value: currentValue, setValue }}>\n        <div ref={ref} className={cn(\"\", className)} {...props}>\n          {children}\n        </div>\n      </TabsContext.Provider>\n    );\n  }\n);\nTabs.displayName = \"Tabs\";\n\nconst TabsList = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = \"TabsList\";\n\nconst TabsTrigger = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement> & { value: string }\n>(({ className, value, ...props }, ref) => {\n  const context = React.useContext(TabsContext);\n  if (!context) throw new Error(\"TabsTrigger must be used within Tabs\");\n\n  const isActive = context.value === value;\n\n  return (\n    <button\n      ref={ref}\n      className={cn(\n        \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n        isActive ? \"bg-background text-foreground shadow-sm\" : \"\",\n        className\n      )}\n      onClick={() => context.setValue(value)}\n      {...props}\n    />\n  );\n});\nTabsTrigger.displayName = \"TabsTrigger\";\n\nconst TabsContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & { value: string }\n>(({ className, value, ...props }, ref) => {\n  const context = React.useContext(TabsContext);\n  if (!context) throw new Error(\"TabsContent must be used within Tabs\");\n\n  if (context.value !== value) return null;\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n        className\n      )}\n      {...props}\n    />\n  );\n});\nTabsContent.displayName = \"TabsContent\";\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;;;;AAOA,MAAM,4BAAc,uPAAmB,CAAyB;AAEhE,MAAM,qBAAO,oPAAgB,CAQ3B,CACE,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAE,GAAG,OAAO,EACrE;IAEA,MAAM,CAAC,eAAe,iBAAiB,GAAG,kPAAc,CACtD,gBAAgB;IAElB,MAAM,eAAe,SAAS;IAE9B,MAAM,WAAW,qPAAiB,CAChC,CAAC;QACC,IAAI,UAAU,WAAW;YACvB,iBAAiB;QACnB;QACA,gBAAgB;IAClB,GACA;QAAC;QAAO;KAAc;IAGxB,qBACE,+QAAC,YAAY,QAAQ;QAAC,OAAO;YAAE,OAAO;YAAc;QAAS;kBAC3D,cAAA,+QAAC;YAAI,KAAK;YAAK,WAAW,IAAA,0JAAE,EAAC,IAAI;YAAa,GAAG,KAAK;sBACnD;;;;;;;;;;;AAIT;AAEF,KAAK,WAAW,GAAG;AAEnB,MAAM,yBAAW,oPAAgB,CAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,+QAAC;QACC,KAAK;QACL,WAAW,IAAA,0JAAE,EACX,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,4BAAc,oPAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE;IACjC,MAAM,UAAU,oPAAgB,CAAC;IACjC,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAE9B,MAAM,WAAW,QAAQ,KAAK,KAAK;IAEnC,qBACE,+QAAC;QACC,KAAK;QACL,WAAW,IAAA,0JAAE,EACX,mSACA,WAAW,4CAA4C,IACvD;QAEF,SAAS,IAAM,QAAQ,QAAQ,CAAC;QAC/B,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG;AAE1B,MAAM,4BAAc,oPAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,GAAG,OAAO,EAAE;IACjC,MAAM,UAAU,oPAAgB,CAAC;IACjC,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;IAE9B,IAAI,QAAQ,KAAK,KAAK,OAAO,OAAO;IAEpC,qBACE,+QAAC;QACC,KAAK;QACL,WAAW,IAAA,0JAAE,EACX,mIACA;QAED,GAAG,KAAK;;;;;;AAGf;AACA,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,+QAAC,0MAAmB;QAClB,aAAU;QACV,WAAW,IAAA,0JAAE,EACX,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/switch.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ComponentRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root> & {\n    thumbClassName?: string;\n  }\n>(({ className, thumbClassName, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-10 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n        thumbClassName\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n"],"names":[],"mappings":";;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,uBAAS,oPAAgB,CAK7B,CAAC,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,OAAO,EAAE,oBAC1C,+QAAC,2MAAqB;QACpB,WAAW,IAAA,0JAAE,EACX,sXACA;QAED,GAAG,KAAK;QACT,KAAK;kBAEL,cAAA,+QAAC,4MAAsB;YACrB,WAAW,IAAA,0JAAE,EACX,8KACA;;;;;;;;;;;AAKR,OAAO,WAAW,GAAG,2MAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/subscription/ChannelConfiguration.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport {\n  Settings,\n  Save,\n  RefreshCw,\n  AlertCircle,\n  CheckCircle,\n  Loader2,\n  Globe,\n  MessageSquare,\n  Smartphone,\n  Camera,\n  Code,\n  Monitor,\n} from \"lucide-react\";\nimport { subscriptionApi } from \"@/app/api/subscription\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { toast } from \"sonner\";\nimport type {\n  SupportedChannels,\n  ChannelConfigurations,\n  ChannelConfigUpdateRequest,\n} from \"@/types/subscription\";\n\ninterface ChannelConfigurationProps {\n  className?: string;\n}\n\nconst CHANNEL_ICONS = {\n  website: Globe,\n  whatsapp: Smartphone,\n  messenger: MessageSquare,\n  instagram: Camera,\n  api: Code,\n  mobile_app: Monitor,\n};\n\nexport const ChannelConfiguration: React.FC<ChannelConfigurationProps> = ({\n  className,\n}) => {\n  const { subscription } = useSubscription();\n  const [supportedChannels, setSupportedChannels] =\n    useState<SupportedChannels | null>(null);\n  const [channelConfigs, setChannelConfigs] =\n    useState<ChannelConfigurations | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [activeTab, setActiveTab] = useState<string>(\"website\");\n\n  useEffect(() => {\n    const loadChannelData = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const [channels, configs] = await Promise.all([\n          subscriptionApi.getSupportedChannels(),\n          subscription?.subscription_id\n            ? subscriptionApi.getChannelConfigurations(\n                subscription.subscription_id\n              )\n            : null,\n        ]);\n\n        setSupportedChannels(channels);\n        setChannelConfigs(configs);\n\n        // Set first channel as active tab\n        if (channels && Object.keys(channels).length > 0) {\n          setActiveTab(Object.keys(channels)[0]);\n        }\n      } catch (err) {\n        console.error(\"Failed to load channel data:\", err);\n        setError(\"Failed to load channel configurations\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadChannelData();\n  }, [subscription?.subscription_id]);\n\n  const handleConfigUpdate = async (\n    channel: string,\n    updates: ChannelConfigUpdateRequest\n  ) => {\n    if (!subscription?.subscription_id) return;\n\n    try {\n      setIsSaving(true);\n\n      const result = await subscriptionApi.updateChannelConfiguration(\n        subscription.subscription_id,\n        channel,\n        updates\n      );\n\n      toast.success(`Channel configuration updated for ${channel}`);\n\n      // Refresh configurations\n      const updatedConfigs = await subscriptionApi.getChannelConfigurations(\n        subscription.subscription_id\n      );\n      setChannelConfigs(updatedConfigs);\n    } catch (err) {\n      console.error(\"Failed to update channel configuration:\", err);\n      toast.error(`Failed to update ${channel} configuration`);\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const getChannelIcon = (channel: string) => {\n    const IconComponent =\n      CHANNEL_ICONS[channel as keyof typeof CHANNEL_ICONS] || Settings;\n    return <IconComponent className=\"w-5 h-5\" />;\n  };\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  if (isLoading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center justify-center\">\n            <Loader2 className=\"w-8 h-8 animate-spin text-blue-500\" />\n            <span className=\"ml-2 text-gray-600\">\n              Loading channel configurations...\n            </span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error || !supportedChannels) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center\">\n            <AlertCircle className=\"w-12 h-12 text-red-500 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Configuration Unavailable\n            </h3>\n            <p className=\"text-gray-600 mb-4\">\n              {error || \"No channel configurations available\"}\n            </p>\n            <Button onClick={() => window.location.reload()}>Try Again</Button>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const channelEntries = Object.entries(supportedChannels);\n\n  return (\n    <div className={className}>\n      <div className=\"mb-6\">\n        <h2 className=\"text-2xl font-bold mb-2\">Channel Configuration</h2>\n        <p className=\"text-gray-600\">\n          Configure settings for each communication channel in your\n          subscription.\n        </p>\n      </div>\n\n      <Tabs\n        value={activeTab}\n        onValueChange={setActiveTab}\n        className=\"space-y-4\"\n      >\n        <TabsList className=\"grid w-full grid-cols-2 md:grid-cols-3 lg:grid-cols-6\">\n          {channelEntries.map(([channelKey, channelInfo]) => (\n            <TabsTrigger\n              key={channelKey}\n              value={channelKey}\n              className=\"flex items-center space-x-2\"\n            >\n              {getChannelIcon(channelKey)}\n              <span className=\"hidden sm:inline capitalize\">{channelKey}</span>\n            </TabsTrigger>\n          ))}\n        </TabsList>\n\n        {channelEntries.map(([channelKey, channelInfo]) => {\n          const config = channelConfigs?.[channelKey];\n          const isEnabled = config?.enabled ?? false;\n\n          return (\n            <TabsContent\n              key={channelKey}\n              value={channelKey}\n              className=\"space-y-4\"\n            >\n              <Card>\n                <CardHeader>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-3\">\n                      {getChannelIcon(channelKey)}\n                      <div>\n                        <CardTitle className=\"capitalize\">\n                          {channelKey} Configuration\n                        </CardTitle>\n                        <p className=\"text-sm text-gray-600\">\n                          {channelInfo.description}\n                        </p>\n                      </div>\n                    </div>\n                    <Badge variant={isEnabled ? \"default\" : \"secondary\"}>\n                      {isEnabled ? \"Enabled\" : \"Disabled\"}\n                    </Badge>\n                  </div>\n                </CardHeader>\n                <CardContent className=\"space-y-6\">\n                  {/* Channel Information */}\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-4 bg-gray-50 rounded-lg\">\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Channel Details</h4>\n                      <div className=\"space-y-1 text-sm\">\n                        <p>\n                          <span className=\"font-medium\">Name:</span>{\" \"}\n                          {channelInfo.name}\n                        </p>\n                        <p>\n                          <span className=\"font-medium\">Description:</span>{\" \"}\n                          {channelInfo.description}\n                        </p>\n                        <p>\n                          <span className=\"font-medium\">Icon:</span>{\" \"}\n                          {channelInfo.icon}\n                        </p>\n                      </div>\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Typical Use Cases</h4>\n                      <ul className=\"text-sm space-y-1\">\n                        {channelInfo.typical_use_cases.map((useCase, index) => (\n                          <li key={index} className=\"flex items-center\">\n                            <CheckCircle className=\"w-3 h-3 text-green-500 mr-2\" />\n                            {useCase}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </div>\n\n                  {/* Configuration Form */}\n                  <div className=\"space-y-4\">\n                    <h4 className=\"font-semibold\">Configuration Settings</h4>\n\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      {/* Enable/Disable */}\n                      <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n                        <div>\n                          <Label\n                            htmlFor={`${channelKey}-enabled`}\n                            className=\"font-medium\"\n                          >\n                            Enable Channel\n                          </Label>\n                          <p className=\"text-sm text-gray-600\">\n                            Allow this channel to receive messages\n                          </p>\n                        </div>\n                        <Switch\n                          id={`${channelKey}-enabled`}\n                          checked={isEnabled}\n                          onCheckedChange={(checked) =>\n                            handleConfigUpdate(channelKey, { enabled: checked })\n                          }\n                          disabled={isSaving}\n                        />\n                      </div>\n\n                      {/* Rate Limit */}\n                      <div className=\"space-y-2\">\n                        <Label htmlFor={`${channelKey}-rate-limit`}>\n                          Rate Limit (messages/minute)\n                        </Label>\n                        <Input\n                          id={`${channelKey}-rate-limit`}\n                          type=\"number\"\n                          value={config?.rate_limit_per_minute || 60}\n                          onChange={(e) =>\n                            handleConfigUpdate(channelKey, {\n                              rate_limit_per_minute: parseInt(e.target.value),\n                            })\n                          }\n                          disabled={isSaving}\n                          min=\"1\"\n                          max=\"1000\"\n                        />\n                      </div>\n\n                      {/* Webhook URL */}\n                      <div className=\"space-y-2 md:col-span-2\">\n                        <Label htmlFor={`${channelKey}-webhook`}>\n                          Webhook URL\n                        </Label>\n                        <Input\n                          id={`${channelKey}-webhook`}\n                          type=\"url\"\n                          value={config?.webhook_url || \"\"}\n                          onChange={(e) =>\n                            handleConfigUpdate(channelKey, {\n                              webhook_url: e.target.value,\n                            })\n                          }\n                          disabled={isSaving}\n                          placeholder=\"https://your-domain.com/webhook\"\n                        />\n                        <p className=\"text-sm text-gray-600\">\n                          URL to receive webhook notifications for this channel\n                        </p>\n                      </div>\n                    </div>\n\n                    {/* Custom Settings */}\n                    <div className=\"space-y-2\">\n                      <Label>Custom Settings</Label>\n                      <div className=\"p-3 border rounded-lg bg-gray-50\">\n                        <pre className=\"text-sm text-gray-600\">\n                          {JSON.stringify(\n                            config?.custom_settings || {},\n                            null,\n                            2\n                          )}\n                        </pre>\n                        <p className=\"text-xs text-gray-500 mt-2\">\n                          Custom settings are managed by the backend API\n                        </p>\n                      </div>\n                    </div>\n\n                    {/* Configuration Status */}\n                    <div className=\"flex items-center justify-between p-3 border rounded-lg\">\n                      <div>\n                        <p className=\"font-medium\">Configuration Status</p>\n                        <p className=\"text-sm text-gray-600\">\n                          Last updated:{\" \"}\n                          {config?.updated_at\n                            ? new Date(config.updated_at).toLocaleString()\n                            : \"Never\"}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        {isEnabled ? (\n                          <CheckCircle className=\"w-5 h-5 text-green-500\" />\n                        ) : (\n                          <AlertCircle className=\"w-5 h-5 text-yellow-500\" />\n                        )}\n                        <span className=\"text-sm font-medium\">\n                          {isEnabled ? \"Active\" : \"Inactive\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Action Buttons */}\n                  <div className=\"flex justify-end space-x-2 pt-4 border-t\">\n                    <Button\n                      variant=\"outline\"\n                      onClick={() => window.location.reload()}\n                      disabled={isSaving}\n                    >\n                      <RefreshCw className=\"w-4 h-4 mr-2\" />\n                      Refresh\n                    </Button>\n                    <Button\n                      onClick={() => handleConfigUpdate(channelKey, {})}\n                      disabled={isSaving}\n                    >\n                      {isSaving ? (\n                        <>\n                          <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                          Saving...\n                        </>\n                      ) : (\n                        <>\n                          <Save className=\"w-4 h-4 mr-2\" />\n                          Save Changes\n                        </>\n                      )}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n          );\n        })}\n      </Tabs>\n\n      {/* Summary */}\n      <Card className=\"mt-6\">\n        <CardHeader>\n          <CardTitle>Configuration Summary</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {channelEntries.map(([channelKey, channelInfo]) => {\n              const config = channelConfigs?.[channelKey];\n              const isEnabled = config?.enabled ?? false;\n\n              return (\n                <div\n                  key={channelKey}\n                  className=\"flex items-center justify-between p-3 border rounded-lg\"\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    {getChannelIcon(channelKey)}\n                    <span className=\"capitalize font-medium\">{channelKey}</span>\n                  </div>\n                  <Badge variant={isEnabled ? \"default\" : \"secondary\"}>\n                    {isEnabled ? \"Enabled\" : \"Disabled\"}\n                  </Badge>\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ChannelConfiguration;\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AA1BA;;;;;;;;;;;;;;AAqCA,MAAM,gBAAgB;IACpB,SAAS,8OAAK;IACd,UAAU,6PAAU;IACpB,WAAW,0QAAa;IACxB,WAAW,iPAAM;IACjB,KAAK,2OAAI;IACT,YAAY,oPAAO;AACrB;AAEO,MAAM,uBAA4D,CAAC,EACxE,SAAS,EACV;IACC,MAAM,EAAE,YAAY,EAAE,GAAG,IAAA,2LAAe;IACxC,MAAM,CAAC,mBAAmB,qBAAqB,GAC7C,IAAA,kPAAQ,EAA2B;IACrC,MAAM,CAAC,gBAAgB,kBAAkB,GACvC,IAAA,kPAAQ,EAA+B;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,kPAAQ,EAAC;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,kPAAQ,EAAC;IACzC,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,kPAAQ,EAAgB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,kPAAQ,EAAS;IAEnD,IAAA,mPAAS,EAAC;QACR,MAAM,kBAAkB;YACtB,IAAI;gBACF,aAAa;gBACb,SAAS;gBAET,MAAM,CAAC,UAAU,QAAQ,GAAG,MAAM,QAAQ,GAAG,CAAC;oBAC5C,qLAAe,CAAC,oBAAoB;oBACpC,cAAc,kBACV,qLAAe,CAAC,wBAAwB,CACtC,aAAa,eAAe,IAE9B;iBACL;gBAED,qBAAqB;gBACrB,kBAAkB;gBAElB,kCAAkC;gBAClC,IAAI,YAAY,OAAO,IAAI,CAAC,UAAU,MAAM,GAAG,GAAG;oBAChD,aAAa,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;gBACvC;YACF,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,gCAAgC;gBAC9C,SAAS;YACX,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG;QAAC,cAAc;KAAgB;IAElC,MAAM,qBAAqB,OACzB,SACA;QAEA,IAAI,CAAC,cAAc,iBAAiB;QAEpC,IAAI;YACF,YAAY;YAEZ,MAAM,SAAS,MAAM,qLAAe,CAAC,0BAA0B,CAC7D,aAAa,eAAe,EAC5B,SACA;YAGF,kLAAK,CAAC,OAAO,CAAC,CAAC,kCAAkC,EAAE,SAAS;YAE5D,yBAAyB;YACzB,MAAM,iBAAiB,MAAM,qLAAe,CAAC,wBAAwB,CACnE,aAAa,eAAe;YAE9B,kBAAkB;QACpB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,2CAA2C;YACzD,kLAAK,CAAC,KAAK,CAAC,CAAC,iBAAiB,EAAE,QAAQ,cAAc,CAAC;QACzD,SAAU;YACR,YAAY;QACd;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,gBACJ,aAAa,CAAC,QAAsC,IAAI,uPAAQ;QAClE,qBAAO,+QAAC;YAAc,WAAU;;;;;;IAClC;IAEA,MAAM,eAAe,CAAC;QACpB,OAAO,IAAI,KAAK,YAAY,GAAG,MAAM,CAAC;IACxC;IAEA,IAAI,WAAW;QACb,qBACE,+QAAC,yKAAI;YAAC,WAAW;sBACf,cAAA,+QAAC,gLAAW;gBAAC,WAAU;0BACrB,cAAA,+QAAC;oBAAI,WAAU;;sCACb,+QAAC,6PAAO;4BAAC,WAAU;;;;;;sCACnB,+QAAC;4BAAK,WAAU;sCAAqB;;;;;;;;;;;;;;;;;;;;;;IAO/C;IAEA,IAAI,SAAS,CAAC,mBAAmB;QAC/B,qBACE,+QAAC,yKAAI;YAAC,WAAW;sBACf,cAAA,+QAAC,gLAAW;gBAAC,WAAU;0BACrB,cAAA,+QAAC;oBAAI,WAAU;;sCACb,+QAAC,oQAAW;4BAAC,WAAU;;;;;;sCACvB,+QAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAG3C,+QAAC;4BAAE,WAAU;sCACV,SAAS;;;;;;sCAEZ,+QAAC,6KAAM;4BAAC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;sCAAI;;;;;;;;;;;;;;;;;;;;;;IAK3D;IAEA,MAAM,iBAAiB,OAAO,OAAO,CAAC;IAEtC,qBACE,+QAAC;QAAI,WAAW;;0BACd,+QAAC;gBAAI,WAAU;;kCACb,+QAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,+QAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;0BAM/B,+QAAC,yKAAI;gBACH,OAAO;gBACP,eAAe;gBACf,WAAU;;kCAEV,+QAAC,6KAAQ;wBAAC,WAAU;kCACjB,eAAe,GAAG,CAAC,CAAC,CAAC,YAAY,YAAY,iBAC5C,+QAAC,gLAAW;gCAEV,OAAO;gCACP,WAAU;;oCAET,eAAe;kDAChB,+QAAC;wCAAK,WAAU;kDAA+B;;;;;;;+BAL1C;;;;;;;;;;oBAUV,eAAe,GAAG,CAAC,CAAC,CAAC,YAAY,YAAY;wBAC5C,MAAM,SAAS,gBAAgB,CAAC,WAAW;wBAC3C,MAAM,YAAY,QAAQ,WAAW;wBAErC,qBACE,+QAAC,gLAAW;4BAEV,OAAO;4BACP,WAAU;sCAEV,cAAA,+QAAC,yKAAI;;kDACH,+QAAC,+KAAU;kDACT,cAAA,+QAAC;4CAAI,WAAU;;8DACb,+QAAC;oDAAI,WAAU;;wDACZ,eAAe;sEAChB,+QAAC;;8EACC,+QAAC,8KAAS;oEAAC,WAAU;;wEAClB;wEAAW;;;;;;;8EAEd,+QAAC;oEAAE,WAAU;8EACV,YAAY,WAAW;;;;;;;;;;;;;;;;;;8DAI9B,+QAAC,2KAAK;oDAAC,SAAS,YAAY,YAAY;8DACrC,YAAY,YAAY;;;;;;;;;;;;;;;;;kDAI/B,+QAAC,gLAAW;wCAAC,WAAU;;0DAErB,+QAAC;gDAAI,WAAU;;kEACb,+QAAC;;0EACC,+QAAC;gEAAG,WAAU;0EAAqB;;;;;;0EACnC,+QAAC;gEAAI,WAAU;;kFACb,+QAAC;;0FACC,+QAAC;gFAAK,WAAU;0FAAc;;;;;;4EAAa;4EAC1C,YAAY,IAAI;;;;;;;kFAEnB,+QAAC;;0FACC,+QAAC;gFAAK,WAAU;0FAAc;;;;;;4EAAoB;4EACjD,YAAY,WAAW;;;;;;;kFAE1B,+QAAC;;0FACC,+QAAC;gFAAK,WAAU;0FAAc;;;;;;4EAAa;4EAC1C,YAAY,IAAI;;;;;;;;;;;;;;;;;;;kEAIvB,+QAAC;;0EACC,+QAAC;gEAAG,WAAU;0EAAqB;;;;;;0EACnC,+QAAC;gEAAG,WAAU;0EACX,YAAY,iBAAiB,CAAC,GAAG,CAAC,CAAC,SAAS,sBAC3C,+QAAC;wEAAe,WAAU;;0FACxB,+QAAC,2QAAW;gFAAC,WAAU;;;;;;4EACtB;;uEAFM;;;;;;;;;;;;;;;;;;;;;;0DAUjB,+QAAC;gDAAI,WAAU;;kEACb,+QAAC;wDAAG,WAAU;kEAAgB;;;;;;kEAE9B,+QAAC;wDAAI,WAAU;;0EAEb,+QAAC;gEAAI,WAAU;;kFACb,+QAAC;;0FACC,+QAAC,2KAAK;gFACJ,SAAS,GAAG,WAAW,QAAQ,CAAC;gFAChC,WAAU;0FACX;;;;;;0FAGD,+QAAC;gFAAE,WAAU;0FAAwB;;;;;;;;;;;;kFAIvC,+QAAC,6KAAM;wEACL,IAAI,GAAG,WAAW,QAAQ,CAAC;wEAC3B,SAAS;wEACT,iBAAiB,CAAC,UAChB,mBAAmB,YAAY;gFAAE,SAAS;4EAAQ;wEAEpD,UAAU;;;;;;;;;;;;0EAKd,+QAAC;gEAAI,WAAU;;kFACb,+QAAC,2KAAK;wEAAC,SAAS,GAAG,WAAW,WAAW,CAAC;kFAAE;;;;;;kFAG5C,+QAAC,2KAAK;wEACJ,IAAI,GAAG,WAAW,WAAW,CAAC;wEAC9B,MAAK;wEACL,OAAO,QAAQ,yBAAyB;wEACxC,UAAU,CAAC,IACT,mBAAmB,YAAY;gFAC7B,uBAAuB,SAAS,EAAE,MAAM,CAAC,KAAK;4EAChD;wEAEF,UAAU;wEACV,KAAI;wEACJ,KAAI;;;;;;;;;;;;0EAKR,+QAAC;gEAAI,WAAU;;kFACb,+QAAC,2KAAK;wEAAC,SAAS,GAAG,WAAW,QAAQ,CAAC;kFAAE;;;;;;kFAGzC,+QAAC,2KAAK;wEACJ,IAAI,GAAG,WAAW,QAAQ,CAAC;wEAC3B,MAAK;wEACL,OAAO,QAAQ,eAAe;wEAC9B,UAAU,CAAC,IACT,mBAAmB,YAAY;gFAC7B,aAAa,EAAE,MAAM,CAAC,KAAK;4EAC7B;wEAEF,UAAU;wEACV,aAAY;;;;;;kFAEd,+QAAC;wEAAE,WAAU;kFAAwB;;;;;;;;;;;;;;;;;;kEAOzC,+QAAC;wDAAI,WAAU;;0EACb,+QAAC,2KAAK;0EAAC;;;;;;0EACP,+QAAC;gEAAI,WAAU;;kFACb,+QAAC;wEAAI,WAAU;kFACZ,KAAK,SAAS,CACb,QAAQ,mBAAmB,CAAC,GAC5B,MACA;;;;;;kFAGJ,+QAAC;wEAAE,WAAU;kFAA6B;;;;;;;;;;;;;;;;;;kEAO9C,+QAAC;wDAAI,WAAU;;0EACb,+QAAC;;kFACC,+QAAC;wEAAE,WAAU;kFAAc;;;;;;kFAC3B,+QAAC;wEAAE,WAAU;;4EAAwB;4EACrB;4EACb,QAAQ,aACL,IAAI,KAAK,OAAO,UAAU,EAAE,cAAc,KAC1C;;;;;;;;;;;;;0EAGR,+QAAC;gEAAI,WAAU;;oEACZ,0BACC,+QAAC,2QAAW;wEAAC,WAAU;;;;;iIAEvB,+QAAC,oQAAW;wEAAC,WAAU;;;;;;kFAEzB,+QAAC;wEAAK,WAAU;kFACb,YAAY,WAAW;;;;;;;;;;;;;;;;;;;;;;;;0DAOhC,+QAAC;gDAAI,WAAU;;kEACb,+QAAC,6KAAM;wDACL,SAAQ;wDACR,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;wDACrC,UAAU;;0EAEV,+QAAC,8PAAS;gEAAC,WAAU;;;;;;4DAAiB;;;;;;;kEAGxC,+QAAC,6KAAM;wDACL,SAAS,IAAM,mBAAmB,YAAY,CAAC;wDAC/C,UAAU;kEAET,yBACC;;8EACE,+QAAC,6PAAO;oEAAC,WAAU;;;;;;gEAA8B;;yFAInD;;8EACE,+QAAC,2OAAI;oEAAC,WAAU;;;;;;gEAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;2BA7LxC;;;;;oBAuMX;;;;;;;0BAIF,+QAAC,yKAAI;gBAAC,WAAU;;kCACd,+QAAC,+KAAU;kCACT,cAAA,+QAAC,8KAAS;sCAAC;;;;;;;;;;;kCAEb,+QAAC,gLAAW;kCACV,cAAA,+QAAC;4BAAI,WAAU;sCACZ,eAAe,GAAG,CAAC,CAAC,CAAC,YAAY,YAAY;gCAC5C,MAAM,SAAS,gBAAgB,CAAC,WAAW;gCAC3C,MAAM,YAAY,QAAQ,WAAW;gCAErC,qBACE,+QAAC;oCAEC,WAAU;;sDAEV,+QAAC;4CAAI,WAAU;;gDACZ,eAAe;8DAChB,+QAAC;oDAAK,WAAU;8DAA0B;;;;;;;;;;;;sDAE5C,+QAAC,2KAAK;4CAAC,SAAS,YAAY,YAAY;sDACrC,YAAY,YAAY;;;;;;;mCARtB;;;;;4BAYX;;;;;;;;;;;;;;;;;;;;;;;AAMZ;uCAEe","debugId":null}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  showCloseButton = true,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\n  showCloseButton?: boolean\n}) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        {showCloseButton && (\n          <DialogPrimitive.Close\n            data-slot=\"dialog-close\"\n            className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\n          >\n            <XIcon />\n            <span className=\"sr-only\">Close</span>\n          </DialogPrimitive.Close>\n        )}\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,+QAAC,2MAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;AAEA,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,+QAAC,8MAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;AAEA,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,+QAAC,6MAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;AAEA,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,+QAAC,4MAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,+QAAC,8MAAuB;QACtB,aAAU;QACV,WAAW,IAAA,0JAAE,EACX,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,kBAAkB,IAAI,EACtB,GAAG,OAGJ;IACC,qBACE,+QAAC;QAAa,aAAU;;0BACtB,+QAAC;;;;;0BACD,+QAAC,8MAAuB;gBACtB,aAAU;gBACV,WAAW,IAAA,0JAAE,EACX,+WACA;gBAED,GAAG,KAAK;;oBAER;oBACA,iCACC,+QAAC,4MAAqB;wBACpB,aAAU;wBACV,WAAU;;0CAEV,+QAAC,0OAAK;;;;;0CACN,+QAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,+QAAC;QACC,aAAU;QACV,WAAW,IAAA,0JAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,+QAAC;QACC,aAAU;QACV,WAAW,IAAA,0JAAE,EACX,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,+QAAC,4MAAqB;QACpB,aAAU;QACV,WAAW,IAAA,0JAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,+QAAC,kNAA2B;QAC1B,aAAU;QACV,WAAW,IAAA,0JAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1234, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/subscription/UpgradeModal.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Check, AlertTriangle, Zap, Crown, Building } from \"lucide-react\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { subscriptionApi } from \"@/app/api/subscription\";\nimport { toast } from \"sonner\";\nimport type { SubscriptionPlans } from \"@/types/subscription\";\n\ninterface UpgradeModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  currentTokensUsed?: number;\n  currentTokensLimit?: number;\n  tokensRequired?: number;\n}\n\nexport const UpgradeModal: React.FC<UpgradeModalProps> = ({\n  isOpen,\n  onClose,\n  currentTokensUsed = 0,\n  currentTokensLimit = 0,\n  tokensRequired = 0,\n}) => {\n  const { plans, refreshSubscription } = useSubscription();\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedPlan, setSelectedPlan] = useState<string | null>(null);\n\n  if (!plans) {\n    return null;\n  }\n\n  const planEntries = Object.entries(plans);\n  const currentPlan = planEntries.find(\n    ([_, plan]) => plan.monthly_token_limit === currentTokensLimit\n  );\n  const upgradeOptions = planEntries.filter(\n    ([_, plan]) => plan.monthly_token_limit > currentTokensLimit\n  );\n\n  const getPlanIcon = (planKey: string) => {\n    switch (planKey) {\n      case \"basic\":\n        return <Zap className=\"w-5 h-5 text-blue-500\" />;\n      case \"professional\":\n        return <Crown className=\"w-5 h-5 text-purple-500\" />;\n      case \"enterprise\":\n        return <Building className=\"w-5 h-5 text-green-500\" />;\n      default:\n        return <Zap className=\"w-5 h-5 text-gray-500\" />;\n    }\n  };\n\n  const getPlanColor = (planKey: string) => {\n    switch (planKey) {\n      case \"basic\":\n        return \"border-blue-200 hover:border-blue-300\";\n      case \"professional\":\n        return \"border-purple-200 hover:border-purple-300\";\n      case \"enterprise\":\n        return \"border-green-200 hover:border-green-300\";\n      default:\n        return \"border-gray-200 hover:border-gray-300\";\n    }\n  };\n\n  const handleUpgrade = async (planKey: string) => {\n    setIsLoading(true);\n    try {\n      // This would typically redirect to a payment processor\n      // For now, we'll show a success message\n      toast.success(\n        `Upgrade to ${\n          plans[planKey as keyof SubscriptionPlans].name\n        } initiated!`\n      );\n\n      // Refresh subscription status\n      await refreshSubscription();\n\n      onClose();\n    } catch (error) {\n      console.error(\"Upgrade failed:\", error);\n      toast.error(\"Upgrade failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const getUsagePercentage = () => {\n    if (currentTokensLimit === 0) return 0;\n    return (currentTokensUsed / currentTokensLimit) * 100;\n  };\n\n  const isNearLimit = getUsagePercentage() >= 80;\n  const isAtLimit = getUsagePercentage() >= 95;\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center space-x-2\">\n            <AlertTriangle className=\"w-6 h-6 text-yellow-500\" />\n            <span>Upgrade Your Plan</span>\n          </DialogTitle>\n          <DialogDescription>\n            {isAtLimit\n              ? \"You've reached your token limit. Upgrade to continue using the service.\"\n              : \"You're approaching your token limit. Upgrade now to avoid interruption.\"}\n          </DialogDescription>\n        </DialogHeader>\n\n        <div className=\"space-y-6\">\n          {/* Current Usage Status */}\n          <Card className=\"bg-yellow-50 border-yellow-200\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"font-semibold text-yellow-800\">\n                    Current Usage\n                  </h3>\n                  <p className=\"text-sm text-yellow-700\">\n                    {formatNumber(currentTokensUsed)} /{\" \"}\n                    {formatNumber(currentTokensLimit)} tokens used\n                  </p>\n                </div>\n                <Badge\n                  variant=\"secondary\"\n                  className=\"bg-yellow-100 text-yellow-800\"\n                >\n                  {getUsagePercentage().toFixed(1)}% Used\n                </Badge>\n              </div>\n              {tokensRequired > 0 && (\n                <div className=\"mt-2 text-sm text-yellow-700\">\n                  <strong>Tokens needed:</strong> {formatNumber(tokensRequired)}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Current Plan */}\n          {currentPlan && (\n            <div>\n              <h3 className=\"text-lg font-semibold mb-3\">Current Plan</h3>\n              <Card className=\"bg-gray-50 border-gray-200\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    {getPlanIcon(currentPlan[0])}\n                    <div>\n                      <h4 className=\"font-semibold\">{currentPlan[1].name}</h4>\n                      <p className=\"text-sm text-gray-600\">\n                        {formatNumber(currentPlan[1].monthly_token_limit)}{\" \"}\n                        tokens/month\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          )}\n\n          {/* Upgrade Options */}\n          <div>\n            <h3 className=\"text-lg font-semibold mb-3\">Upgrade Options</h3>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              {upgradeOptions.map(([planKey, plan]) => (\n                <Card\n                  key={planKey}\n                  className={`cursor-pointer transition-all ${getPlanColor(\n                    planKey\n                  )} ${selectedPlan === planKey ? \"ring-2 ring-blue-500\" : \"\"}`}\n                  onClick={() => setSelectedPlan(planKey)}\n                >\n                  <CardHeader className=\"pb-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        {getPlanIcon(planKey)}\n                        <CardTitle className=\"text-lg\">{plan.name}</CardTitle>\n                      </div>\n                      <Badge variant=\"outline\">Upgrade</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent className=\"space-y-3\">\n                    <div className=\"text-2xl font-bold\">\n                      ${plan.price_per_month}\n                      <span className=\"text-sm font-normal text-gray-500\">\n                        /month\n                      </span>\n                    </div>\n\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Check className=\"w-4 h-4 text-green-500\" />\n                        <span className=\"text-sm\">\n                          {formatNumber(plan.monthly_token_limit)} tokens/month\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Check className=\"w-4 h-4 text-green-500\" />\n                        <span className=\"text-sm\">\n                          {plan.max_chatbots} chatbots\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Check className=\"w-4 h-4 text-green-500\" />\n                        <span className=\"text-sm\">\n                          {plan.max_documents_per_chatbot} documents per chatbot\n                        </span>\n                      </div>\n                      {plan.priority_support && (\n                        <div className=\"flex items-center space-x-2\">\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                          <span className=\"text-sm\">Priority support</span>\n                        </div>\n                      )}\n                      {plan.custom_branding && (\n                        <div className=\"flex items-center space-x-2\">\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                          <span className=\"text-sm\">Custom branding</span>\n                        </div>\n                      )}\n                      {plan.api_access && (\n                        <div className=\"flex items-center space-x-2\">\n                          <Check className=\"w-4 h-4 text-green-500\" />\n                          <span className=\"text-sm\">API access</span>\n                        </div>\n                      )}\n                    </div>\n\n                    <Button\n                      className=\"w-full\"\n                      onClick={() => handleUpgrade(planKey)}\n                      disabled={isLoading}\n                    >\n                      {isLoading ? \"Processing...\" : `Upgrade to ${plan.name}`}\n                    </Button>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n\n          {/* Benefits of Upgrading */}\n          <Card className=\"bg-blue-50 border-blue-200\">\n            <CardContent className=\"p-4\">\n              <h3 className=\"font-semibold text-blue-800 mb-2\">\n                Benefits of Upgrading\n              </h3>\n              <ul className=\"space-y-1 text-sm text-blue-700\">\n                <li>• Higher token limits for more conversations</li>\n                <li>• More chatbots and document capacity</li>\n                <li>• Priority support for faster resolution</li>\n                <li>• Advanced features like API access and custom branding</li>\n                <li>• Longer analytics retention for better insights</li>\n              </ul>\n            </CardContent>\n          </Card>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-end space-x-3 pt-4 border-t\">\n            <Button variant=\"outline\" onClick={onClose}>\n              Maybe Later\n            </Button>\n            {selectedPlan && (\n              <Button\n                onClick={() => handleUpgrade(selectedPlan)}\n                disabled={isLoading}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                {isLoading ? \"Processing...\" : \"Upgrade Now\"}\n              </Button>\n            )}\n          </div>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default UpgradeModal;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1940, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/hooks/useTokenHandling.ts"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { useSubscription } from '@/contexts/SubscriptionContext';\nimport { subscriptionApi } from '@/app/api/subscription';\nimport { toast } from 'sonner';\nimport { UpgradeModal } from '@/components/subscription/UpgradeModal';\n\ninterface TokenError {\n  error: 'Insufficient tokens';\n  tokens_requested: number;\n  tokens_available: number;\n  monthly_limit: number;\n  reset_date: string;\n}\n\nexport const useTokenHandling = () => {\n  const { subscription, consumeTokens, checkTokenAvailability } = useSubscription();\n  const [showUpgradeModal, setShowUpgradeModal] = useState(false);\n  const [tokenError, setTokenError] = useState<TokenError | null>(null);\n\n  const handleTokenError = (error: any) => {\n    console.error('Token error:', error);\n    \n    // Check if it's a token limit error\n    if (error?.status === 402 || error?.detail?.error === 'Insufficient tokens') {\n      const tokenErrorData = error.detail || error;\n      setTokenError(tokenErrorData);\n      setShowUpgradeModal(true);\n      return true; // Indicates error was handled\n    }\n    \n    return false; // Error was not handled\n  };\n\n  const closeUpgradeModal = () => {\n    setShowUpgradeModal(false);\n    setTokenError(null);\n  };\n\n  const estimateTokensForOperation = (\n    operationType: 'chat' | 'document_upload' | 'document_processing' | 'web_scraping' | 'embedding_generation',\n    messageLength?: number,\n    documentSize?: number\n  ): number => {\n    return subscriptionApi.estimateTokensForOperation(operationType, messageLength, documentSize);\n  };\n\n  const checkTokensBeforeOperation = async (\n    operationType: 'chat' | 'document_upload' | 'document_processing' | 'web_scraping' | 'embedding_generation',\n    messageLength?: number,\n    documentSize?: number\n  ): Promise<boolean> => {\n    try {\n      const estimatedTokens = estimateTokensForOperation(operationType, messageLength, documentSize);\n      const availability = await checkTokenAvailability(estimatedTokens);\n      \n      if (!availability.has_enough_tokens) {\n        setTokenError({\n          error: 'Insufficient tokens',\n          tokens_requested: estimatedTokens,\n          tokens_available: availability.tokens_available,\n          monthly_limit: subscription?.monthly_limit || 0,\n          reset_date: subscription?.reset_date || new Date().toISOString(),\n        });\n        setShowUpgradeModal(true);\n        return false;\n      }\n      \n      return true;\n    } catch (error) {\n      console.error('Error checking token availability:', error);\n      // Allow operation to proceed if check fails\n      return true;\n    }\n  };\n\n  const consumeTokensForOperation = async (\n    operationType: 'chat' | 'document_upload' | 'document_processing' | 'web_scraping' | 'embedding_generation',\n    messageLength?: number,\n    documentSize?: number\n  ): Promise<boolean> => {\n    try {\n      const estimatedTokens = estimateTokensForOperation(operationType, messageLength, documentSize);\n      \n      await consumeTokens({\n        entity_id: '', // Will be filled by the API\n        entity_type: 'user', // Will be determined by the API\n        tokens_consumed: estimatedTokens,\n        operation_type: operationType,\n      });\n      \n      return true;\n    } catch (error) {\n      return handleTokenError(error);\n    }\n  };\n\n  const wrapApiCall = async <T>(\n    apiCall: () => Promise<T>,\n    operationType: 'chat' | 'document_upload' | 'document_processing' | 'web_scraping' | 'embedding_generation',\n    messageLength?: number,\n    documentSize?: number\n  ): Promise<T | null> => {\n    try {\n      // Check tokens before making the call\n      const hasEnoughTokens = await checkTokensBeforeOperation(operationType, messageLength, documentSize);\n      if (!hasEnoughTokens) {\n        return null;\n      }\n\n      // Make the API call\n      const result = await apiCall();\n      \n      // Consume tokens after successful operation\n      await consumeTokensForOperation(operationType, messageLength, documentSize);\n      \n      return result;\n    } catch (error) {\n      if (handleTokenError(error)) {\n        return null;\n      }\n      throw error;\n    }\n  };\n\n  return {\n    handleTokenError,\n    estimateTokensForOperation,\n    checkTokensBeforeOperation,\n    consumeTokensForOperation,\n    wrapApiCall,\n    showUpgradeModal,\n    tokenError,\n    closeUpgradeModal,\n  };\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;AAgBO,MAAM,mBAAmB;IAC9B,MAAM,EAAE,YAAY,EAAE,aAAa,EAAE,sBAAsB,EAAE,GAAG,IAAA,2LAAe;IAC/E,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,kPAAQ,EAAC;IACzD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,kPAAQ,EAAoB;IAEhE,MAAM,mBAAmB,CAAC;QACxB,QAAQ,KAAK,CAAC,gBAAgB;QAE9B,oCAAoC;QACpC,IAAI,OAAO,WAAW,OAAO,OAAO,QAAQ,UAAU,uBAAuB;YAC3E,MAAM,iBAAiB,MAAM,MAAM,IAAI;YACvC,cAAc;YACd,oBAAoB;YACpB,OAAO,MAAM,8BAA8B;QAC7C;QAEA,OAAO,OAAO,wBAAwB;IACxC;IAEA,MAAM,oBAAoB;QACxB,oBAAoB;QACpB,cAAc;IAChB;IAEA,MAAM,6BAA6B,CACjC,eACA,eACA;QAEA,OAAO,qLAAe,CAAC,0BAA0B,CAAC,eAAe,eAAe;IAClF;IAEA,MAAM,6BAA6B,OACjC,eACA,eACA;QAEA,IAAI;YACF,MAAM,kBAAkB,2BAA2B,eAAe,eAAe;YACjF,MAAM,eAAe,MAAM,uBAAuB;YAElD,IAAI,CAAC,aAAa,iBAAiB,EAAE;gBACnC,cAAc;oBACZ,OAAO;oBACP,kBAAkB;oBAClB,kBAAkB,aAAa,gBAAgB;oBAC/C,eAAe,cAAc,iBAAiB;oBAC9C,YAAY,cAAc,cAAc,IAAI,OAAO,WAAW;gBAChE;gBACA,oBAAoB;gBACpB,OAAO;YACT;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,4CAA4C;YAC5C,OAAO;QACT;IACF;IAEA,MAAM,4BAA4B,OAChC,eACA,eACA;QAEA,IAAI;YACF,MAAM,kBAAkB,2BAA2B,eAAe,eAAe;YAEjF,MAAM,cAAc;gBAClB,WAAW;gBACX,aAAa;gBACb,iBAAiB;gBACjB,gBAAgB;YAClB;YAEA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,OAAO,iBAAiB;QAC1B;IACF;IAEA,MAAM,cAAc,OAClB,SACA,eACA,eACA;QAEA,IAAI;YACF,sCAAsC;YACtC,MAAM,kBAAkB,MAAM,2BAA2B,eAAe,eAAe;YACvF,IAAI,CAAC,iBAAiB;gBACpB,OAAO;YACT;YAEA,oBAAoB;YACpB,MAAM,SAAS,MAAM;YAErB,4CAA4C;YAC5C,MAAM,0BAA0B,eAAe,eAAe;YAE9D,OAAO;QACT,EAAE,OAAO,OAAO;YACd,IAAI,iBAAiB,QAAQ;gBAC3B,OAAO;YACT;YACA,MAAM;QACR;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 2043, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/dashboard/%5BuserId%5D/subscription/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { TokenUsageWidget } from \"@/components/subscription/TokenUsageWidget\";\nimport { ChannelConfiguration } from \"@/components/subscription/ChannelConfiguration\";\nimport { UpgradeModal } from \"@/components/subscription/UpgradeModal\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { useTokenHandling } from \"@/hooks/useTokenHandling\";\nimport { Button } from \"@/components/ui/button\";\nimport { Settings, Zap, AlertTriangle } from \"lucide-react\";\n\nexport default function SubscriptionPage() {\n  const { subscription, plans } = useSubscription();\n  const { showUpgradeModal, tokenError, closeUpgradeModal } =\n    useTokenHandling();\n\n  const getCurrentPlan = () => {\n    if (!subscription || !plans) return null;\n\n    const planEntries = Object.entries(plans);\n    const currentPlan = planEntries.find(\n      ([, plan]) => plan.monthly_token_limit === subscription.monthly_limit\n    );\n\n    return currentPlan ? { key: currentPlan[0], plan: currentPlan[1] } : null;\n  };\n\n  const currentPlan = getCurrentPlan();\n  const isNearLimit = subscription\n    ? subscription.usage_percentage >= 80\n    : false;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Subscription Management</h1>\n          <p className=\"text-gray-600 mt-1\">\n            Manage your subscription, monitor usage, and configure channels\n          </p>\n        </div>\n        {isNearLimit && (\n          <Button variant=\"destructive\" className=\"flex items-center space-x-2\">\n            <AlertTriangle className=\"w-4 h-4\" />\n            <span>Upgrade Plan</span>\n          </Button>\n        )}\n      </div>\n\n      {/* Current Plan Overview */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <Zap className=\"w-5 h-5\" />\n            <span>Current Plan</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          {currentPlan ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <h3 className=\"text-xl font-semibold\">\n                  {currentPlan.plan.name}\n                </h3>\n                <p className=\"text-gray-600\">\n                  ${currentPlan.plan.price_per_month}/month\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Monthly Token Limit</p>\n                <p className=\"text-lg font-semibold\">\n                  {new Intl.NumberFormat().format(\n                    currentPlan.plan.monthly_token_limit\n                  )}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm text-gray-600\">Max Chatbots</p>\n                <p className=\"text-lg font-semibold\">\n                  {currentPlan.plan.max_chatbots}\n                </p>\n              </div>\n            </div>\n          ) : (\n            <p className=\"text-gray-600\">No subscription plan found</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Token Usage Widget */}\n      <TokenUsageWidget />\n\n      {/* Main Content Tabs */}\n      <Tabs defaultValue=\"channels\" className=\"space-y-4\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"channels\" className=\"flex items-center space-x-2\">\n            <Settings className=\"w-4 h-4\" />\n            <span>Channels</span>\n          </TabsTrigger>\n          <TabsTrigger value=\"settings\" className=\"flex items-center space-x-2\">\n            <Settings className=\"w-4 h-4\" />\n            <span>Settings</span>\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"channels\">\n          <ChannelConfiguration />\n        </TabsContent>\n\n        <TabsContent value=\"settings\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Subscription Settings</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"text-center py-8\">\n                <Settings className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-semibold mb-2\">\n                  Settings Coming Soon\n                </h3>\n                <p className=\"text-gray-600\">\n                  Advanced subscription settings will be available here.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* Upgrade Modal */}\n      <UpgradeModal\n        isOpen={showUpgradeModal}\n        onClose={closeUpgradeModal}\n        currentTokensUsed={subscription?.tokens_used_this_month}\n        currentTokensLimit={subscription?.monthly_limit}\n        tokensRequired={tokenError?.tokens_requested}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAXA;;;;;;;;;;;AAae,SAAS;IACtB,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,GAAG,IAAA,2LAAe;IAC/C,MAAM,EAAE,gBAAgB,EAAE,UAAU,EAAE,iBAAiB,EAAE,GACvD,IAAA,qLAAgB;IAElB,MAAM,iBAAiB;QACrB,IAAI,CAAC,gBAAgB,CAAC,OAAO,OAAO;QAEpC,MAAM,cAAc,OAAO,OAAO,CAAC;QACnC,MAAM,cAAc,YAAY,IAAI,CAClC,CAAC,GAAG,KAAK,GAAK,KAAK,mBAAmB,KAAK,aAAa,aAAa;QAGvE,OAAO,cAAc;YAAE,KAAK,WAAW,CAAC,EAAE;YAAE,MAAM,WAAW,CAAC,EAAE;QAAC,IAAI;IACvE;IAEA,MAAM,cAAc;IACpB,MAAM,cAAc,eAChB,aAAa,gBAAgB,IAAI,KACjC;IAEJ,qBACE,+QAAC;QAAI,WAAU;;0BAEb,+QAAC;gBAAI,WAAU;;kCACb,+QAAC;;0CACC,+QAAC;gCAAG,WAAU;0CAAqB;;;;;;0CACnC,+QAAC;gCAAE,WAAU;0CAAqB;;;;;;;;;;;;oBAInC,6BACC,+QAAC,6KAAM;wBAAC,SAAQ;wBAAc,WAAU;;0CACtC,+QAAC,0QAAa;gCAAC,WAAU;;;;;;0CACzB,+QAAC;0CAAK;;;;;;;;;;;;;;;;;;0BAMZ,+QAAC,yKAAI;;kCACH,+QAAC,+KAAU;kCACT,cAAA,+QAAC,8KAAS;4BAAC,WAAU;;8CACnB,+QAAC,wOAAG;oCAAC,WAAU;;;;;;8CACf,+QAAC;8CAAK;;;;;;;;;;;;;;;;;kCAGV,+QAAC,gLAAW;kCACT,4BACC,+QAAC;4BAAI,WAAU;;8CACb,+QAAC;;sDACC,+QAAC;4CAAG,WAAU;sDACX,YAAY,IAAI,CAAC,IAAI;;;;;;sDAExB,+QAAC;4CAAE,WAAU;;gDAAgB;gDACzB,YAAY,IAAI,CAAC,eAAe;gDAAC;;;;;;;;;;;;;8CAGvC,+QAAC;;sDACC,+QAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,+QAAC;4CAAE,WAAU;sDACV,IAAI,KAAK,YAAY,GAAG,MAAM,CAC7B,YAAY,IAAI,CAAC,mBAAmB;;;;;;;;;;;;8CAI1C,+QAAC;;sDACC,+QAAC;4CAAE,WAAU;sDAAwB;;;;;;sDACrC,+QAAC;4CAAE,WAAU;sDACV,YAAY,IAAI,CAAC,YAAY;;;;;;;;;;;;;;;;;iDAKpC,+QAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;;;;;;0BAMnC,+QAAC,2MAAgB;;;;;0BAGjB,+QAAC,yKAAI;gBAAC,cAAa;gBAAW,WAAU;;kCACtC,+QAAC,6KAAQ;wBAAC,WAAU;;0CAClB,+QAAC,gLAAW;gCAAC,OAAM;gCAAW,WAAU;;kDACtC,+QAAC,uPAAQ;wCAAC,WAAU;;;;;;kDACpB,+QAAC;kDAAK;;;;;;;;;;;;0CAER,+QAAC,gLAAW;gCAAC,OAAM;gCAAW,WAAU;;kDACtC,+QAAC,uPAAQ;wCAAC,WAAU;;;;;;kDACpB,+QAAC;kDAAK;;;;;;;;;;;;;;;;;;kCAIV,+QAAC,gLAAW;wBAAC,OAAM;kCACjB,cAAA,+QAAC,mNAAoB;;;;;;;;;;kCAGvB,+QAAC,gLAAW;wBAAC,OAAM;kCACjB,cAAA,+QAAC,yKAAI;;8CACH,+QAAC,+KAAU;8CACT,cAAA,+QAAC,8KAAS;kDAAC;;;;;;;;;;;8CAEb,+QAAC,gLAAW;oCAAC,WAAU;8CACrB,cAAA,+QAAC;wCAAI,WAAU;;0DACb,+QAAC,uPAAQ;gDAAC,WAAU;;;;;;0DACpB,+QAAC;gDAAG,WAAU;0DAA6B;;;;;;0DAG3C,+QAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUvC,+QAAC,mMAAY;gBACX,QAAQ;gBACR,SAAS;gBACT,mBAAmB,cAAc;gBACjC,oBAAoB,cAAc;gBAClC,gBAAgB,YAAY;;;;;;;;;;;;AAIpC","debugId":null}}]
}