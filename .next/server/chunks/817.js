"use strict";exports.id=817,exports.ids=[817],exports.modules={54659:(a,b,c)=>{c.d(b,{Ex:()=>g,Iu:()=>j,kQ:()=>i,rY:()=>h});var d=c(12751),e=c(19074);let f="http://localhost:8001",g={getChatbots:async()=>{let a=(0,e.O)("/api/chat/chatbots"),b=e.n.get(a);if(b)return b;try{let b=new AbortController,c=setTimeout(()=>{b.abort(Error("Request timeout after 10 seconds"))},1e4),f=await (0,d.v)("/api/chat/chatbots",{signal:b.signal});clearTimeout(c);let g=f.chatbots||f||[];return e.n.set(a,g,12e4),g}catch(a){if(console.error("Error fetching chatbots:",a),a instanceof Error&&("AbortError"===a.name||a.message.includes("timeout")))throw Error("Request timed out. Please try again.");throw a}},getChatbot:async a=>(0,d.v)(`/api/chat/chatbots/${a}`),createChatbot:async a=>{let{userId:b,orgId:c}=await (0,d.F)(),e=c||`user_${b}_org`,f={...a,user_id:b,org_id:e};a.ai_model_config&&(f.ai_model_config=a.ai_model_config),console.log("\uD83E\uDD16 Creating chatbot with config:",{...f,user_id:b.substring(0,8)+"...",org_id:e.substring(0,12)+"..."});let g=await (0,d.v)("/api/chat/chatbots",{method:"POST",body:JSON.stringify(f)});return g.chatbot||g},updateChatbot:async(a,b)=>{let c=await (0,d.v)(`/api/chat/chatbots/${a}`,{method:"PUT",body:JSON.stringify(b)});return c.chatbot||c},deleteChatbot:async a=>{await (0,d.v)(`/api/chat/chatbots/${a}`,{method:"DELETE"})},activateChatbot:async a=>{await (0,d.v)(`/api/chat/chatbots/${a}/activate`,{method:"POST"})},healthCheck:async()=>{try{return await (0,d.v)("/api/chat/health")}catch(a){return console.warn("Health check failed:",a),{status:"degraded",timestamp:new Date().toISOString(),services:{database:"error",chat_service:"error",context_engine:"error"},version:"unknown",error:a instanceof Error?a.message:String(a)}}}},h={getUploads:async()=>{let a=(0,e.O)("/api/uploads"),b=e.n.get(a);if(b)return b;try{let b=new AbortController,c=setTimeout(()=>{b.abort(Error("Request timeout after 8 seconds"))},8e3),f=await (0,d.v)("/api/uploads",{signal:b.signal});clearTimeout(c);let g=[];return Array.isArray(f)?g=f:f.uploads&&Array.isArray(f.uploads)?g=f.uploads:f.data&&Array.isArray(f.data)?g=f.data:(console.warn("Unexpected uploads response structure:",f),g=[]),e.n.set(a,g,6e4),g}catch(a){if(console.error("Error fetching uploads:",a),a instanceof Error&&"AbortError"===a.name)throw Error("Request timed out. Please try again.");throw a}},uploadFile:async(a,b)=>{let{token:c,userId:e,orgId:g}=await (0,d.F)(),h=new FormData;h.append("file",a);let i={Authorization:`Bearer ${c}`,"X-User-ID":e};g&&(i["X-Org-ID"]=g),console.log(`📤 Uploading file: ${a.name} (${a.size} bytes) as ${b}`);let j=await fetch(`${f}/api/uploads/${b}`,{method:"POST",headers:i,body:h});if(!j.ok){let a=await j.text();throw Error(`Upload failed (${j.status}): ${a}`)}let k=await j.json();return console.log(`✅ File uploaded successfully:`,k),k},uploadFileWithTokenHandling:async(a,b,c)=>c?c.wrapApiCall(()=>h.uploadFile(a,b),"document_upload",void 0,a.size):h.uploadFile(a,b),uploadUrl:async a=>(console.log(`🔗 Uploading URL: ${a}`),(0,d.v)("/api/uploads/url",{method:"POST",body:JSON.stringify({url:a})})),uploadJson:async(a,b="training-data.json")=>{console.log(`📋 Uploading JSON data: ${b}`);let c=new File([new Blob([JSON.stringify(a,null,2)],{type:"application/json"})],b,{type:"application/json"});return h.uploadFile(c,"json")},deleteUpload:async a=>{console.log(`🗑️ Deleting upload: ${a}`),await (0,d.v)(`/api/uploads/${a}`,{method:"DELETE"})},reprocessUpload:async a=>(console.log(`🔄 Reprocessing upload: ${a}`),(0,d.v)(`/api/uploads/${a}/reprocess`,{method:"POST"})),getUploadStatus:async a=>(0,d.v)(`/api/uploads/${a}/status`)},i={sendMessage:async(a,b,c)=>{try{let e={message:a,...b&&{chatbot_id:b},...c&&{conversation_id:c}};return console.log("\uD83D\uDCE4 Sending message with payload:",{message:a.substring(0,50)+"...",has_chatbot_id:!!b,has_conversation_id:!!c}),await (0,d.v)("/api/chat/conversation",{method:"POST",body:JSON.stringify(e)})}catch(a){throw console.error("Error sending message:",a),a}},sendMessageWithTokenHandling:async(a,b,c,d)=>d?d.wrapApiCall(()=>i.sendMessage(a,b,c),"chat",a.length):i.sendMessage(a,b,c),getConversations:async a=>{try{let b=await (0,d.v)(`/api/chat/conversations?limit=${a||(10===a?10:1e4)}`);return b.conversations||b||[]}catch(a){throw console.error("Error fetching conversations:",a),a}},getConversationCount:async()=>{try{let a=(0,e.O)("conversation-count"),b=e.n.get(a);if("number"==typeof b)return b;let c=await (0,d.v)("/api/chat/conversations?limit=1000"),f=c.conversations||c||[];return e.n.set(a,f.length,3e4),f.length}catch(a){return console.error("Error fetching conversation count:",a),0}},addFeedback:async a=>(0,d.v)("/api/chat/feedback",{method:"POST",body:JSON.stringify(a)}),getContextConfig:async(a="default")=>{try{let{token:b,userId:c,orgId:e}=await (0,d.F)(),g={"Content-Type":"application/json",Authorization:`Bearer ${b}`,"X-User-ID":c,...e&&{"X-Org-ID":e}},h=await fetch(`${f}/api/chat/context-config?config_name=${a}`,{method:"GET",headers:g});if(!h.ok)return null;return await h.json()}catch{return null}},updateContextConfig:async a=>{if(!a||"object"!=typeof a)throw Error("Invalid context config updates provided");let b=Object.fromEntries(Object.entries(a).filter(([a,b])=>void 0!==b||(console.debug(`⚠️ Removing undefined value for key: ${a}`),!1)));console.debug("\uD83D\uDD27 Updating context config with sanitized payload:",{originalKeys:Object.keys(a),sanitizedKeys:Object.keys(b),payload:b});try{let a={config_updates:b};console.debug("\uD83D\uDCE4 Sending request payload:",JSON.stringify(a,null,2));let{token:c,userId:e,orgId:g}=await (0,d.F)(),h={"Content-Type":"application/json",Authorization:`Bearer ${c}`,"X-User-ID":e,...g&&{"X-Org-ID":g}},i=await fetch(`${f}/api/chat/context-config`,{method:"PUT",headers:h,body:JSON.stringify(a)});if(i.ok){let a=await i.json();return console.debug("✅ Context config update successful"),a||{success:!0,message:"Configuration updated successfully"}}if(404===i.status)return console.debug("⚠️ Context config endpoint not available, using local fallback"),{success:!0,message:"Configuration saved locally (backend endpoint not available)"};if(401!==i.status)return console.warn(`⚠️ Context config update failed with status ${i.status}`),{success:!0,message:"Configuration saved locally. Server sync will retry automatically."};else throw Error("Session expired. Please refresh the page and try again.")}catch(a){if(console.debug("❌ Context config update error:",a),a instanceof Error){if(a.message.includes("Authentication")||a.message.includes("401"))throw Error("Session expired. Please refresh the page and try again.");if(a.message.includes("fetch")||a.message.includes("network"))return console.debug("⚠️ Network error during context config update, using fallback"),{success:!0,message:"Configuration saved locally. Changes will sync when connection is restored."}}return console.debug("⚠️ Context config update error, providing fallback response"),{success:!0,message:"Configuration saved locally. Some features may not sync until connection is restored."}}},createCustomContextConfig:async(a,b="saas",c={})=>(0,d.v)("/api/chat/context-config/custom",{method:"POST",body:JSON.stringify({config_name:a,base_template:b,custom_settings:c})}),getAnalyticsDashboard:async(a=7)=>{try{let b=new AbortController,c=setTimeout(()=>{b.abort(Error("Request timeout after 15 seconds"))},15e3),e=await (0,d.v)(`/api/chat/analytics/dashboard?days=${a}`,{signal:b.signal});return clearTimeout(c),e}catch(a){return console.warn("Analytics dashboard not available:",a),a instanceof Error&&("AbortError"===a.name||a.message.includes("timeout"))&&console.warn("Analytics request timed out"),null}},getPerformanceInsights:async()=>{try{return await (0,d.v)("/api/chat/performance-insights")}catch(a){return console.warn("Performance insights not available:",a),null}},getContextAnalytics:async(a=7)=>{try{return await (0,d.v)(`/api/chat/analytics/context?days=${a}`)}catch(a){return console.warn("Context analytics not available:",a),null}},analyzeQueryOptimization:async a=>{try{return await (0,d.v)("/api/chat/analytics/query-optimization",{method:"POST",body:JSON.stringify({query:a})})}catch(a){return console.warn("Query optimization not available:",a),null}},exportAnalyticsData:async(a,b,c="json")=>(0,d.v)("/api/chat/analytics/export",{method:"POST",body:JSON.stringify({start_date:a,end_date:b,format:c})}),getHealthCheck:async()=>(await fetch(`${f}/api/chat/health`)).json(),getAuthHeaders:async()=>{let{token:a,userId:b,orgId:c}=await (0,d.F)();return{"Content-Type":"application/json",Authorization:`Bearer ${a}`,"X-User-ID":b,...c&&{"X-Org-ID":c}}},testConnection:async()=>{let a=Date.now();try{return await (0,d.v)("/api/chat/health"),{success:!0,responseTime:Date.now()-a}}catch(b){return{success:!1,responseTime:Date.now()-a,error:b instanceof Error?b.message:"Unknown error"}}},getCurrentUserContext:async()=>{try{let{userId:a,orgId:b}=await (0,d.F)();return{userId:a,orgId:b,isAuthenticated:!0}}catch{return{userId:"",orgId:void 0,isAuthenticated:!1}}}},j={getOrganizationInfo:async()=>{try{let a=(0,e.O)("/api/org/info"),b=e.n.get(a);if(b)return b;console.log("\uD83D\uDD0D Fetching organization info from:",`${f}/api/org/info`);try{let b=await (0,d.v)("/api/org/info");return e.n.set(a,b,3e5),b}catch(c){console.warn("Organization endpoint not available, using mock data:",c);let b={user:{email:"user@example.com"},organization:{name:"Demo Organization",email:"org@example.com",plan_id:"free"}};return e.n.set(a,b,6e4),b}}catch(a){throw console.error("Error fetching organization info:",a),console.error("Error details:",{name:a instanceof Error?a.name:"Unknown",message:a instanceof Error?a.message:String(a),stack:a instanceof Error?a.stack:void 0}),a}},updateOrganization:async a=>{try{console.log("\uD83C\uDFE2 Updating organization:",{name:a.name,email:a.email.substring(0,3)+"***"}),console.log("\uD83D\uDD0D Calling organization update endpoint:",`${f}/api/org/update`);try{let b=await (0,d.v)("/api/org/update",{method:"PATCH",body:JSON.stringify(a)});if(console.log("✅ Organization update response:",b),b&&"object"==typeof b){if("success"in b)return e.n.deleteMatching("/api/org"),b;if("message"in b){let c={success:!0,message:b.message,organization:{name:a.name,email:a.email}};return e.n.deleteMatching("/api/org"),c}}console.log("⚠️ Unexpected response format, creating success response");let c={success:!0,message:"Organization updated successfully",organization:{name:a.name,email:a.email}};return e.n.deleteMatching("/api/org"),c}catch(c){for(let b of(console.warn("Organization update endpoint failed, trying alternative paths..."),["/api/user/organization/update","/api/settings/org/update"]))try{console.log(`🔄 Trying alternative endpoint: ${b}`);let c=await (0,d.v)(b,{method:"PATCH",body:JSON.stringify(a)});return console.log(`✅ Success with endpoint: ${b}`),e.n.deleteMatching("/api/org"),c}catch(a){console.log(`❌ Failed with endpoint: ${b}`,a);continue}console.warn("All organization endpoints failed, returning mock success response"),console.warn("Original error:",c);let b={success:!0,message:"Organization updated successfully (mock response - backend endpoint not available)",organization:{name:a.name,email:a.email}};return e.n.deleteMatching("/api/org"),b}}catch(a){throw console.error("Error updating organization:",a),console.error("Error details:",{name:a instanceof Error?a.name:"Unknown",message:a instanceof Error?a.message:String(a),stack:a instanceof Error?a.stack:void 0}),a}},getChatbots:async()=>{try{let a=await (0,d.v)("/api/org/chatbots");return a.chatbots||a||[]}catch(a){throw console.error("Error fetching organization chatbots:",a),a}}}},99187:(a,b,c)=>{c.d(b,{E:()=>h});var d=c(21124);c(38301);var e=c(26691),f=c(44943);let g=(0,e.F)("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground"}},defaultVariants:{variant:"default"}});function h({className:a,variant:b,...c}){return(0,d.jsx)("div",{className:(0,f.cn)(g({variant:b}),a),...c})}}};