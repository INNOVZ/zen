"use strict";exports.id=268,exports.ids=[268],exports.modules={30965:(a,b,c)=>{c.d(b,{iS:()=>j});var d=c(11453),e=c(33699),f=c(54659),g=c(42830);let h={org_id:"",config_name:"default",initial_retrieval_count:20,semantic_rerank_count:10,final_context_chunks:5,max_context_length:4e3,enable_query_rewriting:!0,max_query_variants:3,conversation_context_turns:3,retrieval_strategy:"hybrid",semantic_weight:.6,keyword_weight:.4,model_tier:"balanced",embedding_model:"text-embedding-3-small",rerank_model:"gpt-3.5-turbo",enable_semantic_rerank:!0,enable_hallucination_check:!0,enable_source_verification:!0,confidence_threshold:.7,max_response_time_ms:5e3,enable_caching:!0,cache_ttl_minutes:60,domain_filters:{},business_context:"",specialized_instructions:"",enable_detailed_logging:!0,log_user_queries:!0,collect_feedback:!0,created_at:"",updated_at:""},i={id:"",name:"",description:"",color_hex:"#6a8fff",tone:"helpful",behavior:"Be helpful and informative while maintaining professionalism",system_prompt:"",greeting_message:"Hello! I'm your INNOVZ AI Assistant. How can I help you today?",fallback_message:"I apologize, but I don't have enough information to answer that accurately. Could you please rephrase or provide more context?",ai_model_config:{model:"gpt-4",temperature:.7,max_tokens:1e3},is_active:!0,chain_status:"ready",trainer_at:"",created_at:"",status:"active",deployment_config:{url:"",headers:{},method:"POST"},avatar_url:""},j=(0,d.v)()((0,e.lt)((a,b)=>({loading:!0,saving:!1,activeTab:"basic",showCreateForm:!1,showEmbedModal:!1,isEditMode:!1,analyticsLoading:!1,uploading:!1,currentUser:null,error:null,connectionStatus:"checking",orgChatbots:[],selectedChatbot:null,uploads:[],embedCode:"",performanceMetrics:null,conversations:[],deletingChatbotId:null,contextConfig:h,config:i,chatMessages:[],currentConversationId:null,setLoading:b=>a({loading:b},!1,"setLoading"),setSaving:b=>a({saving:b},!1,"setSaving"),setActiveTab:b=>a({activeTab:b},!1,"setActiveTab"),setShowCreateForm:b=>a({showCreateForm:b},!1,"setShowCreateForm"),setShowEmbedModal:b=>a({showEmbedModal:b},!1,"setShowEmbedModal"),setIsEditMode:b=>a({isEditMode:b},!1,"setIsEditMode"),setAnalyticsLoading:b=>a({analyticsLoading:b},!1,"setAnalyticsLoading"),setUploading:b=>a({uploading:b},!1,"setUploading"),setCurrentUser:b=>a({currentUser:b},!1,"setCurrentUser"),setError:b=>a({error:b},!1,"setError"),setConnectionStatus:b=>a({connectionStatus:b},!1,"setConnectionStatus"),setOrgChatbots:b=>a({orgChatbots:b},!1,"setOrgChatbots"),setSelectedChatbot:b=>a({selectedChatbot:b},!1,"setSelectedChatbot"),setUploads:b=>a({uploads:b},!1,"setUploads"),setEmbedCode:b=>a({embedCode:b},!1,"setEmbedCode"),setPerformanceMetrics:b=>a({performanceMetrics:b},!1,"setPerformanceMetrics"),setDeletingChatbotId:b=>a({deletingChatbotId:b},!1,"setDeletingChatbotId"),setConversations:b=>a({conversations:b},!1,"setConversations"),setChatMessages:b=>a({chatMessages:b},!1,"setChatMessages"),setCurrentConversationId:b=>a({currentConversationId:b},!1,"setCurrentConversationId"),setContextConfig:b=>a({contextConfig:b},!1,"setContextConfig"),updateContextConfig:b=>a(a=>({contextConfig:{...a.contextConfig,...b}}),!1,"updateContextConfig"),setConfig:b=>a({config:b},!1,"setConfig"),updateConfig:b=>a(a=>({config:{...a.config,...b}}),!1,"updateConfig"),loadChatbots:async()=>{try{a({loading:!0,error:null});let b=await f.Ex.getChatbots();a({orgChatbots:b,loading:!1,connectionStatus:"connected"})}catch(e){let c=e instanceof Error&&(e.message.includes("Unable to connect")||e.message.includes("Backend server unavailable")||e.message.includes("ECONNREFUSED")||e.message.includes("Not authenticated")),d=b();d.orgChatbots&&d.orgChatbots.length;console.error("Error loading chatbots:",e),a({error:c?"Backend server unavailable":"Failed to load chatbots",loading:!1,connectionStatus:"disconnected"}),g.oR.error("Failed to load chatbots. Please check your connection.")}},loadUploads:async()=>{try{let b=await f.rY.getUploads();a({uploads:b,connectionStatus:"connected"})}catch(c){let b=c instanceof Error&&(c.message.includes("Unable to connect")||c.message.includes("Backend server unavailable")||c.message.includes("ECONNREFUSED"));console.error("Error loading uploads:",c),a({error:b?"Backend server unavailable":"Failed to load uploads",connectionStatus:"disconnected"}),g.oR.error("Failed to load knowledge base files.")}},loadContextConfig:async()=>{try{let b=await f.kQ.getContextConfig();b&&b.success&&a({contextConfig:b.config,connectionStatus:"connected"})}catch(b){console.error("Error loading context config:",b),a({error:"Failed to load context configuration",connectionStatus:"disconnected"}),g.oR.error("Failed to load AI configuration.")}},loadPerformanceMetrics:async(b=7)=>{try{a({analyticsLoading:!0});let c=await f.kQ.getAnalyticsDashboard(b);a({performanceMetrics:c,analyticsLoading:!1,connectionStatus:"connected"})}catch(b){console.error("Error loading performance metrics:",b),a({performanceMetrics:null,analyticsLoading:!1,error:"Failed to load analytics",connectionStatus:"disconnected"})}},createChatbot:async b=>{try{a({saving:!0,error:null});let c=await f.Ex.createChatbot(b);return a(a=>({orgChatbots:[...a.orgChatbots,c],selectedChatbot:c,saving:!1,showCreateForm:!1,isEditMode:!0,connectionStatus:"connected"})),g.oR.success("Chatbot created successfully!"),c}catch(c){console.error("Error creating chatbot:",c),a({saving:!1,error:"Failed to create chatbot",connectionStatus:"disconnected"});let b=c instanceof Error?c.message:"Failed to create chatbot. Please try again.";return g.oR.error(b),null}},updateChatbot:async(b,c)=>{try{a({saving:!0,error:null});let d=await f.Ex.updateChatbot(b,c);return a(a=>({orgChatbots:a.orgChatbots.map(a=>a.id===b?d:a),selectedChatbot:d,saving:!1,connectionStatus:"connected"})),g.oR.success("Chatbot updated successfully!"),d}catch(c){console.error("Error updating chatbot:",c),a({saving:!1,error:"Failed to update chatbot",connectionStatus:"disconnected"});let b=c instanceof Error?c.message:"Failed to update chatbot. Please try again.";return g.oR.error(b),null}},deleteChatbot:async b=>{try{a({deletingChatbotId:b,error:null}),await f.Ex.deleteChatbot(b),a(a=>({orgChatbots:a.orgChatbots.filter(a=>a.id!==b),selectedChatbot:a.selectedChatbot?.id===b?null:a.selectedChatbot,deletingChatbotId:null,connectionStatus:"connected"})),g.oR.success("Chatbot deleted successfully!")}catch(b){console.error("Error deleting chatbot:",b),a({deletingChatbotId:null,error:"Failed to delete chatbot",connectionStatus:"disconnected"}),g.oR.error("Failed to delete chatbot. Please try again.")}},saveContextConfig:async b=>{try{a({saving:!0,error:null});let c=await f.kQ.updateContextConfig(b);if(c&&c.success)a(a=>({contextConfig:{...a.contextConfig,...b},saving:!1,connectionStatus:"connected"})),g.oR.success("Context configuration updated successfully!");else throw Error(c?.message||"Save failed")}catch(c){console.error("Error saving context config:",c),a({saving:!1,error:"Failed to update context configuration",connectionStatus:"disconnected"});let b=c instanceof Error?`Failed to save: ${c.message}`:"Failed to update context configuration. Please try again.";g.oR.error(b)}},uploadFile:async(b,c)=>{try{a({uploading:!0,error:null});let d=await f.rY.uploadFile(b,c);return a(a=>({uploads:[...a.uploads,d],uploading:!1,connectionStatus:"connected"})),g.oR.success("File uploaded successfully!"),d}catch(b){return console.error("Error uploading file:",b),a({uploading:!1,error:"Failed to upload file",connectionStatus:"disconnected"}),g.oR.error("Failed to upload file. Please try again."),null}},testConnection:async()=>{try{a({connectionStatus:"checking"});try{if(await f.kQ.getHealthCheck()){let b=(await f.kQ.testConnection()).success;return a({connectionStatus:b?"connected":"disconnected"}),b}}catch(a){console.warn("Health check failed, trying direct connection test:",a)}let b=(await f.kQ.testConnection()).success;return a({connectionStatus:b?"connected":"disconnected"}),b}catch(b){return console.error("Connection test failed:",b),a({connectionStatus:"disconnected"}),!1}},generateEmbedCode:b=>{let c=`<script>
  (function() {
    var script = document.createElement('script');
    script.src = '${window.location.origin}/chatbot-widget.js';
    script.setAttribute('data-chatbot-id', '${b}');
    script.setAttribute('data-api-url', 'http://localhost:8001');
    document.head.appendChild(script);
  })();
</script>`;return a({embedCode:c,showEmbedModal:!0}),c},initializeStore:async(c=0)=>{try{let d;a({loading:!0,error:null,connectionStatus:"checking"});try{d=await b().testConnection()}catch(a){console.warn("Initial connection test failed, attempting to continue:",a),d=!1}let e=await Promise.allSettled([f.Ex.getChatbots(),f.rY.getUploads(),f.kQ.getContextConfig()]),i=!1,j=0;if("fulfilled"===e[0].status?(a({orgChatbots:e[0].value}),i=!0):(console.error("Failed to load chatbots:",e[0].reason),j++),"fulfilled"===e[1].status?(a({uploads:e[1].value}),i=!0):console.warn("Failed to load uploads (non-critical):",e[1].reason),"fulfilled"===e[2].status&&e[2].value&&e[2].value.success){let b={...e[2].value.config,org_id:e[2].value.config.org_id||`user_${Date.now()}_org`};a({contextConfig:b}),console.debug("âœ… Context config loaded successfully"),i=!0}else{console.debug("\uD83D\uDD27 Context config not available, using built-in defaults");let b={...h,org_id:`user_${Date.now()}_org`};a({contextConfig:b})}if(i&&0===j)a({loading:!1,connectionStatus:d?"connected":"partial",error:null}),d||g.oR.warning("Some features may be limited due to connectivity issues");else if(i&&j>0&&c<3)return console.log(`Retrying initialization (${c+1}/3) due to critical failures`),await new Promise(a=>setTimeout(a,1e3*Math.pow(2,c))),b().initializeStore(c+1);else if(!i&&c<3)return console.log(`Retrying initialization (${c+1}/3) due to complete failure`),await new Promise(a=>setTimeout(a,1e3*Math.pow(2,c))),b().initializeStore(c+1);else throw Error(`Failed to load critical application data after ${c+1} attempts`)}catch(d){if(console.error("Error initializing store:",d),c<3&&d instanceof Error&&(d.message.includes("network")||d.message.includes("timeout")||d.message.includes("fetch")))return console.log(`Retrying initialization (${c+1}/3) after error:`,d.message),await new Promise(a=>setTimeout(a,1500*Math.pow(2,c))),b().initializeStore(c+1);a({loading:!1,error:`Failed to initialize application${c>0?` after ${c+1} attempts`:""}`,connectionStatus:"disconnected"}),g.oR.error("Failed to initialize application. Please check your connection and try refreshing the page.")}},resetState:()=>a({loading:!0,saving:!1,activeTab:"basic",showCreateForm:!1,showEmbedModal:!1,isEditMode:!1,analyticsLoading:!1,uploading:!1,currentUser:null,error:null,connectionStatus:"checking",orgChatbots:[],selectedChatbot:null,uploads:[],embedCode:"",performanceMetrics:null,conversations:[],deletingChatbotId:null,contextConfig:h,config:i,chatMessages:[],currentConversationId:null},!1,"resetState")}),{name:"customize-store"}))},64772:(a,b,c)=>{c.d(b,{Fc:()=>h,TN:()=>i});var d=c(21124);c(38301);var e=c(26691),f=c(44943);let g=(0,e.F)("relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current",{variants:{variant:{default:"bg-card text-card-foreground",destructive:"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90"}},defaultVariants:{variant:"default"}});function h({className:a,variant:b,...c}){return(0,d.jsx)("div",{"data-slot":"alert",role:"alert",className:(0,f.cn)(g({variant:b}),a),...c})}function i({className:a,...b}){return(0,d.jsx)("div",{"data-slot":"alert-description",className:(0,f.cn)("text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed",a),...b})}}};