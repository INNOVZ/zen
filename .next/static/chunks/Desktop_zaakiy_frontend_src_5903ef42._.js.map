{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,2OAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,0MAAO,EAAC,IAAA,iLAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,2MAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,4MAAI,GAAG;IAE9B,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/utils/userUtils.ts"],"sourcesContent":["import { User } from \"@/types/schemaTypes\";\n\n/**\n * Get the best display name for a user\n * Priority: display_name -> name -> email\n */\nexport const getUserDisplayName = (user: User | null): string => {\n  if (!user) return \"User\";\n  \n  return user.display_name || user.name || user.email || \"User\";\n};\n\n/**\n * Get the user's first name for more personal greetings\n */\nexport const getUserFirstName = (user: User | null): string => {\n  const displayName = getUserDisplayName(user);\n  \n  // If it's an email, return \"User\"\n  if (displayName.includes(\"@\")) {\n    return \"User\";\n  }\n  \n  // Return the first word (first name)\n  return displayName.split(\" \")[0];\n};\n"],"names":[],"mappings":";;;;;;AAMO,MAAM,qBAAqB,CAAC;IACjC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KAAK,YAAY,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI;AACzD;AAKO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,cAAc,mBAAmB;IAEvC,kCAAkC;IAClC,IAAI,YAAY,QAAQ,CAAC,MAAM;QAC7B,OAAO;IACT;IAEA,qCAAqC;IACrC,OAAO,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE;AAClC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,KAIoC;QAJpC,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD,GAJpC;IAKhB,qBACE,8NAAC,gNAAsB;QACrB,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,8NAAC,qNAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,AAAC,eAAiC,OAAnB,MAAM,CAAC,SAAS,CAAC,GAAE;YAAI;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,2MAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,8NAAC;QAAI,WAAW,IAAA,6JAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,2MAAG,EACvB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAIoD;QAJpD,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D,GAJpD;IAKb,qBACE,8NAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,IAAA,6JAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,KAGI;QAHJ,EACxB,SAAS,EACT,GAAG,OACyB,GAHJ;IAIxB,qBACE,8NAAC;QACC,aAAU;QACV,WAAW,IAAA,6JAAE,EACX,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/api/SupabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!SUPABASE_URL || !SUPABASE_ANON_KEY) {\n  console.error('Missing Supabase environment variables:');\n  console.error('NEXT_PUBLIC_SUPABASE_URL:', SUPABASE_URL ? 'Set' : 'Missing');\n  console.error('NEXT_PUBLIC_SUPABASE_ANON_KEY:', SUPABASE_ANON_KEY ? 'Set' : 'Missing');\n  throw new Error('Missing required Supabase environment variables');\n}\n\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n"],"names":[],"mappings":";;;;AAEqB;AAFrB;;AAEA,MAAM;AACN,MAAM;AAEN;;AAOO,MAAM,WAAW,IAAA,2OAAY,EAAC,cAAc","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/api/auth.ts"],"sourcesContent":["// utils/auth.ts\nimport { supabase } from './SupabaseClient'\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\n// Get token and user info from Supabase session\nexport const getAuthInfo = async () => {\n  const { data, error } = await supabase.auth.getSession();\n  \n  if (error) {\n    console.debug(\"Auth session error:\", error);\n    throw new Error(\"Authentication error. Please log in again.\");\n  }\n  \n  const token = data.session?.access_token;\n  const userId = data.session?.user?.id;\n  \n  if (!token || !userId) {\n    console.debug(\"No valid session found - user not authenticated\");\n    throw new Error(\"Not authenticated. Please log in again.\");\n  }\n  \n  // Fetch org_id from database instead of metadata\n  let orgId = null;\n  try {\n    const { data: userData, error: userError } = await supabase\n      .from('users')\n      .select('org_id')\n      .eq('id', userId)\n      .single();\n    \n    if (userError) {\n      console.debug(\"Error fetching user org_id:\", userError);\n    } else if (userData?.org_id) {\n      orgId = userData.org_id;\n      console.debug(\"Fetched org_id from database:\", orgId);\n    }\n  } catch (error) {\n    console.debug(\"Failed to fetch org_id from database:\", error);\n  }\n  \n  return { token, userId, orgId };\n};\n\n\n\n// Custom error type for API errors\ninterface ApiError extends Error {\n  status?: number;\n  statusText?: string;\n  url?: string;\n  errorData?: unknown;\n  errorText?: string;\n}\n\n// Enhanced helper with better error handling and logging\nexport const fetchWithAuth = async (url: string, options: RequestInit = {}) => {\n  const { token, userId, orgId } = await getAuthInfo();\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Bearer ${token}`,\n    \"X-User-ID\": userId,\n    \"X-Request-ID\": `req-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    ...(orgId && { \"X-Org-ID\": orgId }),\n    ...options.headers,\n  };\n\n  const requestId = headers[\"X-Request-ID\"];\n  console.log(`🔍 [${requestId}] API Call:`, `${BASE_URL}${url}`, { \n    userId: userId.substring(0, 8) + \"...\", \n    orgId: orgId?.substring(0, 8) + \"...\" || \"none\",\n    method: options.method || \"GET\"\n  });\n\n  const startTime = Date.now();\n  \n  try {\n    const response = await fetch(`${BASE_URL}${url}`, {\n      ...options,\n      headers,\n    });\n\n    const responseTime = Date.now() - startTime;\n    console.log(`⏱️ [${requestId}] Response:`, response.status, `(${responseTime}ms)`);\n\n    if (!response.ok) {\n      let errorText = '';\n      let errorData = null;\n      let parseError = null;\n      \n      try {\n        // Try to get error as text first\n        errorText = await response.text();\n        \n        // Try to parse as JSON if it looks like JSON\n        if (errorText && (errorText.startsWith('{') || errorText.startsWith('['))) {\n          try {\n            errorData = JSON.parse(errorText);\n          } catch (jsonParseError) {\n            parseError = jsonParseError;\n            console.warn(`⚠️ [${requestId}] JSON parsing failed:`, jsonParseError);\n            // If JSON parsing fails, keep as text\n          }\n        }\n      } catch (responseError) {\n        errorText = 'Failed to read error response';\n        console.warn(`⚠️ [${requestId}] Could not read error response:`, responseError);\n      }\n\n      const errorInfo = {\n        requestId,\n        url: `${BASE_URL}${url}`,\n        method: options.method || \"GET\",\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries()),\n        errorData,\n        errorText: errorText || 'No error text',\n        parseError: parseError instanceof Error ? parseError.message : parseError ? String(parseError) : null,\n        timestamp: new Date().toISOString(),\n        responseTime: Date.now() - startTime,\n      };\n\n      // Enhanced logging with better structure and readability\n      const logError = {\n        requestId,\n        url: errorInfo.url,\n        method: errorInfo.method,\n        status: errorInfo.status,\n        statusText: errorInfo.statusText,\n        message: errorData?.message || errorText || errorInfo.statusText || 'Unknown error',\n        timestamp: errorInfo.timestamp,\n        fullErrorData: errorData,\n        fullErrorText: errorText,\n        responseHeaders: Object.fromEntries(response.headers.entries())\n      };\n      \n      // Reduce console noise for expected failures\n      const isContextConfigEndpoint = url.includes('/context-config');\n      const isOrganizationEndpoint = url.includes('/organization');\n      const isExpectedFailure = response.status === 404 && (isContextConfigEndpoint || isOrganizationEndpoint);\n      \n      if (isExpectedFailure) {\n        console.debug(`📝 [${requestId}] Endpoint not available (expected in development):`, {\n          url: errorInfo.url,\n          status: response.status,\n          endpoint: isContextConfigEndpoint ? 'context-config' : 'organization'\n        });\n      } else {\n        console.error(`❌ [${requestId}] API Error:`, logError);\n        console.error(`💥 [${requestId}] Request failed:`, {\n          summary: `${errorInfo.method} ${errorInfo.url} -> ${errorInfo.status} ${errorInfo.statusText}`,\n          error: errorData?.message || errorText || 'No error details available',\n          responseHeaders: Object.fromEntries(response.headers.entries())\n        });\n      }\n      \n      if (response.status === 401) {\n        throw new Error(\"Authentication expired. Please log in again.\");\n      } else if (response.status === 403) {\n        throw new Error(\"Access denied. Please check your permissions.\");\n      } else if (response.status === 404) {\n        throw new Error(`API endpoint not found: ${url}`);\n      } else if (response.status === 429) {\n        throw new Error(\"Too many requests. Please try again later.\");\n      } else if (response.status >= 500) {\n        throw new Error(\"Server error. Please try again later.\");\n      }\n      \n      const errorMessage = errorData?.message || errorText || response.statusText || `API error (${response.status})`;\n      const enhancedError = new Error(errorMessage) as ApiError;\n      // Add additional context to the error\n      enhancedError.status = response.status;\n      enhancedError.statusText = response.statusText;\n      enhancedError.url = `${BASE_URL}${url}`;\n      enhancedError.errorData = errorData;\n      enhancedError.errorText = errorText;\n      throw enhancedError;\n    }\n\n    try {\n      const data = await response.json();\n      console.log(`✅ [${requestId}] Success:`, typeof data === 'object' ? 'JSON response' : data);\n      return data;\n    } catch (parseError) {\n      console.error(`⚠️ [${requestId}] Failed to parse JSON response:`, parseError);\n      console.error(`⚠️ [${requestId}] Response status:`, response.status, response.statusText);\n      console.error(`⚠️ [${requestId}] Response headers:`, Object.fromEntries(response.headers.entries()));\n      \n      // If JSON parsing fails, try to get the response as text\n      try {\n        const textData = await response.text();\n        console.log(`📄 [${requestId}] Text response:`, textData);\n        \n        // If the response is empty or just whitespace, it might be a successful update\n        if (!textData || textData.trim() === '') {\n          console.log(`📄 [${requestId}] Empty response - likely successful update`);\n          return { success: true, message: 'Update successful' };\n        }\n        \n        return { message: textData };\n      } catch (textError) {\n        console.error(`💥 [${requestId}] Failed to read response as text:`, textError);\n        throw new Error('Failed to parse server response');\n      }\n    }\n    \n  } catch (error) {\n    const responseTime = Date.now() - startTime;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    \n    // Handle network errors with less verbose logging in development\n    if (error instanceof TypeError && error.message.includes('Failed to fetch')) {\n      if (isDevelopment) {\n        console.debug(`🔌 [${requestId}] Backend server unavailable (development mode) - likely auth in progress`);\n      } else {\n        console.error(`💥 [${requestId}] Network error:`, {\n          url: `${BASE_URL}${url}`,\n          method: options.method || \"GET\",\n          responseTime: `${responseTime}ms`\n        });\n      }\n      throw new Error(\"Backend server unavailable. Please check your connection or try again later.\");\n    }\n    \n    // Handle other fetch errors\n    if (error instanceof Error && (\n      error.message.includes('ECONNREFUSED') ||\n      error.message.includes('network') ||\n      error.message.includes('timeout')\n    )) {\n      if (isDevelopment) {\n        console.warn(`🔌 [${requestId}] Connection error: ${error.message}`);\n      } else {\n        console.error(`💥 [${requestId}] Connection error:`, {\n          error: error.message,\n          url: `${BASE_URL}${url}`,\n          method: options.method || \"GET\",\n          responseTime: `${responseTime}ms`\n        });\n      }\n      throw new Error(\"Unable to connect to server. Please try again later.\");\n    }\n    \n    // For unexpected errors, always log detailed information\n    const errorDetails = {\n      error: error,\n      errorMessage: error instanceof Error ? error.message : 'Unknown error',\n      errorType: typeof error,\n      url: `${BASE_URL}${url}`,\n      method: options.method || \"GET\",\n      responseTime: `${responseTime}ms`\n    };\n\n    // Check if this is an empty error object (common issue)\n    if (error && typeof error === 'object' && Object.keys(error).length === 0) {\n      console.warn(`⚠️ [${requestId}] Empty error object detected - this might be a successful request with parsing issues`);\n      console.warn(`⚠️ [${requestId}] Request details:`, {\n        url: errorDetails.url,\n        method: errorDetails.method,\n        responseTime: errorDetails.responseTime\n      });\n    } else {\n      console.error(`💥 [${requestId}] Request failed:`, errorDetails);\n    }\n    \n    throw error;\n  }\n};"],"names":[],"mappings":"AAAA,gBAAgB;;;;;;;AAGC;AAFjB;;AAEA,MAAM,WAAW,6DAAmC;AAG7C,MAAM,cAAc;QAQX,eACC,oBAAA;IARf,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,mLAAQ,CAAC,IAAI,CAAC,UAAU;IAEtD,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,uBAAuB;QACrC,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,SAAQ,gBAAA,KAAK,OAAO,cAAZ,oCAAA,cAAc,YAAY;IACxC,MAAM,UAAS,iBAAA,KAAK,OAAO,cAAZ,sCAAA,qBAAA,eAAc,IAAI,cAAlB,yCAAA,mBAAoB,EAAE;IAErC,IAAI,CAAC,SAAS,CAAC,QAAQ;QACrB,QAAQ,KAAK,CAAC;QACd,MAAM,IAAI,MAAM;IAClB;IAEA,iDAAiD;IACjD,IAAI,QAAQ;IACZ,IAAI;QACF,MAAM,EAAE,MAAM,QAAQ,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,mLAAQ,CACxD,IAAI,CAAC,SACL,MAAM,CAAC,UACP,EAAE,CAAC,MAAM,QACT,MAAM;QAET,IAAI,WAAW;YACb,QAAQ,KAAK,CAAC,+BAA+B;QAC/C,OAAO,IAAI,qBAAA,+BAAA,SAAU,MAAM,EAAE;YAC3B,QAAQ,SAAS,MAAM;YACvB,QAAQ,KAAK,CAAC,iCAAiC;QACjD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;IACzD;IAEA,OAAO;QAAE;QAAO;QAAQ;IAAM;AAChC;AAcO,MAAM,gBAAgB,eAAO;QAAa,2EAAuB,CAAC;IACvE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM;IAEvC,MAAM,UAAU;QACd,gBAAgB;QAChB,iBAAiB,AAAC,UAAe,OAAN;QAC3B,aAAa;QACb,gBAAgB,AAAC,OAAoB,OAAd,KAAK,GAAG,IAAG,KAA2C,OAAxC,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;QAC1E,GAAI,SAAS;YAAE,YAAY;QAAM,CAAC;QAClC,GAAG,QAAQ,OAAO;IACpB;IAEA,MAAM,YAAY,OAAO,CAAC,eAAe;IACzC,QAAQ,GAAG,CAAC,AAAC,OAAgB,OAAV,WAAU,gBAAc,AAAC,GAAa,OAAX,UAAe,OAAJ,MAAO;QAC9D,QAAQ,OAAO,SAAS,CAAC,GAAG,KAAK;QACjC,OAAO,CAAA,kBAAA,4BAAA,MAAO,SAAS,CAAC,GAAG,MAAK,SAAS;QACzC,QAAQ,QAAQ,MAAM,IAAI;IAC5B;IAEA,MAAM,YAAY,KAAK,GAAG;IAE1B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,AAAC,GAAa,OAAX,UAAe,OAAJ,MAAO;YAChD,GAAG,OAAO;YACV;QACF;QAEA,MAAM,eAAe,KAAK,GAAG,KAAK;QAClC,QAAQ,GAAG,CAAC,AAAC,OAAgB,OAAV,WAAU,gBAAc,SAAS,MAAM,EAAE,AAAC,IAAgB,OAAb,cAAa;QAE7E,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,IAAI,YAAY;YAChB,IAAI,YAAY;YAChB,IAAI,aAAa;YAEjB,IAAI;gBACF,iCAAiC;gBACjC,YAAY,MAAM,SAAS,IAAI;gBAE/B,6CAA6C;gBAC7C,IAAI,aAAa,CAAC,UAAU,UAAU,CAAC,QAAQ,UAAU,UAAU,CAAC,IAAI,GAAG;oBACzE,IAAI;wBACF,YAAY,KAAK,KAAK,CAAC;oBACzB,EAAE,OAAO,gBAAgB;wBACvB,aAAa;wBACb,QAAQ,IAAI,CAAC,AAAC,OAAgB,OAAV,WAAU,2BAAyB;oBACvD,sCAAsC;oBACxC;gBACF;YACF,EAAE,OAAO,eAAe;gBACtB,YAAY;gBACZ,QAAQ,IAAI,CAAC,AAAC,OAAgB,OAAV,WAAU,qCAAmC;YACnE;YAEA,MAAM,YAAY;gBAChB;gBACA,KAAK,AAAC,GAAa,OAAX,UAAe,OAAJ;gBACnB,QAAQ,QAAQ,MAAM,IAAI;gBAC1B,QAAQ,SAAS,MAAM;gBACvB,YAAY,SAAS,UAAU;gBAC/B,SAAS,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;gBACpD;gBACA,WAAW,aAAa;gBACxB,YAAY,sBAAsB,QAAQ,WAAW,OAAO,GAAG,aAAa,OAAO,cAAc;gBACjG,WAAW,IAAI,OAAO,WAAW;gBACjC,cAAc,KAAK,GAAG,KAAK;YAC7B;YAEA,yDAAyD;YACzD,MAAM,WAAW;gBACf;gBACA,KAAK,UAAU,GAAG;gBAClB,QAAQ,UAAU,MAAM;gBACxB,QAAQ,UAAU,MAAM;gBACxB,YAAY,UAAU,UAAU;gBAChC,SAAS,CAAA,sBAAA,gCAAA,UAAW,OAAO,KAAI,aAAa,UAAU,UAAU,IAAI;gBACpE,WAAW,UAAU,SAAS;gBAC9B,eAAe;gBACf,eAAe;gBACf,iBAAiB,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;YAC9D;YAEA,6CAA6C;YAC7C,MAAM,0BAA0B,IAAI,QAAQ,CAAC;YAC7C,MAAM,yBAAyB,IAAI,QAAQ,CAAC;YAC5C,MAAM,oBAAoB,SAAS,MAAM,KAAK,OAAO,CAAC,2BAA2B,sBAAsB;YAEvG,IAAI,mBAAmB;gBACrB,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,wDAAsD;oBACnF,KAAK,UAAU,GAAG;oBAClB,QAAQ,SAAS,MAAM;oBACvB,UAAU,0BAA0B,mBAAmB;gBACzD;YACF,OAAO;gBACL,QAAQ,KAAK,CAAC,AAAC,MAAe,OAAV,WAAU,iBAAe;gBAC7C,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,sBAAoB;oBACjD,SAAS,AAAC,GAAsB,OAApB,UAAU,MAAM,EAAC,KAAuB,OAApB,UAAU,GAAG,EAAC,QAA0B,OAApB,UAAU,MAAM,EAAC,KAAwB,OAArB,UAAU,UAAU;oBAC5F,OAAO,CAAA,sBAAA,gCAAA,UAAW,OAAO,KAAI,aAAa;oBAC1C,iBAAiB,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;gBAC9D;YACF;YAEA,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,MAAM,IAAI,MAAM;YAClB,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,MAAM,IAAI,MAAM;YAClB,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,MAAM,IAAI,MAAM,AAAC,2BAA8B,OAAJ;YAC7C,OAAO,IAAI,SAAS,MAAM,KAAK,KAAK;gBAClC,MAAM,IAAI,MAAM;YAClB,OAAO,IAAI,SAAS,MAAM,IAAI,KAAK;gBACjC,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,eAAe,CAAA,sBAAA,gCAAA,UAAW,OAAO,KAAI,aAAa,SAAS,UAAU,IAAI,AAAC,cAA6B,OAAhB,SAAS,MAAM,EAAC;YAC7G,MAAM,gBAAgB,IAAI,MAAM;YAChC,sCAAsC;YACtC,cAAc,MAAM,GAAG,SAAS,MAAM;YACtC,cAAc,UAAU,GAAG,SAAS,UAAU;YAC9C,cAAc,GAAG,GAAG,AAAC,GAAa,OAAX,UAAe,OAAJ;YAClC,cAAc,SAAS,GAAG;YAC1B,cAAc,SAAS,GAAG;YAC1B,MAAM;QACR;QAEA,IAAI;YACF,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,QAAQ,GAAG,CAAC,AAAC,MAAe,OAAV,WAAU,eAAa,OAAO,SAAS,WAAW,kBAAkB;YACtF,OAAO;QACT,EAAE,OAAO,YAAY;YACnB,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,qCAAmC;YAClE,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,uBAAqB,SAAS,MAAM,EAAE,SAAS,UAAU;YACxF,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,wBAAsB,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;YAEhG,yDAAyD;YACzD,IAAI;gBACF,MAAM,WAAW,MAAM,SAAS,IAAI;gBACpC,QAAQ,GAAG,CAAC,AAAC,OAAgB,OAAV,WAAU,qBAAmB;gBAEhD,+EAA+E;gBAC/E,IAAI,CAAC,YAAY,SAAS,IAAI,OAAO,IAAI;oBACvC,QAAQ,GAAG,CAAC,AAAC,OAAgB,OAAV,WAAU;oBAC7B,OAAO;wBAAE,SAAS;wBAAM,SAAS;oBAAoB;gBACvD;gBAEA,OAAO;oBAAE,SAAS;gBAAS;YAC7B,EAAE,OAAO,WAAW;gBAClB,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,uCAAqC;gBACpE,MAAM,IAAI,MAAM;YAClB;QACF;IAEF,EAAE,OAAO,OAAO;QACd,MAAM,eAAe,KAAK,GAAG,KAAK;QAClC,MAAM,gBAAgB,oDAAyB;QAE/C,iEAAiE;QACjE,IAAI,iBAAiB,aAAa,MAAM,OAAO,CAAC,QAAQ,CAAC,oBAAoB;YAC3E,wCAAmB;gBACjB,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU;YACjC;;YAOA,MAAM,IAAI,MAAM;QAClB;QAEA,4BAA4B;QAC5B,IAAI,iBAAiB,SAAS,CAC5B,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,cACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,UACzB,GAAG;YACD,wCAAmB;gBACjB,QAAQ,IAAI,CAAC,AAAC,OAAsC,OAAhC,WAAU,wBAAoC,OAAd,MAAM,OAAO;YACnE;;YAQA,MAAM,IAAI,MAAM;QAClB;QAEA,yDAAyD;QACzD,MAAM,eAAe;YACnB,OAAO;YACP,cAAc,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YACvD,WAAW,OAAO;YAClB,KAAK,AAAC,GAAa,OAAX,UAAe,OAAJ;YACnB,QAAQ,QAAQ,MAAM,IAAI;YAC1B,cAAc,AAAC,GAAe,OAAb,cAAa;QAChC;QAEA,wDAAwD;QACxD,IAAI,SAAS,OAAO,UAAU,YAAY,OAAO,IAAI,CAAC,OAAO,MAAM,KAAK,GAAG;YACzE,QAAQ,IAAI,CAAC,AAAC,OAAgB,OAAV,WAAU;YAC9B,QAAQ,IAAI,CAAC,AAAC,OAAgB,OAAV,WAAU,uBAAqB;gBACjD,KAAK,aAAa,GAAG;gBACrB,QAAQ,aAAa,MAAM;gBAC3B,cAAc,aAAa,YAAY;YACzC;QACF,OAAO;YACL,QAAQ,KAAK,CAAC,AAAC,OAAgB,OAAV,WAAU,sBAAoB;QACrD;QAEA,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/utils/cache.ts"],"sourcesContent":["// Simple in-memory cache for API responses\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  ttl: number; // Time to live in milliseconds\n}\n\nclass SimpleCache {\n  private cache = new Map<string, CacheEntry<unknown>>();\n\n  set<T>(key: string, data: T, ttlMs: number = 5 * 60 * 1000): void {\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl: ttlMs,\n    });\n  }\n\n  get<T>(key: string): T | null {\n    const entry = this.cache.get(key);\n\n    if (!entry) {\n      return null;\n    }\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return entry.data as T;\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  delete(key: string): boolean {\n    return this.cache.delete(key);\n  }\n\n  has(key: string): boolean {\n    const entry = this.cache.get(key);\n    \n    if (!entry) {\n      return false;\n    }\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return false;\n    }\n\n    return true;\n  }\n\n  // Get all keys that match a pattern\n  getKeysMatching(pattern: string): string[] {\n    const matchingKeys: string[] = [];\n    for (const key of this.cache.keys()) {\n      if (key.includes(pattern)) {\n        matchingKeys.push(key);\n      }\n    }\n    return matchingKeys;\n  }\n\n  // Delete all entries matching a pattern\n  deleteMatching(pattern: string): number {\n    const keysToDelete = this.getKeysMatching(pattern);\n    keysToDelete.forEach(key => this.cache.delete(key));\n    return keysToDelete.length;\n  }\n\n  // Clean up expired entries\n  cleanup(): void {\n    const now = Date.now();\n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp > entry.ttl) {\n        this.cache.delete(key);\n      }\n    }\n  }\n}\n\nexport const apiCache = new SimpleCache();\n\n// Clean up expired entries every 5 minutes\nif (typeof window !== \"undefined\") {\n  setInterval(() => {\n    apiCache.cleanup();\n  }, 5 * 60 * 1000);\n}\n\n// Helper function to create cache keys\nexport const createCacheKey = (\n  endpoint: string,\n  params?: Record<string, unknown>\n): string => {\n  const paramString = params ? JSON.stringify(params) : \"\";\n  return `${endpoint}${paramString}`;\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;;;;;AAO3C,MAAM;IAGJ,IAAO,GAAW,EAAE,IAAO,EAAuC;YAArC,QAAA,iEAAgB,IAAI,KAAK;QACpD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAClB;YACA,WAAW,KAAK,GAAG;YACnB,KAAK;QACP;IACF;IAEA,IAAO,GAAW,EAAY;QAC5B,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE7B,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClB,OAAO;QACT;QAEA,OAAO,MAAM,IAAI;IACnB;IAEA,QAAc;QACZ,IAAI,CAAC,KAAK,CAAC,KAAK;IAClB;IAEA,OAAO,GAAW,EAAW;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B;IAEA,IAAI,GAAW,EAAW;QACxB,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE7B,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClB,OAAO;QACT;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,gBAAgB,OAAe,EAAY;QACzC,MAAM,eAAyB,EAAE;QACjC,KAAK,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI;YACnC,IAAI,IAAI,QAAQ,CAAC,UAAU;gBACzB,aAAa,IAAI,CAAC;YACpB;QACF;QACA,OAAO;IACT;IAEA,wCAAwC;IACxC,eAAe,OAAe,EAAU;QACtC,MAAM,eAAe,IAAI,CAAC,eAAe,CAAC;QAC1C,aAAa,OAAO,CAAC,CAAA,MAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9C,OAAO,aAAa,MAAM;IAC5B;IAEA,2BAA2B;IAC3B,UAAgB;QACd,MAAM,MAAM,KAAK,GAAG;QACpB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI;YAC/C,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACpB;QACF;IACF;;QA5EA,gNAAQ,SAAQ,IAAI;;AA6EtB;AAEO,MAAM,WAAW,IAAI;AAE5B,2CAA2C;AAC3C,wCAAmC;IACjC,YAAY;QACV,SAAS,OAAO;IAClB,GAAG,IAAI,KAAK;AACd;AAGO,MAAM,iBAAiB,CAC5B,UACA;IAEA,MAAM,cAAc,SAAS,KAAK,SAAS,CAAC,UAAU;IACtD,OAAO,AAAC,GAAa,OAAX,UAAuB,OAAZ;AACvB","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/api/subscription.ts"],"sourcesContent":["// Subscription API Client\n// Based on backend SUBSCRIPTION_SYSTEM_GUIDE.md\n\nimport { getAuthInfo, fetchWithAuth } from \"@/app/api/auth\";\nimport { apiCache, createCacheKey } from \"@/utils/cache\";\nimport type {\n  SubscriptionPlans,\n  SubscriptionStatus,\n  TokenConsumptionRequest,\n  TokenConsumptionResponse,\n  TokenAvailabilityCheck,\n  SupportedChannels,\n  ChannelConfigurations,\n  SubscriptionAnalytics,\n  ChannelComparison,\n  ChannelTrends,\n  SignupRequest,\n  SignupResponse,\n  ChannelConfigUpdateRequest,\n  ChannelConfigUpdateResponse,\n} from \"@/types/subscription\";\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\nexport const subscriptionApi = {\n  // ==========================================\n  // SUBSCRIPTION PLANS\n  // ==========================================\n\n  getPlans: async (): Promise<SubscriptionPlans> => {\n    const cacheKey = createCacheKey(\"/api/onboarding/plans\");\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionPlans>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/plans\");\n      const plans = data.plans || data;\n\n      // Cache for 1 hour (plans don't change frequently)\n      apiCache.set(cacheKey, plans, 60 * 60 * 1000);\n\n      return plans;\n    } catch (error) {\n      console.error(\"Error fetching subscription plans:\", error);\n\n      // Return mock plans for development\n      const mockPlans: SubscriptionPlans = {\n        basic: {\n          name: \"Basic Plan\",\n          monthly_token_limit: 10000,\n          price_per_month: 29.99,\n          max_chatbots: 3,\n          max_documents_per_chatbot: 50,\n          priority_support: false,\n          custom_branding: false,\n          api_access: false,\n          analytics_retention_days: 30,\n        },\n        professional: {\n          name: \"Professional Plan\",\n          monthly_token_limit: 50000,\n          price_per_month: 99.99,\n          max_chatbots: 10,\n          max_documents_per_chatbot: 200,\n          priority_support: true,\n          custom_branding: true,\n          api_access: true,\n          analytics_retention_days: 90,\n        },\n        enterprise: {\n          name: \"Enterprise Plan\",\n          monthly_token_limit: 200000,\n          price_per_month: 299.99,\n          max_chatbots: 50,\n          max_documents_per_chatbot: 1000,\n          priority_support: true,\n          custom_branding: true,\n          api_access: true,\n          analytics_retention_days: 365,\n        },\n      };\n\n      // Cache mock data for 5 minutes\n      apiCache.set(cacheKey, mockPlans, 5 * 60 * 1000);\n      return mockPlans;\n    }\n  },\n\n  // ==========================================\n  // USER/ORGANIZATION SIGNUP\n  // ==========================================\n\n  signup: async (request: SignupRequest): Promise<SignupResponse> => {\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/admin/signup\", {\n        method: \"POST\",\n        body: JSON.stringify(request),\n      });\n      return data;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\n          \"Request timed out. Please check if the server is running.\"\n        );\n      }\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // SUBSCRIPTION STATUS\n  // ==========================================\n\n  getSubscriptionStatus: async (\n    entityType: \"user\" | \"organization\",\n    entityId: string\n  ): Promise<SubscriptionStatus> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/subscription/${entityType}/${entityId}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionStatus>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const data = await fetchWithAuth(\n        `/api/onboarding/subscription/${entityType}/${entityId}`\n      );\n\n      // Cache for 30 seconds (status changes frequently)\n      apiCache.set(cacheKey, data, 30 * 1000);\n\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching subscription status:\", error);\n\n      // Return mock status for development - indicating no subscription\n      const mockStatus: SubscriptionStatus = {\n        subscription_id: \"\",\n        tokens_used_this_month: 0,\n        tokens_remaining: 0,\n        monthly_limit: 0,\n        usage_percentage: 0,\n        reset_date: \"\",\n      };\n\n      // Cache mock data for 1 minute\n      apiCache.set(cacheKey, mockStatus, 60 * 1000);\n      return mockStatus;\n    }\n  },\n\n  // ==========================================\n  // TOKEN MANAGEMENT\n  // ==========================================\n\n  consumeTokens: async (\n    request: TokenConsumptionRequest\n  ): Promise<TokenConsumptionResponse> => {\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/tokens/consume\", {\n        method: \"POST\",\n        body: JSON.stringify(request),\n      });\n\n      // Invalidate subscription status cache\n      apiCache.deleteMatching(\"/api/onboarding/subscription\");\n\n      return data;\n    } catch (error) {\n      console.error(\"Error consuming tokens:\", error);\n      throw error;\n    }\n  },\n\n  checkTokenAvailability: async (\n    entityType: \"user\" | \"organization\",\n    entityId: string,\n    requiredTokens: number\n  ): Promise<TokenAvailabilityCheck> => {\n    try {\n      const data = await fetchWithAuth(\n        `/api/onboarding/tokens/check/${entityType}/${entityId}/${requiredTokens}`\n      );\n      return data;\n    } catch (error) {\n      console.error(\"Error checking token availability:\", error);\n\n      // Return mock availability for development\n      return {\n        success: true,\n        has_enough_tokens: true,\n        tokens_required: requiredTokens,\n        tokens_available: 7500,\n        can_proceed: true,\n      };\n    }\n  },\n\n  // ==========================================\n  // CHANNEL MANAGEMENT\n  // ==========================================\n\n  getSupportedChannels: async (): Promise<SupportedChannels> => {\n    const cacheKey = createCacheKey(\"/api/onboarding/channels\");\n\n    // Check cache first\n    const cached = apiCache.get<SupportedChannels>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/onboarding/channels`);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch channels: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const channels = data.channels || data;\n\n      // Cache for 1 hour\n      apiCache.set(cacheKey, channels, 60 * 60 * 1000);\n\n      return channels;\n    } catch (error) {\n      console.error(\"Error fetching supported channels:\", error);\n\n      // Return mock channels for development\n      const mockChannels: SupportedChannels = {\n        website: {\n          name: \"Website Chat\",\n          description: \"Embedded chat widget on websites\",\n          icon: \"🌐\",\n          typical_use_cases: [\"Customer support\", \"Lead generation\", \"FAQ\"],\n        },\n        whatsapp: {\n          name: \"WhatsApp Business\",\n          description: \"WhatsApp Business API integration\",\n          icon: \"📱\",\n          typical_use_cases: [\"Customer service\", \"Order updates\", \"Marketing\"],\n        },\n        messenger: {\n          name: \"Facebook Messenger\",\n          description: \"Facebook Messenger integration\",\n          icon: \"💬\",\n          typical_use_cases: [\n            \"Social commerce\",\n            \"Customer support\",\n            \"Engagement\",\n          ],\n        },\n        instagram: {\n          name: \"Instagram Direct\",\n          description: \"Instagram Direct Messages integration\",\n          icon: \"📸\",\n          typical_use_cases: [\n            \"Brand engagement\",\n            \"Product inquiries\",\n            \"Support\",\n          ],\n        },\n        api: {\n          name: \"REST API\",\n          description: \"API integration for custom applications\",\n          icon: \"🔌\",\n          typical_use_cases: [\n            \"Custom apps\",\n            \"System integration\",\n            \"Automation\",\n          ],\n        },\n        mobile_app: {\n          name: \"Mobile App\",\n          description: \"Mobile application integration\",\n          icon: \"📲\",\n          typical_use_cases: [\n            \"In-app support\",\n            \"User onboarding\",\n            \"Feature guidance\",\n          ],\n        },\n      };\n\n      // Cache mock data for 1 hour\n      apiCache.set(cacheKey, mockChannels, 60 * 60 * 1000);\n      return mockChannels;\n    }\n  },\n\n  getChannelConfigurations: async (\n    subscriptionId: string\n  ): Promise<ChannelConfigurations> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/subscription/${subscriptionId}/channels/config`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelConfigurations>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/subscription/${subscriptionId}/channels/config`\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch channel configurations: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n      const configurations = data.configurations || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, configurations, 5 * 60 * 1000);\n\n      return configurations;\n    } catch (error) {\n      console.error(\"Error fetching channel configurations:\", error);\n      throw error;\n    }\n  },\n\n  updateChannelConfiguration: async (\n    subscriptionId: string,\n    channel: string,\n    request: ChannelConfigUpdateRequest\n  ): Promise<ChannelConfigUpdateResponse> => {\n    try {\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers: Record<string, string> = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n      };\n\n      if (orgId) {\n        headers[\"X-Org-ID\"] = orgId;\n      }\n\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/subscription/${subscriptionId}/channels/${channel}/config`,\n        {\n          method: \"PUT\",\n          headers,\n          body: JSON.stringify(request),\n        }\n      );\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.detail ||\n            `Channel configuration update failed: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n\n      // Invalidate channel configuration cache\n      apiCache.deleteMatching(\n        `/api/onboarding/subscription/${subscriptionId}/channels`\n      );\n\n      return data;\n    } catch (error) {\n      console.error(\"Error updating channel configuration:\", error);\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // ANALYTICS\n  // ==========================================\n\n  getSubscriptionAnalytics: async (\n    subscriptionId: string,\n    daysBack: number = 30\n  ): Promise<SubscriptionAnalytics> => {\n    if (!subscriptionId) {\n      throw new Error(\"Subscription ID is required\");\n    }\n\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionAnalytics>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          signal: controller.signal,\n        }\n      );\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage =\n          errorData.detail || `Failed to fetch analytics: ${response.status}`;\n        throw new Error(errorMessage);\n      }\n\n      const data = await response.json();\n      const analytics = data.analytics || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, analytics, 5 * 60 * 1000);\n\n      return analytics;\n    } catch (error) {\n      console.error(\"Error fetching subscription analytics:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\n          \"Request timed out. Please check if the server is running.\"\n        );\n      }\n      throw error;\n    }\n  },\n\n  getChannelComparison: async (\n    subscriptionId: string,\n    daysBack: number = 30\n  ): Promise<ChannelComparison> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}/channels/comparison?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelComparison>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}/channels/comparison?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch channel comparison: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n      const comparison = data.comparison || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, comparison, 5 * 60 * 1000);\n\n      return comparison;\n    } catch (error) {\n      console.error(\"Error fetching channel comparison:\", error);\n      throw error;\n    }\n  },\n\n  getChannelTrends: async (\n    subscriptionId: string,\n    channel: string,\n    daysBack: number = 30\n  ): Promise<ChannelTrends> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}/channels/${channel}/trends?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelTrends>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}/channels/${channel}/trends?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch channel trends: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const trends = data.trends || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, trends, 5 * 60 * 1000);\n\n      return trends;\n    } catch (error) {\n      console.error(\"Error fetching channel trends:\", error);\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // UTILITY METHODS\n  // ==========================================\n\n  estimateTokensForOperation: (\n    operationType:\n      | \"chat\"\n      | \"document_upload\"\n      | \"document_processing\"\n      | \"web_scraping\"\n      | \"embedding_generation\",\n    messageLength?: number,\n    documentSize?: number\n  ): number => {\n    switch (operationType) {\n      case \"chat\":\n        return 100 + (messageLength || 0) / 4;\n      case \"document_upload\":\n        return 500 + (documentSize || 0) / 100;\n      case \"document_processing\":\n        return 200;\n      case \"web_scraping\":\n        return 300;\n      case \"embedding_generation\":\n        return 50;\n      default:\n        return 100;\n    }\n  },\n\n  // Helper to invalidate subscription-related cache\n  invalidateSubscriptionCache: () => {\n    apiCache.deleteMatching(\"/api/onboarding\");\n    console.log(\"Subscription cache invalidated\");\n  },\n\n  // Debug function to test subscription endpoints\n  debugSubscriptionEndpoints: async () => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n      console.log(\"🔍 Debug: Testing subscription endpoints\", { userId: userId.substring(0, 8) + \"...\", orgId: orgId?.substring(0, 8) + \"...\" || \"none\" });\n\n      const results: {\n        backendHealth: boolean;\n        backendUrl: string;\n        userSubscription: SubscriptionStatus | null;\n        orgSubscription: SubscriptionStatus | null;\n        plans: SubscriptionPlans | null;\n        errors: Array<{ type: string; error: string }>;\n      } = {\n        backendHealth: false,\n        backendUrl: BASE_URL,\n        userSubscription: null,\n        orgSubscription: null,\n        plans: null,\n        errors: []\n      };\n\n      // Test backend health first\n      try {\n        console.log(\"🔍 Testing backend health at:\", BASE_URL);\n        const healthResponse = await fetch(`${BASE_URL}/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        results.backendHealth = healthResponse.ok;\n        console.log(\"✅ Backend health:\", results.backendHealth, \"Status:\", healthResponse.status);\n        \n        if (!healthResponse.ok) {\n          const errorText = await healthResponse.text();\n          console.log(\"❌ Backend response:\", errorText);\n          results.errors.push({ type: \"backend\", error: `Backend returned ${healthResponse.status}: ${errorText}` });\n        }\n      } catch (error) {\n        console.error(\"❌ Backend health error:\", error);\n        results.errors.push({ type: \"backend\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      // Test user subscription\n      try {\n        console.log(\"🔍 Testing user subscription endpoint...\");\n        results.userSubscription = await subscriptionApi.getSubscriptionStatus(\"user\", userId);\n        console.log(\"✅ User subscription result:\", results.userSubscription);\n      } catch (error) {\n        console.error(\"❌ User subscription error:\", error);\n        results.errors.push({ type: \"user\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      // Test organization subscription if orgId exists\n      if (orgId) {\n        try {\n          console.log(\"🔍 Testing organization subscription endpoint...\");\n          results.orgSubscription = await subscriptionApi.getSubscriptionStatus(\"organization\", orgId);\n          console.log(\"✅ Organization subscription result:\", results.orgSubscription);\n        } catch (error) {\n          console.error(\"❌ Organization subscription error:\", error);\n          results.errors.push({ type: \"organization\", error: error instanceof Error ? error.message : String(error) });\n        }\n      }\n\n      // Test plans endpoint\n      try {\n        console.log(\"🔍 Testing plans endpoint...\");\n        results.plans = await subscriptionApi.getPlans();\n        console.log(\"✅ Plans result:\", results.plans);\n      } catch (error) {\n        console.error(\"❌ Plans error:\", error);\n        results.errors.push({ type: \"plans\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      console.log(\"🔍 Debug results summary:\", results);\n      return results;\n    } catch (error) {\n      console.error(\"❌ Debug function error:\", error);\n      return { error: error instanceof Error ? error.message : String(error) };\n    }\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1297, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/contexts/SubscriptionContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from \"react\";\nimport { subscriptionApi } from \"@/app/api/subscription\";\nimport { getAuthInfo } from \"@/app/api/auth\";\nimport type {\n  SubscriptionContextType,\n  SubscriptionStatus,\n  SubscriptionPlans,\n  TokenAvailabilityCheck,\n  TokenConsumptionRequest,\n  TokenConsumptionResponse,\n} from \"@/types/subscription\";\n\nconst SubscriptionContext = createContext<SubscriptionContextType | undefined>(\n  undefined\n);\n\ninterface SubscriptionProviderProps {\n  children: ReactNode;\n}\n\nexport const SubscriptionProvider: React.FC<SubscriptionProviderProps> = ({\n  children,\n}) => {\n  const [subscription, setSubscription] = useState<SubscriptionStatus | null>(\n    null\n  );\n  const [plans, setPlans] = useState<SubscriptionPlans | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load subscription plans on mount\n  useEffect(() => {\n    const loadPlans = async () => {\n      try {\n        const plansData = await subscriptionApi.getPlans();\n        setPlans(plansData);\n      } catch (err) {\n        console.error(\"Failed to load subscription plans:\", err);\n        setError(\"Failed to load subscription plans\");\n      }\n    };\n\n    loadPlans();\n  }, []);\n\n  // Load subscription status when user is authenticated\n  useEffect(() => {\n    const loadSubscriptionStatus = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const { userId, orgId } = await getAuthInfo();\n\n        // FIXED: Try both user and organization subscriptions\n        // Priority: organization subscription first, then user subscription\n        let response: SubscriptionStatus | null = null;\n        let entityType = \"\";\n\n        // First try organization subscription if user has orgId\n        if (orgId) {\n          try {\n            response = await subscriptionApi.getSubscriptionStatus(\n              \"organization\",\n              orgId\n            );\n            entityType = \"organization\";\n            console.log(\"Found organization subscription:\", response);\n          } catch {\n            console.log(\n              \"No organization subscription found, trying user subscription\"\n            );\n            response = null;\n          }\n        }\n\n        // If no organization subscription or no orgId, try user subscription\n        if (!response || response.has_subscription === false) {\n          try {\n            response = await subscriptionApi.getSubscriptionStatus(\n              \"user\",\n              userId\n            );\n            entityType = \"user\";\n            console.log(\"Found user subscription:\", response);\n          } catch {\n            console.log(\"No user subscription found either\");\n            response = null;\n          }\n        }\n\n        // Handle the response\n        if (!response || response.has_subscription === false) {\n          console.log(\"No subscription found for user or organization\");\n          setSubscription(null);\n          setError(\n            \"No subscription found. Please contact admin to set up your subscription.\"\n          );\n        } else {\n          // Convert response to SubscriptionStatus format\n          const status: SubscriptionStatus = {\n            subscription_id: response.subscription_id || \"\",\n            tokens_used_this_month: response.tokens_used_this_month || 0,\n            tokens_remaining: response.tokens_remaining || 0,\n            monthly_limit: response.monthly_limit || 0,\n            usage_percentage: response.usage_percentage || 0,\n            reset_date: response.reset_date || \"\",\n            plan_name: response.plan_name || \"Basic Plan\",\n          };\n          setSubscription(status);\n          console.log(\n            `Successfully loaded ${entityType} subscription:`,\n            status\n          );\n        }\n      } catch (err) {\n        console.error(\"Failed to load subscription status:\", err);\n\n        // FIXED: Better error handling\n        if (err instanceof Error) {\n          if (err.message.includes(\"Not authenticated\")) {\n            // User not logged in - this is normal\n            setSubscription(null);\n            setError(null);\n          } else if (\n            err.message.includes(\"Failed to fetch subscription status: 500\")\n          ) {\n            // Server error - likely no subscription exists\n            setSubscription(null);\n            setError(\n              \"No subscription found. Please contact admin to set up your subscription.\"\n            );\n          } else {\n            setError(\"Failed to load subscription status\");\n          }\n        } else {\n          setError(\"Failed to load subscription status\");\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadSubscriptionStatus();\n\n    // Refresh subscription status every 30 seconds\n    const interval = setInterval(loadSubscriptionStatus, 30000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const refreshSubscription = async () => {\n    try {\n      setError(null);\n      const { userId, orgId } = await getAuthInfo();\n\n      // FIXED: Try both user and organization subscriptions\n      // Priority: organization subscription first, then user subscription\n      let response: SubscriptionStatus | null = null;\n      let entityType = \"\";\n\n      // First try organization subscription if user has orgId\n      if (orgId) {\n        try {\n          response = await subscriptionApi.getSubscriptionStatus(\n            \"organization\",\n            orgId\n          );\n          entityType = \"organization\";\n          console.log(\"Refreshed organization subscription:\", response);\n        } catch {\n          console.log(\n            \"No organization subscription found, trying user subscription\"\n          );\n          response = null;\n        }\n      }\n\n      // If no organization subscription or no orgId, try user subscription\n      if (!response || response.has_subscription === false) {\n        try {\n          response = await subscriptionApi.getSubscriptionStatus(\n            \"user\",\n            userId\n          );\n          entityType = \"user\";\n          console.log(\"Refreshed user subscription:\", response);\n        } catch {\n          console.log(\"No user subscription found either\");\n          response = null;\n        }\n      }\n\n      // Handle the response\n      if (!response || response.has_subscription === false) {\n        setSubscription(null);\n        setError(\n          \"No subscription found. Please contact admin to set up your subscription.\"\n        );\n      } else {\n        const status: SubscriptionStatus = {\n          subscription_id: response.subscription_id || \"\",\n          tokens_used_this_month: response.tokens_used_this_month || 0,\n          tokens_remaining: response.tokens_remaining || 0,\n          monthly_limit: response.monthly_limit || 0,\n          usage_percentage: response.usage_percentage || 0,\n          reset_date: response.reset_date || \"\",\n          plan_name: response.plan_name || \"Basic Plan\",\n        };\n        setSubscription(status);\n        console.log(\n          `Successfully refreshed ${entityType} subscription:`,\n          status\n        );\n      }\n    } catch (err) {\n      console.error(\"Failed to refresh subscription status:\", err);\n      setError(\"Failed to refresh subscription status\");\n    }\n  };\n\n  const checkTokenAvailability = async (\n    requiredTokens: number\n  ): Promise<TokenAvailabilityCheck> => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n\n      // FIXED: Try both user and organization subscriptions\n      // Priority: organization subscription first, then user subscription\n      let result: TokenAvailabilityCheck | null = null;\n\n      // First try organization subscription if user has orgId\n      if (orgId) {\n        try {\n          result = await subscriptionApi.checkTokenAvailability(\n            \"organization\",\n            orgId,\n            requiredTokens\n          );\n          console.log(\"Checked organization token availability:\", result);\n        } catch {\n          console.log(\n            \"No organization subscription found, trying user subscription\"\n          );\n          result = null;\n        }\n      }\n\n      // If no organization subscription or no orgId, try user subscription\n      if (!result) {\n        try {\n          result = await subscriptionApi.checkTokenAvailability(\n            \"user\",\n            userId,\n            requiredTokens\n          );\n          console.log(\"Checked user token availability:\", result);\n        } catch {\n          console.log(\"No user subscription found either\");\n          result = null;\n        }\n      }\n\n      // Return result or default response\n      if (result) {\n        return result;\n      } else {\n        return {\n          success: false,\n          has_enough_tokens: false,\n          tokens_required: requiredTokens,\n          tokens_available: 0,\n          can_proceed: false,\n        };\n      }\n    } catch (err) {\n      console.error(\"Failed to check token availability:\", err);\n\n      // FIXED: Return appropriate response for no subscription\n      return {\n        success: false,\n        has_enough_tokens: false,\n        tokens_required: requiredTokens,\n        tokens_available: 0,\n        can_proceed: false,\n      };\n    }\n  };\n\n  const consumeTokens = async (\n    request: TokenConsumptionRequest\n  ): Promise<TokenConsumptionResponse> => {\n    try {\n      const response = await subscriptionApi.consumeTokens(request);\n\n      // Refresh subscription status after consuming tokens\n      await refreshSubscription();\n\n      return response;\n    } catch (err) {\n      console.error(\"Failed to consume tokens:\", err);\n      throw err;\n    }\n  };\n\n  const value: SubscriptionContextType = {\n    subscription,\n    plans,\n    isLoading,\n    error,\n    refreshSubscription,\n    checkTokenAvailability,\n    consumeTokens,\n  };\n\n  return (\n    <SubscriptionContext.Provider value={value}>\n      {children}\n    </SubscriptionContext.Provider>\n  );\n};\n\nexport const useSubscription = (): SubscriptionContextType => {\n  const context = useContext(SubscriptionContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useSubscription must be used within a SubscriptionProvider\"\n    );\n  }\n  return context;\n};\n\n// Hook for token estimation\nexport const useTokenEstimation = () => {\n  const estimateTokens = (\n    operationType:\n      | \"chat\"\n      | \"document_upload\"\n      | \"document_processing\"\n      | \"web_scraping\"\n      | \"embedding_generation\",\n    messageLength?: number,\n    documentSize?: number\n  ): number => {\n    return subscriptionApi.estimateTokensForOperation(\n      operationType,\n      messageLength,\n      documentSize\n    );\n  };\n\n  return { estimateTokens };\n};\n\n// Hook for subscription limits\nexport const useSubscriptionLimits = () => {\n  const { subscription, plans } = useSubscription();\n\n  const getCurrentPlan = () => {\n    if (!subscription || !plans) return null;\n\n    // Find plan by monthly limit\n    const planEntries = Object.entries(plans);\n    const currentPlan = planEntries.find(\n      ([, plan]) => plan.monthly_token_limit === subscription.monthly_limit\n    );\n\n    return currentPlan ? { key: currentPlan[0], plan: currentPlan[1] } : null;\n  };\n\n  const getUpgradeOptions = () => {\n    if (!plans) return [];\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return Object.entries(plans);\n\n    const planEntries = Object.entries(plans);\n    return planEntries.filter(\n      ([, plan]) => plan.monthly_token_limit > subscription!.monthly_limit\n    );\n  };\n\n  const isNearLimit = (threshold: number = 0.9) => {\n    if (!subscription) return false;\n    return subscription.usage_percentage >= threshold * 100;\n  };\n\n  const canCreateChatbot = () => {\n    if (!subscription || !plans) return true;\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return true;\n\n    // This would need to be tracked separately - for now return true\n    return true;\n  };\n\n  const canUploadDocument = () => {\n    if (!subscription || !plans) return true;\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return true;\n\n    // This would need to be tracked separately - for now return true\n    return true;\n  };\n\n  return {\n    getCurrentPlan,\n    getUpgradeOptions,\n    isNearLimit,\n    canCreateChatbot,\n    canUploadDocument,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/subscription/SimpleSubscriptionStatus.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { Zap, Calendar, AlertTriangle, Loader2, RefreshCw } from \"lucide-react\";\n\ninterface SimpleSubscriptionStatusProps {\n  className?: string;\n  showRefreshButton?: boolean;\n}\n\nexport const SimpleSubscriptionStatus: React.FC<\n  SimpleSubscriptionStatusProps\n> = ({ className, showRefreshButton = true }) => {\n  const { subscription, isLoading, error, refreshSubscription } =\n    useSubscription();\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const formatPercentage = (num: number) => {\n    return `${num.toFixed(1)}%`;\n  };\n\n  if (isLoading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center justify-center space-x-2\">\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n            <span className=\"text-sm\">Loading subscription...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"flex items-center justify-between\">\n              <span>{error}</span>\n              {showRefreshButton && (\n                <RefreshCw\n                  className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform\"\n                  onClick={refreshSubscription}\n                />\n              )}\n            </AlertDescription>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!subscription) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center text-gray-500\">\n            <Zap className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p className=\"text-sm\">No subscription found</p>\n            <p className=\"text-xs mt-1\">\n              Please contact admin to set up your subscription\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const usagePercentage = subscription.usage_percentage;\n  const isNearLimit = usagePercentage >= 80;\n  const isAtLimit = usagePercentage >= 95;\n\n  const getProgressColor = () => {\n    if (isAtLimit) return \"bg-red-500\";\n    if (isNearLimit) return \"bg-yellow-500\";\n    return \"bg-blue-500\";\n  };\n\n  const getStatusBadge = () => {\n    if (isAtLimit)\n      return <Badge className=\"bg-red-100 text-red-800\">At Limit</Badge>;\n    if (isNearLimit)\n      return (\n        <Badge className=\"bg-yellow-100 text-yellow-800\">Near Limit</Badge>\n      );\n    return <Badge className=\"bg-green-100 text-green-800\">Healthy</Badge>;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center justify-between text-lg\">\n          <span className=\"flex items-center\">\n            <Zap className=\"h-5 w-5 mr-2 text-blue-500\" />\n            Subscription Status\n          </span>\n          {showRefreshButton && (\n            <RefreshCw\n              className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform text-gray-400\"\n              onClick={refreshSubscription}\n            />\n          )}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Plan Information */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-600\">Current Plan</p>\n            <p className=\"text-lg font-semibold\">\n              {subscription.plan_name || \"Basic Plan\"}\n            </p>\n          </div>\n          {getStatusBadge()}\n        </div>\n\n        {/* Token Usage */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">Token Usage</span>\n            <span className=\"font-medium\">\n              {formatNumber(subscription.tokens_used_this_month)} /{\" \"}\n              {formatNumber(subscription.monthly_limit)}\n            </span>\n          </div>\n          <Progress value={usagePercentage} className=\"h-2\" />\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <span>{formatPercentage(usagePercentage)} used</span>\n            <span>{formatNumber(subscription.tokens_remaining)} remaining</span>\n          </div>\n        </div>\n\n        {/* Billing Cycle */}\n        <div className=\"flex items-center justify-between text-sm\">\n          <div className=\"flex items-center text-gray-600\">\n            <Calendar className=\"h-4 w-4 mr-1\" />\n            <span>Resets</span>\n          </div>\n          <span className=\"font-medium\">\n            {new Date(subscription.reset_date).toLocaleDateString()}\n          </span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2081, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/layout/SideBar.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname, useParams } from \"next/navigation\";\nimport {\n  Home,\n  Settings,\n  Brain,\n  ChevronLeft,\n  ChevronRight,\n  LogOut,\n  User,\n  BrainCircuit,\n} from \"lucide-react\";\n\nimport { RiRobot3Line } from \"react-icons/ri\";\nimport { supabase } from \"@/lib/supabase\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast } from \"sonner\";\nimport type { User as SupabaseUser } from \"@supabase/supabase-js\";\nimport { getUserDisplayName } from \"@/utils/userUtils\";\nimport { SimpleSubscriptionStatus } from \"@/components/subscription/SimpleSubscriptionStatus\";\n\nconst Sidebar = () => {\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const [user, setUser] = useState<SupabaseUser | null>(null);\n  const pathname = usePathname();\n  const params = useParams();\n\n  useEffect(() => {\n    const getUser = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n      if (session?.user) {\n        setUser(session.user);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Get userId from params or user state\n  const currentUserId = params?.userId || user?.id;\n\n  // Create a function to get the correct path for menu items\n  const getMenuItemPath = (basePath: string) => {\n    return currentUserId\n      ? `/dashboard/${currentUserId}${basePath}`\n      : `/dashboard${basePath}`;\n  };\n\n  const menuItems = [\n    {\n      title: \"Dashboard\",\n      icon: <Home size={20} />,\n      path: getMenuItemPath(\"\"),\n    },\n    {\n      title: \"Train\",\n      icon: <Brain size={20} />,\n      path: getMenuItemPath(\"/train\"),\n    },\n    {\n      title: \"AI\",\n      icon: <BrainCircuit size={20} />,\n      path: getMenuItemPath(\"/ai\"),\n    },\n    {\n      title: \"Customize\",\n      icon: <RiRobot3Line size={20} />,\n      path: getMenuItemPath(\"/customize\"),\n    },\n    {\n      title: \"Settings\",\n      icon: <Settings size={20} />,\n      path: getMenuItemPath(\"/settings\"),\n    },\n  ];\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      toast.error(\"Error logging out\");\n    } else {\n      toast.success(\"Logged out successfully\");\n      window.location.href = \"/auth/login\";\n    }\n  };\n\n  return (\n    <div\n      className={`${\n        isCollapsed ? \"w-[4.5vw]\" : \"sm:w-60 w-60 z-[999]\"\n      } min-h-screen bg-[#0a0a60] text-white transition-all-ease-in-out duration-400 fixed left-0 top-0 flex flex-col`}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-r border-gray-700 overflow-y-auto\">\n        {!isCollapsed && (\n          <span className=\"text-xl font-bold text-white\">Zentria Pro</span>\n        )}\n        <button\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          className=\"p-2 rounded-lg pointer\"\n        >\n          {isCollapsed ? (\n            <ChevronRight size={20} color=\"#fff\" />\n          ) : (\n            <ChevronLeft size={20} color=\"#fff\" />\n          )}\n        </button>\n      </div>\n\n      {/* User Info */}\n      {!isCollapsed && user && (\n        <div className=\"p-4 border-r border-gray-700 overflow-y-auto\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center\">\n              <User size={16} className=\"text-white\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-white truncate\">\n                {getUserDisplayName({\n                  id: user.id,\n                  email: user.email || \"\",\n                  name: user.user_metadata?.name || \"\",\n                  display_name: user.user_metadata?.display_name || \"\",\n                })}\n              </p>\n              <p className=\"text-xs text-white\">\n                User ID: {user.id.slice(0, 8)}...\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Navigation */}\n      <nav className=\"p-4 flex-1 border-r border-gray-700 overflow-y-auto\">\n        <ul className=\"space-y-2\">\n          {menuItems.map((item, index) => {\n            // Normalize paths by removing trailing slashes\n            const normalizedItemPath = item.path.replace(/\\/$/, \"\");\n            const normalizedPathname = pathname.replace(/\\/$/, \"\");\n\n            // Much simpler and more reliable active state logic\n            let isActive = false;\n\n            // Split paths into segments for comparison\n            const pathSegments = normalizedPathname.split(\"/\").filter(Boolean);\n            const itemSegments = normalizedItemPath.split(\"/\").filter(Boolean);\n\n            if (item.title === \"Dashboard\") {\n              // Dashboard is active only when we're exactly on /dashboard/{userId} with no additional segments\n              isActive =\n                pathSegments.length === 2 &&\n                pathSegments[0] === \"dashboard\" &&\n                pathSegments[1] !== undefined &&\n                pathSegments[2] === undefined;\n            } else {\n              // For other items, check if the last meaningful segment matches\n              const lastPathSegment = pathSegments[pathSegments.length - 1];\n              const expectedSegment = itemSegments[itemSegments.length - 1];\n              isActive = lastPathSegment === expectedSegment;\n            }\n\n            return (\n              <li key={index}>\n                <Link\n                  href={item.path}\n                  className={`flex items-center gap-4 p-2 rounded-lg transition-colors\n                    ${\n                      isActive\n                        ? \"glass shadow-sm text-white font-bold\"\n                        : \"text-white hover:text-white\"\n                    }\n                  `}\n                >\n                  {item.icon}\n                  {!isCollapsed && (\n                    <span className=\"text-base font-semibold\">\n                      {item.title}\n                    </span>\n                  )}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n\n      {/* Subscription Status Widget */}\n      {!isCollapsed && (\n        <div className=\"p-4 border-t border-gray-700\">\n          <SimpleSubscriptionStatus showRefreshButton={false} />\n        </div>\n      )}\n\n      {/* Logout Button */}\n      <div className=\"p-4 border-t border-gray-700\">\n        <Button\n          onClick={handleLogout}\n          variant=\"ghost\"\n          className={`w-full justify-start text-gray-600 hover:text-white hover:bg-red-500 ${\n            isCollapsed ? \"px-2\" : \"\"\n          }`}\n        >\n          <LogOut size={20} />\n          {!isCollapsed && <span className=\"ml-4\">Logout</span>}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":"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","debugId":null}}]
}