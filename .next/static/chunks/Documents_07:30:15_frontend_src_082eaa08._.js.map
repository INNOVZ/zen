{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\n \nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\n"],"names":[],"mappings":";;;;AAEoB;AAFpB;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,IAAA,qPAAY,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,oNAAO,EAAC,IAAA,2LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,qNAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,KASb;QATa,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF,GATa;IAUd,MAAM,OAAO,UAAU,sNAAI,GAAG;IAE9B,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/utils/userUtils.ts"],"sourcesContent":["import { User } from \"@/types/schemaTypes\";\n\n/**\n * Get the best display name for a user\n * Priority: display_name -> name -> email\n */\nexport const getUserDisplayName = (user: User | null): string => {\n  if (!user) return \"User\";\n  \n  return user.display_name || user.name || user.email || \"User\";\n};\n\n/**\n * Get the user's first name for more personal greetings\n */\nexport const getUserFirstName = (user: User | null): string => {\n  const displayName = getUserDisplayName(user);\n  \n  // If it's an email, return \"User\"\n  if (displayName.includes(\"@\")) {\n    return \"User\";\n  }\n  \n  // Return the first word (first name)\n  return displayName.split(\" \")[0];\n};\n"],"names":[],"mappings":";;;;;;AAMO,MAAM,qBAAqB,CAAC;IACjC,IAAI,CAAC,MAAM,OAAO;IAElB,OAAO,KAAK,YAAY,IAAI,KAAK,IAAI,IAAI,KAAK,KAAK,IAAI;AACzD;AAKO,MAAM,mBAAmB,CAAC;IAC/B,MAAM,cAAc,mBAAmB;IAEvC,kCAAkC;IAClC,IAAI,YAAY,QAAQ,CAAC,MAAM;QAC7B,OAAO;IACT;IAEA,qCAAqC;IACrC,OAAO,YAAY,KAAK,CAAC,IAAI,CAAC,EAAE;AAClC","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACZ,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACjB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACvB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IACnB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 259, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/progress.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Progress({\n  className,\n  value,\n  ...props\n}: React.ComponentProps<typeof ProgressPrimitive.Root>) {\n  return (\n    <ProgressPrimitive.Root\n      data-slot=\"progress\"\n      className={cn(\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    >\n      <ProgressPrimitive.Indicator\n        data-slot=\"progress-indicator\"\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n      />\n    </ProgressPrimitive.Root>\n  )\n}\n\nexport { Progress }\n"],"names":[],"mappings":";;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,SAAS,KAIoC;QAJpC,EAChB,SAAS,EACT,KAAK,EACL,GAAG,OACiD,GAJpC;IAKhB,qBACE,wOAAC,0NAAsB;QACrB,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,kEACA;QAED,GAAG,KAAK;kBAET,cAAA,wOAAC,+NAA2B;YAC1B,aAAU;YACV,WAAU;YACV,OAAO;gBAAE,WAAW,AAAC,eAAiC,OAAnB,MAAM,CAAC,SAAS,CAAC,GAAE;YAAI;;;;;;;;;;;AAIlE;KArBS","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n"],"names":[],"mappings":";;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,qNAAG,EACvB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,KAA4C;QAA5C,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB,GAA5C;IACb,qBACE,wOAAC;QAAI,WAAW,IAAA,uKAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,IAAA,qNAAG,EACvB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,KAIoD;QAJpD,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D,GAJpD;IAKb,qBACE,wOAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,IAAA,uKAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,KAAoD;QAApD,EAAE,SAAS,EAAE,GAAG,OAAoC,GAApD;IAClB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,KAGI;QAHJ,EACxB,SAAS,EACT,GAAG,OACyB,GAHJ;IAIxB,qBACE,wOAAC;QACC,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/app/api/SupabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\n\nconst SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\nif (!SUPABASE_URL || !SUPABASE_ANON_KEY) {\n  console.error('Missing Supabase environment variables:');\n  console.error('NEXT_PUBLIC_SUPABASE_URL:', SUPABASE_URL ? 'Set' : 'Missing');\n  console.error('NEXT_PUBLIC_SUPABASE_ANON_KEY:', SUPABASE_ANON_KEY ? 'Set' : 'Missing');\n  throw new Error('Missing required Supabase environment variables');\n}\n\nexport const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);\n"],"names":[],"mappings":";;;;AAEqB;AAFrB;;AAEA,MAAM;AACN,MAAM;AAEN;;AAOO,MAAM,WAAW,IAAA,qPAAY,EAAC,cAAc","debugId":null}},
    {"offset": {"line": 451, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/app/api/auth.ts"],"sourcesContent":["// utils/auth.ts\nimport { supabase } from './SupabaseClient'\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\n// Get token and user info from Supabase session\nexport const getAuthInfo = async () => {\n  const { data, error } = await supabase.auth.getSession();\n  \n  if (error) {\n    console.debug(\"Auth session error:\", error);\n    throw new Error(\"Authentication error. Please log in again.\");\n  }\n  \n  const token = data.session?.access_token;\n  const userId = data.session?.user?.id;\n  \n  if (!token || !userId) {\n    console.debug(\"No valid session found - user not authenticated\");\n    throw new Error(\"Not authenticated. Please log in again.\");\n  }\n  \n  // Fetch org_id from database instead of metadata\n  let orgId = null;\n  try {\n    const { data: userData, error: userError } = await supabase\n      .from('users')\n      .select('org_id')\n      .eq('id', userId)\n      .single();\n    \n    if (userError) {\n      console.debug(\"Error fetching user org_id:\", userError);\n    } else if (userData?.org_id) {\n      orgId = userData.org_id;\n      console.debug(\"Fetched org_id from database:\", orgId);\n    }\n  } catch (error) {\n    console.debug(\"Failed to fetch org_id from database:\", error);\n  }\n  \n  return { token, userId, orgId };\n};\n\n\n\n// Custom error type for API errors\ninterface ApiError extends Error {\n  status?: number;\n  statusText?: string;\n  url?: string;\n  errorData?: unknown;\n  errorText?: string;\n}\n\n// Enhanced helper with better error handling and logging\nexport const fetchWithAuth = async (url: string, options: RequestInit = {}) => {\n  const { token, userId, orgId } = await getAuthInfo();\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": `Bearer ${token}`,\n    \"X-User-ID\": userId,\n    \"X-Request-ID\": `req-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    ...(orgId && { \"X-Org-ID\": orgId }),\n    ...options.headers,\n  };\n\n  const requestId = headers[\"X-Request-ID\"];\n  console.log(`🔍 [${requestId}] API Call:`, `${BASE_URL}${url}`, { \n    userId: userId.substring(0, 8) + \"...\", \n    orgId: orgId?.substring(0, 8) + \"...\" || \"none\",\n    method: options.method || \"GET\"\n  });\n\n  const startTime = Date.now();\n  \n  try {\n    const response = await fetch(`${BASE_URL}${url}`, {\n      ...options,\n      headers,\n    });\n\n    const responseTime = Date.now() - startTime;\n    console.log(`⏱️ [${requestId}] Response:`, response.status, `(${responseTime}ms)`);\n\n    if (!response.ok) {\n      let errorText = '';\n      let errorData = null;\n      let parseError = null;\n      \n      try {\n        // Try to get error as text first\n        errorText = await response.text();\n        \n        // Try to parse as JSON if it looks like JSON\n        if (errorText && (errorText.startsWith('{') || errorText.startsWith('['))) {\n          try {\n            errorData = JSON.parse(errorText);\n          } catch (jsonParseError) {\n            parseError = jsonParseError;\n            console.warn(`⚠️ [${requestId}] JSON parsing failed:`, jsonParseError);\n            // If JSON parsing fails, keep as text\n          }\n        }\n      } catch (responseError) {\n        errorText = 'Failed to read error response';\n        console.warn(`⚠️ [${requestId}] Could not read error response:`, responseError);\n      }\n\n      const errorInfo = {\n        requestId,\n        url: `${BASE_URL}${url}`,\n        method: options.method || \"GET\",\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries()),\n        errorData,\n        errorText: errorText || 'No error text',\n        parseError: parseError instanceof Error ? parseError.message : parseError ? String(parseError) : null,\n        timestamp: new Date().toISOString(),\n        responseTime: Date.now() - startTime,\n      };\n\n      // Enhanced logging with better structure and readability\n      const logError = {\n        requestId,\n        url: errorInfo.url,\n        method: errorInfo.method,\n        status: errorInfo.status,\n        statusText: errorInfo.statusText,\n        message: errorData?.message || errorText || errorInfo.statusText || 'Unknown error',\n        timestamp: errorInfo.timestamp,\n        fullErrorData: errorData,\n        fullErrorText: errorText,\n        responseHeaders: Object.fromEntries(response.headers.entries())\n      };\n      \n      // Reduce console noise for expected failures\n      const isContextConfigEndpoint = url.includes('/context-config');\n      const isOrganizationEndpoint = url.includes('/organization');\n      const isExpectedFailure = response.status === 404 && (isContextConfigEndpoint || isOrganizationEndpoint);\n      \n      if (isExpectedFailure) {\n        console.debug(`📝 [${requestId}] Endpoint not available (expected in development):`, {\n          url: errorInfo.url,\n          status: response.status,\n          endpoint: isContextConfigEndpoint ? 'context-config' : 'organization'\n        });\n      } else {\n        console.error(`❌ [${requestId}] API Error:`, logError);\n        console.error(`💥 [${requestId}] Request failed:`, {\n          summary: `${errorInfo.method} ${errorInfo.url} -> ${errorInfo.status} ${errorInfo.statusText}`,\n          error: errorData?.message || errorText || 'No error details available',\n          responseHeaders: Object.fromEntries(response.headers.entries())\n        });\n      }\n      \n      if (response.status === 401) {\n        throw new Error(\"Authentication expired. Please log in again.\");\n      } else if (response.status === 403) {\n        throw new Error(\"Access denied. Please check your permissions.\");\n      } else if (response.status === 404) {\n        throw new Error(`API endpoint not found: ${url}`);\n      } else if (response.status === 429) {\n        throw new Error(\"Too many requests. Please try again later.\");\n      } else if (response.status >= 500) {\n        throw new Error(\"Server error. Please try again later.\");\n      }\n      \n      const errorMessage = errorData?.message || errorText || response.statusText || `API error (${response.status})`;\n      const enhancedError = new Error(errorMessage) as ApiError;\n      // Add additional context to the error\n      enhancedError.status = response.status;\n      enhancedError.statusText = response.statusText;\n      enhancedError.url = `${BASE_URL}${url}`;\n      enhancedError.errorData = errorData;\n      enhancedError.errorText = errorText;\n      throw enhancedError;\n    }\n\n    try {\n      const data = await response.json();\n      console.log(`✅ [${requestId}] Success:`, typeof data === 'object' ? 'JSON response' : data);\n      return data;\n    } catch (parseError) {\n      console.error(`⚠️ [${requestId}] Failed to parse JSON response:`, parseError);\n      console.error(`⚠️ [${requestId}] Response status:`, response.status, response.statusText);\n      console.error(`⚠️ [${requestId}] Response headers:`, Object.fromEntries(response.headers.entries()));\n      \n      // If JSON parsing fails, try to get the response as text\n      try {\n        const textData = await response.text();\n        console.log(`📄 [${requestId}] Text response:`, textData);\n        \n        // If the response is empty or just whitespace, it might be a successful update\n        if (!textData || textData.trim() === '') {\n          console.log(`📄 [${requestId}] Empty response - likely successful update`);\n          return { success: true, message: 'Update successful' };\n        }\n        \n        return { message: textData };\n      } catch (textError) {\n        console.error(`💥 [${requestId}] Failed to read response as text:`, textError);\n        throw new Error('Failed to parse server response');\n      }\n    }\n    \n  } catch (error) {\n    const responseTime = Date.now() - startTime;\n    const isDevelopment = process.env.NODE_ENV === 'development';\n    \n    // Handle network errors with less verbose logging in development\n    if (error instanceof TypeError && error.message.includes('Failed to fetch')) {\n      if (isDevelopment) {\n        console.debug(`🔌 [${requestId}] Backend server unavailable (development mode) - likely auth in progress`);\n      } else {\n        console.error(`💥 [${requestId}] Network error:`, {\n          url: `${BASE_URL}${url}`,\n          method: options.method || \"GET\",\n          responseTime: `${responseTime}ms`\n        });\n      }\n      throw new Error(\"Backend server unavailable. Please check your connection or try again later.\");\n    }\n    \n    // Handle other fetch errors\n    if (error instanceof Error && (\n      error.message.includes('ECONNREFUSED') ||\n      error.message.includes('network') ||\n      error.message.includes('timeout')\n    )) {\n      if (isDevelopment) {\n        console.warn(`🔌 [${requestId}] Connection error: ${error.message}`);\n      } else {\n        console.error(`💥 [${requestId}] Connection error:`, {\n          error: error.message,\n          url: `${BASE_URL}${url}`,\n          method: options.method || \"GET\",\n          responseTime: `${responseTime}ms`\n        });\n      }\n      throw new Error(\"Unable to connect to server. Please try again later.\");\n    }\n    \n    // For unexpected errors, always log detailed information\n    const errorDetails = {\n      error: error,\n      errorMessage: error instanceof Error ? error.message : 'Unknown error',\n      errorType: typeof error,\n      url: `${BASE_URL}${url}`,\n      method: options.method || \"GET\",\n      responseTime: `${responseTime}ms`\n    };\n\n    // Check if this is an empty error object (common issue)\n    if (error && typeof error === 'object' && Object.keys(error).length === 0) {\n      console.warn(`⚠️ [${requestId}] Empty error object detected - this might be a successful request with parsing issues`);\n      console.warn(`⚠️ [${requestId}] Request details:`, {\n        url: errorDetails.url,\n        method: errorDetails.method,\n        responseTime: errorDetails.responseTime\n      });\n    } else {\n      console.error(`💥 [${requestId}] Request failed:`, errorDetails);\n    }\n    \n    throw error;\n  }\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 684, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/utils/cache.ts"],"sourcesContent":["// Simple in-memory cache for API responses\ninterface CacheEntry<T> {\n  data: T;\n  timestamp: number;\n  ttl: number; // Time to live in milliseconds\n}\n\nclass SimpleCache {\n  private cache = new Map<string, CacheEntry<unknown>>();\n\n  set<T>(key: string, data: T, ttlMs: number = 5 * 60 * 1000): void {\n    this.cache.set(key, {\n      data,\n      timestamp: Date.now(),\n      ttl: ttlMs,\n    });\n  }\n\n  get<T>(key: string): T | null {\n    const entry = this.cache.get(key);\n\n    if (!entry) {\n      return null;\n    }\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return null;\n    }\n\n    return entry.data as T;\n  }\n\n  clear(): void {\n    this.cache.clear();\n  }\n\n  delete(key: string): boolean {\n    return this.cache.delete(key);\n  }\n\n  has(key: string): boolean {\n    const entry = this.cache.get(key);\n    \n    if (!entry) {\n      return false;\n    }\n\n    const now = Date.now();\n    if (now - entry.timestamp > entry.ttl) {\n      this.cache.delete(key);\n      return false;\n    }\n\n    return true;\n  }\n\n  // Get all keys that match a pattern\n  getKeysMatching(pattern: string): string[] {\n    const matchingKeys: string[] = [];\n    for (const key of this.cache.keys()) {\n      if (key.includes(pattern)) {\n        matchingKeys.push(key);\n      }\n    }\n    return matchingKeys;\n  }\n\n  // Delete all entries matching a pattern\n  deleteMatching(pattern: string): number {\n    const keysToDelete = this.getKeysMatching(pattern);\n    keysToDelete.forEach(key => this.cache.delete(key));\n    return keysToDelete.length;\n  }\n\n  // Clean up expired entries\n  cleanup(): void {\n    const now = Date.now();\n    for (const [key, entry] of this.cache.entries()) {\n      if (now - entry.timestamp > entry.ttl) {\n        this.cache.delete(key);\n      }\n    }\n  }\n}\n\nexport const apiCache = new SimpleCache();\n\n// Clean up expired entries every 5 minutes\nif (typeof window !== \"undefined\") {\n  setInterval(() => {\n    apiCache.cleanup();\n  }, 5 * 60 * 1000);\n}\n\n// Helper function to create cache keys\nexport const createCacheKey = (\n  endpoint: string,\n  params?: Record<string, unknown>\n): string => {\n  const paramString = params ? JSON.stringify(params) : \"\";\n  return `${endpoint}${paramString}`;\n};\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;;;;;;AAO3C,MAAM;IAGJ,IAAO,GAAW,EAAE,IAAO,EAAuC;YAArC,QAAA,iEAAgB,IAAI,KAAK;QACpD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;YAClB;YACA,WAAW,KAAK,GAAG;YACnB,KAAK;QACP;IACF;IAEA,IAAO,GAAW,EAAY;QAC5B,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE7B,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClB,OAAO;QACT;QAEA,OAAO,MAAM,IAAI;IACnB;IAEA,QAAc;QACZ,IAAI,CAAC,KAAK,CAAC,KAAK;IAClB;IAEA,OAAO,GAAW,EAAW;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC3B;IAEA,IAAI,GAAW,EAAW;QACxB,MAAM,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAE7B,IAAI,CAAC,OAAO;YACV,OAAO;QACT;QAEA,MAAM,MAAM,KAAK,GAAG;QACpB,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;YACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAClB,OAAO;QACT;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,gBAAgB,OAAe,EAAY;QACzC,MAAM,eAAyB,EAAE;QACjC,KAAK,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI;YACnC,IAAI,IAAI,QAAQ,CAAC,UAAU;gBACzB,aAAa,IAAI,CAAC;YACpB;QACF;QACA,OAAO;IACT;IAEA,wCAAwC;IACxC,eAAe,OAAe,EAAU;QACtC,MAAM,eAAe,IAAI,CAAC,eAAe,CAAC;QAC1C,aAAa,OAAO,CAAC,CAAA,MAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAC9C,OAAO,aAAa,MAAM;IAC5B;IAEA,2BAA2B;IAC3B,UAAgB;QACd,MAAM,MAAM,KAAK,GAAG;QACpB,KAAK,MAAM,CAAC,KAAK,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,GAAI;YAC/C,IAAI,MAAM,MAAM,SAAS,GAAG,MAAM,GAAG,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACpB;QACF;IACF;;QA5EA,0NAAQ,SAAQ,IAAI;;AA6EtB;AAEO,MAAM,WAAW,IAAI;AAE5B,2CAA2C;AAC3C,wCAAmC;IACjC,YAAY;QACV,SAAS,OAAO;IAClB,GAAG,IAAI,KAAK;AACd;AAGO,MAAM,iBAAiB,CAC5B,UACA;IAEA,MAAM,cAAc,SAAS,KAAK,SAAS,CAAC,UAAU;IACtD,OAAO,AAAC,GAAa,OAAX,UAAuB,OAAZ;AACvB","debugId":null}},
    {"offset": {"line": 779, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/app/api/subscription.ts"],"sourcesContent":["// Subscription API Client\n// Based on backend SUBSCRIPTION_SYSTEM_GUIDE.md\n\nimport { getAuthInfo, fetchWithAuth } from \"@/app/api/auth\";\nimport { apiCache, createCacheKey } from \"@/utils/cache\";\nimport type {\n  SubscriptionPlans,\n  SubscriptionStatus,\n  TokenConsumptionRequest,\n  TokenConsumptionResponse,\n  TokenAvailabilityCheck,\n  SupportedChannels,\n  ChannelConfigurations,\n  SubscriptionAnalytics,\n  ChannelComparison,\n  ChannelTrends,\n  SignupRequest,\n  SignupResponse,\n  ChannelConfigUpdateRequest,\n  ChannelConfigUpdateResponse,\n} from \"@/types/subscription\";\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\nexport const subscriptionApi = {\n  // ==========================================\n  // SUBSCRIPTION PLANS\n  // ==========================================\n\n  getPlans: async (): Promise<SubscriptionPlans> => {\n    const cacheKey = createCacheKey(\"/api/onboarding/plans\");\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionPlans>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/plans\");\n      const plans = data.plans || data;\n\n      // Cache for 1 hour (plans don't change frequently)\n      apiCache.set(cacheKey, plans, 60 * 60 * 1000);\n\n      return plans;\n    } catch (error) {\n      console.error(\"Error fetching subscription plans:\", error);\n\n      // Return mock plans for development\n      const mockPlans: SubscriptionPlans = {\n        basic: {\n          name: \"Basic Plan\",\n          monthly_token_limit: 10000,\n          price_per_month: 29.99,\n          max_chatbots: 3,\n          max_documents_per_chatbot: 50,\n          priority_support: false,\n          custom_branding: false,\n          api_access: false,\n          analytics_retention_days: 30,\n        },\n        professional: {\n          name: \"Professional Plan\",\n          monthly_token_limit: 50000,\n          price_per_month: 99.99,\n          max_chatbots: 10,\n          max_documents_per_chatbot: 200,\n          priority_support: true,\n          custom_branding: true,\n          api_access: true,\n          analytics_retention_days: 90,\n        },\n        enterprise: {\n          name: \"Enterprise Plan\",\n          monthly_token_limit: 200000,\n          price_per_month: 299.99,\n          max_chatbots: 50,\n          max_documents_per_chatbot: 1000,\n          priority_support: true,\n          custom_branding: true,\n          api_access: true,\n          analytics_retention_days: 365,\n        },\n      };\n\n      // Cache mock data for 5 minutes\n      apiCache.set(cacheKey, mockPlans, 5 * 60 * 1000);\n      return mockPlans;\n    }\n  },\n\n  // ==========================================\n  // USER/ORGANIZATION SIGNUP\n  // ==========================================\n\n  signup: async (request: SignupRequest): Promise<SignupResponse> => {\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/admin/signup\", {\n        method: \"POST\",\n        body: JSON.stringify(request),\n      });\n      return data;\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\n          \"Request timed out. Please check if the server is running.\"\n        );\n      }\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // SUBSCRIPTION STATUS\n  // ==========================================\n\n  getSubscriptionStatus: async (\n    entityType: \"user\" | \"organization\",\n    entityId: string\n  ): Promise<SubscriptionStatus> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/subscription/${entityType}/${entityId}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionStatus>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const data = await fetchWithAuth(\n        `/api/onboarding/subscription/${entityType}/${entityId}`\n      );\n\n      // Cache for 30 seconds (status changes frequently)\n      apiCache.set(cacheKey, data, 30 * 1000);\n\n      return data;\n    } catch (error) {\n      console.error(\"Error fetching subscription status:\", error);\n\n      // Return mock status for development - indicating no subscription\n      const mockStatus: SubscriptionStatus = {\n        subscription_id: \"\",\n        tokens_used_this_month: 0,\n        tokens_remaining: 0,\n        monthly_limit: 0,\n        usage_percentage: 0,\n        reset_date: \"\",\n      };\n\n      // Cache mock data for 1 minute\n      apiCache.set(cacheKey, mockStatus, 60 * 1000);\n      return mockStatus;\n    }\n  },\n\n  // ==========================================\n  // TOKEN MANAGEMENT\n  // ==========================================\n\n  consumeTokens: async (\n    request: TokenConsumptionRequest\n  ): Promise<TokenConsumptionResponse> => {\n    try {\n      const data = await fetchWithAuth(\"/api/onboarding/tokens/consume\", {\n        method: \"POST\",\n        body: JSON.stringify(request),\n      });\n\n      // Invalidate subscription status cache\n      apiCache.deleteMatching(\"/api/onboarding/subscription\");\n\n      return data;\n    } catch (error) {\n      console.error(\"Error consuming tokens:\", error);\n      throw error;\n    }\n  },\n\n  checkTokenAvailability: async (\n    entityType: \"user\" | \"organization\",\n    entityId: string,\n    requiredTokens: number\n  ): Promise<TokenAvailabilityCheck> => {\n    try {\n      const data = await fetchWithAuth(\n        `/api/onboarding/tokens/check/${entityType}/${entityId}/${requiredTokens}`\n      );\n      return data;\n    } catch (error) {\n      console.error(\"Error checking token availability:\", error);\n\n      // Return mock availability for development\n      return {\n        success: true,\n        has_enough_tokens: true,\n        tokens_required: requiredTokens,\n        tokens_available: 7500,\n        can_proceed: true,\n      };\n    }\n  },\n\n  // ==========================================\n  // CHANNEL MANAGEMENT\n  // ==========================================\n\n  getSupportedChannels: async (): Promise<SupportedChannels> => {\n    const cacheKey = createCacheKey(\"/api/onboarding/channels\");\n\n    // Check cache first\n    const cached = apiCache.get<SupportedChannels>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const response = await fetch(`${BASE_URL}/api/onboarding/channels`);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch channels: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const channels = data.channels || data;\n\n      // Cache for 1 hour\n      apiCache.set(cacheKey, channels, 60 * 60 * 1000);\n\n      return channels;\n    } catch (error) {\n      console.error(\"Error fetching supported channels:\", error);\n\n      // Return mock channels for development\n      const mockChannels: SupportedChannels = {\n        website: {\n          name: \"Website Chat\",\n          description: \"Embedded chat widget on websites\",\n          icon: \"🌐\",\n          typical_use_cases: [\"Customer support\", \"Lead generation\", \"FAQ\"],\n        },\n        whatsapp: {\n          name: \"WhatsApp Business\",\n          description: \"WhatsApp Business API integration\",\n          icon: \"📱\",\n          typical_use_cases: [\"Customer service\", \"Order updates\", \"Marketing\"],\n        },\n        messenger: {\n          name: \"Facebook Messenger\",\n          description: \"Facebook Messenger integration\",\n          icon: \"💬\",\n          typical_use_cases: [\n            \"Social commerce\",\n            \"Customer support\",\n            \"Engagement\",\n          ],\n        },\n        instagram: {\n          name: \"Instagram Direct\",\n          description: \"Instagram Direct Messages integration\",\n          icon: \"📸\",\n          typical_use_cases: [\n            \"Brand engagement\",\n            \"Product inquiries\",\n            \"Support\",\n          ],\n        },\n        api: {\n          name: \"REST API\",\n          description: \"API integration for custom applications\",\n          icon: \"🔌\",\n          typical_use_cases: [\n            \"Custom apps\",\n            \"System integration\",\n            \"Automation\",\n          ],\n        },\n        mobile_app: {\n          name: \"Mobile App\",\n          description: \"Mobile application integration\",\n          icon: \"📲\",\n          typical_use_cases: [\n            \"In-app support\",\n            \"User onboarding\",\n            \"Feature guidance\",\n          ],\n        },\n      };\n\n      // Cache mock data for 1 hour\n      apiCache.set(cacheKey, mockChannels, 60 * 60 * 1000);\n      return mockChannels;\n    }\n  },\n\n  getChannelConfigurations: async (\n    subscriptionId: string\n  ): Promise<ChannelConfigurations> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/subscription/${subscriptionId}/channels/config`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelConfigurations>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/subscription/${subscriptionId}/channels/config`\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch channel configurations: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n      const configurations = data.configurations || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, configurations, 5 * 60 * 1000);\n\n      return configurations;\n    } catch (error) {\n      console.error(\"Error fetching channel configurations:\", error);\n      throw error;\n    }\n  },\n\n  updateChannelConfiguration: async (\n    subscriptionId: string,\n    channel: string,\n    request: ChannelConfigUpdateRequest\n  ): Promise<ChannelConfigUpdateResponse> => {\n    try {\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers: Record<string, string> = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n      };\n\n      if (orgId) {\n        headers[\"X-Org-ID\"] = orgId;\n      }\n\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/subscription/${subscriptionId}/channels/${channel}/config`,\n        {\n          method: \"PUT\",\n          headers,\n          body: JSON.stringify(request),\n        }\n      );\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(\n          errorData.detail ||\n            `Channel configuration update failed: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n\n      // Invalidate channel configuration cache\n      apiCache.deleteMatching(\n        `/api/onboarding/subscription/${subscriptionId}/channels`\n      );\n\n      return data;\n    } catch (error) {\n      console.error(\"Error updating channel configuration:\", error);\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // ANALYTICS\n  // ==========================================\n\n  getSubscriptionAnalytics: async (\n    subscriptionId: string,\n    daysBack: number = 30\n  ): Promise<SubscriptionAnalytics> => {\n    if (!subscriptionId) {\n      throw new Error(\"Subscription ID is required\");\n    }\n\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<SubscriptionAnalytics>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 second timeout\n\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          signal: controller.signal,\n        }\n      );\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        const errorMessage =\n          errorData.detail || `Failed to fetch analytics: ${response.status}`;\n        throw new Error(errorMessage);\n      }\n\n      const data = await response.json();\n      const analytics = data.analytics || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, analytics, 5 * 60 * 1000);\n\n      return analytics;\n    } catch (error) {\n      console.error(\"Error fetching subscription analytics:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\n          \"Request timed out. Please check if the server is running.\"\n        );\n      }\n      throw error;\n    }\n  },\n\n  getChannelComparison: async (\n    subscriptionId: string,\n    daysBack: number = 30\n  ): Promise<ChannelComparison> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}/channels/comparison?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelComparison>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}/channels/comparison?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\n          `Failed to fetch channel comparison: ${response.status}`\n        );\n      }\n\n      const data = await response.json();\n      const comparison = data.comparison || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, comparison, 5 * 60 * 1000);\n\n      return comparison;\n    } catch (error) {\n      console.error(\"Error fetching channel comparison:\", error);\n      throw error;\n    }\n  },\n\n  getChannelTrends: async (\n    subscriptionId: string,\n    channel: string,\n    daysBack: number = 30\n  ): Promise<ChannelTrends> => {\n    const cacheKey = createCacheKey(\n      `/api/onboarding/analytics/${subscriptionId}/channels/${channel}/trends?days_back=${daysBack}`\n    );\n\n    // Check cache first\n    const cached = apiCache.get<ChannelTrends>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const { token } = await getAuthInfo();\n      const response = await fetch(\n        `${BASE_URL}/api/onboarding/analytics/${subscriptionId}/channels/${channel}/trends?days_back=${daysBack}`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch channel trends: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const trends = data.trends || data;\n\n      // Cache for 5 minutes\n      apiCache.set(cacheKey, trends, 5 * 60 * 1000);\n\n      return trends;\n    } catch (error) {\n      console.error(\"Error fetching channel trends:\", error);\n      throw error;\n    }\n  },\n\n  // ==========================================\n  // UTILITY METHODS\n  // ==========================================\n\n  estimateTokensForOperation: (\n    operationType:\n      | \"chat\"\n      | \"document_upload\"\n      | \"document_processing\"\n      | \"web_scraping\"\n      | \"embedding_generation\",\n    messageLength?: number,\n    documentSize?: number\n  ): number => {\n    switch (operationType) {\n      case \"chat\":\n        return 100 + (messageLength || 0) / 4;\n      case \"document_upload\":\n        return 500 + (documentSize || 0) / 100;\n      case \"document_processing\":\n        return 200;\n      case \"web_scraping\":\n        return 300;\n      case \"embedding_generation\":\n        return 50;\n      default:\n        return 100;\n    }\n  },\n\n  // Helper to invalidate subscription-related cache\n  invalidateSubscriptionCache: () => {\n    apiCache.deleteMatching(\"/api/onboarding\");\n    console.log(\"Subscription cache invalidated\");\n  },\n\n  // Debug function to test subscription endpoints\n  debugSubscriptionEndpoints: async () => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n      console.log(\"🔍 Debug: Testing subscription endpoints\", { userId: userId.substring(0, 8) + \"...\", orgId: orgId?.substring(0, 8) + \"...\" || \"none\" });\n\n      const results: {\n        backendHealth: boolean;\n        backendUrl: string;\n        userSubscription: SubscriptionStatus | null;\n        orgSubscription: SubscriptionStatus | null;\n        plans: SubscriptionPlans | null;\n        errors: Array<{ type: string; error: string }>;\n      } = {\n        backendHealth: false,\n        backendUrl: BASE_URL,\n        userSubscription: null,\n        orgSubscription: null,\n        plans: null,\n        errors: []\n      };\n\n      // Test backend health first\n      try {\n        console.log(\"🔍 Testing backend health at:\", BASE_URL);\n        const healthResponse = await fetch(`${BASE_URL}/`, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n        results.backendHealth = healthResponse.ok;\n        console.log(\"✅ Backend health:\", results.backendHealth, \"Status:\", healthResponse.status);\n        \n        if (!healthResponse.ok) {\n          const errorText = await healthResponse.text();\n          console.log(\"❌ Backend response:\", errorText);\n          results.errors.push({ type: \"backend\", error: `Backend returned ${healthResponse.status}: ${errorText}` });\n        }\n      } catch (error) {\n        console.error(\"❌ Backend health error:\", error);\n        results.errors.push({ type: \"backend\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      // Test user subscription\n      try {\n        console.log(\"🔍 Testing user subscription endpoint...\");\n        results.userSubscription = await subscriptionApi.getSubscriptionStatus(\"user\", userId);\n        console.log(\"✅ User subscription result:\", results.userSubscription);\n      } catch (error) {\n        console.error(\"❌ User subscription error:\", error);\n        results.errors.push({ type: \"user\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      // Test organization subscription if orgId exists\n      if (orgId) {\n        try {\n          console.log(\"🔍 Testing organization subscription endpoint...\");\n          results.orgSubscription = await subscriptionApi.getSubscriptionStatus(\"organization\", orgId);\n          console.log(\"✅ Organization subscription result:\", results.orgSubscription);\n        } catch (error) {\n          console.error(\"❌ Organization subscription error:\", error);\n          results.errors.push({ type: \"organization\", error: error instanceof Error ? error.message : String(error) });\n        }\n      }\n\n      // Test plans endpoint\n      try {\n        console.log(\"🔍 Testing plans endpoint...\");\n        results.plans = await subscriptionApi.getPlans();\n        console.log(\"✅ Plans result:\", results.plans);\n      } catch (error) {\n        console.error(\"❌ Plans error:\", error);\n        results.errors.push({ type: \"plans\", error: error instanceof Error ? error.message : String(error) });\n      }\n\n      console.log(\"🔍 Debug results summary:\", results);\n      return results;\n    } catch (error) {\n      console.error(\"❌ Debug function error:\", error);\n      return { error: error instanceof Error ? error.message : String(error) };\n    }\n  },\n};\n"],"names":[],"mappings":"AAAA,0BAA0B;AAC1B,gDAAgD;;;;;AAqB/B;AAnBjB;AACA;;;AAkBA,MAAM,WAAW,6DAAmC;AAE7C,MAAM,kBAAkB;IAC7B,6CAA6C;IAC7C,qBAAqB;IACrB,6CAA6C;IAE7C,UAAU;QACR,MAAM,WAAW,IAAA,qLAAc,EAAC;QAEhC,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAoB;QAC/C,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,wLAAa,EAAC;YACjC,MAAM,QAAQ,KAAK,KAAK,IAAI;YAE5B,mDAAmD;YACnD,+KAAQ,CAAC,GAAG,CAAC,UAAU,OAAO,KAAK,KAAK;YAExC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YAEpD,oCAAoC;YACpC,MAAM,YAA+B;gBACnC,OAAO;oBACL,MAAM;oBACN,qBAAqB;oBACrB,iBAAiB;oBACjB,cAAc;oBACd,2BAA2B;oBAC3B,kBAAkB;oBAClB,iBAAiB;oBACjB,YAAY;oBACZ,0BAA0B;gBAC5B;gBACA,cAAc;oBACZ,MAAM;oBACN,qBAAqB;oBACrB,iBAAiB;oBACjB,cAAc;oBACd,2BAA2B;oBAC3B,kBAAkB;oBAClB,iBAAiB;oBACjB,YAAY;oBACZ,0BAA0B;gBAC5B;gBACA,YAAY;oBACV,MAAM;oBACN,qBAAqB;oBACrB,iBAAiB;oBACjB,cAAc;oBACd,2BAA2B;oBAC3B,kBAAkB;oBAClB,iBAAiB;oBACjB,YAAY;oBACZ,0BAA0B;gBAC5B;YACF;YAEA,gCAAgC;YAChC,+KAAQ,CAAC,GAAG,CAAC,UAAU,WAAW,IAAI,KAAK;YAC3C,OAAO;QACT;IACF;IAEA,6CAA6C;IAC7C,2BAA2B;IAC3B,6CAA6C;IAE7C,QAAQ,OAAO;QACb,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,wLAAa,EAAC,gCAAgC;gBAC/D,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;YACvB;YACA,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,IAAI,iBAAiB,SAAS,MAAM,IAAI,KAAK,cAAc;gBACzD,MAAM,IAAI,MACR;YAEJ;YACA,MAAM;QACR;IACF;IAEA,6CAA6C;IAC7C,sBAAsB;IACtB,6CAA6C;IAE7C,uBAAuB,OACrB,YACA;QAEA,MAAM,WAAW,IAAA,qLAAc,EAC7B,AAAC,gCAA6C,OAAd,YAAW,KAAY,OAAT;QAGhD,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAqB;QAChD,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,wLAAa,EAC9B,AAAC,gCAA6C,OAAd,YAAW,KAAY,OAAT;YAGhD,mDAAmD;YACnD,+KAAQ,CAAC,GAAG,CAAC,UAAU,MAAM,KAAK;YAElC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uCAAuC;YAErD,kEAAkE;YAClE,MAAM,aAAiC;gBACrC,iBAAiB;gBACjB,wBAAwB;gBACxB,kBAAkB;gBAClB,eAAe;gBACf,kBAAkB;gBAClB,YAAY;YACd;YAEA,+BAA+B;YAC/B,+KAAQ,CAAC,GAAG,CAAC,UAAU,YAAY,KAAK;YACxC,OAAO;QACT;IACF;IAEA,6CAA6C;IAC7C,mBAAmB;IACnB,6CAA6C;IAE7C,eAAe,OACb;QAEA,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,wLAAa,EAAC,kCAAkC;gBACjE,QAAQ;gBACR,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,uCAAuC;YACvC,+KAAQ,CAAC,cAAc,CAAC;YAExB,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM;QACR;IACF;IAEA,wBAAwB,OACtB,YACA,UACA;QAEA,IAAI;YACF,MAAM,OAAO,MAAM,IAAA,wLAAa,EAC9B,AAAC,gCAA6C,OAAd,YAAW,KAAe,OAAZ,UAAS,KAAkB,OAAf;YAE5D,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YAEpD,2CAA2C;YAC3C,OAAO;gBACL,SAAS;gBACT,mBAAmB;gBACnB,iBAAiB;gBACjB,kBAAkB;gBAClB,aAAa;YACf;QACF;IACF;IAEA,6CAA6C;IAC7C,qBAAqB;IACrB,6CAA6C;IAE7C,sBAAsB;QACpB,MAAM,WAAW,IAAA,qLAAc,EAAC;QAEhC,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAoB;QAC/C,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS;YAEzC,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,AAAC,6BAA4C,OAAhB,SAAS,MAAM;YAC9D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,WAAW,KAAK,QAAQ,IAAI;YAElC,mBAAmB;YACnB,+KAAQ,CAAC,GAAG,CAAC,UAAU,UAAU,KAAK,KAAK;YAE3C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YAEpD,uCAAuC;YACvC,MAAM,eAAkC;gBACtC,SAAS;oBACP,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBAAC;wBAAoB;wBAAmB;qBAAM;gBACnE;gBACA,UAAU;oBACR,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBAAC;wBAAoB;wBAAiB;qBAAY;gBACvE;gBACA,WAAW;oBACT,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBACjB;wBACA;wBACA;qBACD;gBACH;gBACA,WAAW;oBACT,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBACjB;wBACA;wBACA;qBACD;gBACH;gBACA,KAAK;oBACH,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBACjB;wBACA;wBACA;qBACD;gBACH;gBACA,YAAY;oBACV,MAAM;oBACN,aAAa;oBACb,MAAM;oBACN,mBAAmB;wBACjB;wBACA;wBACA;qBACD;gBACH;YACF;YAEA,6BAA6B;YAC7B,+KAAQ,CAAC,GAAG,CAAC,UAAU,cAAc,KAAK,KAAK;YAC/C,OAAO;QACT;IACF;IAEA,0BAA0B,OACxB;QAEA,MAAM,WAAW,IAAA,qLAAc,EAC7B,AAAC,gCAA8C,OAAf,gBAAe;QAGjD,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAwB;QACnD,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,WAAW,MAAM,MACrB,AAAC,GAA0C,OAAxC,UAAS,iCAA8C,OAAf,gBAAe;YAG5D,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MACR,AAAC,2CAA0D,OAAhB,SAAS,MAAM;YAE9D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,iBAAiB,KAAK,cAAc,IAAI;YAE9C,sBAAsB;YACtB,+KAAQ,CAAC,GAAG,CAAC,UAAU,gBAAgB,IAAI,KAAK;YAEhD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0CAA0C;YACxD,MAAM;QACR;IACF;IAEA,4BAA4B,OAC1B,gBACA,SACA;QAEA,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;YAElD,MAAM,UAAkC;gBACtC,gBAAgB;gBAChB,eAAe,AAAC,UAAe,OAAN;gBACzB,aAAa;YACf;YAEA,IAAI,OAAO;gBACT,OAAO,CAAC,WAAW,GAAG;YACxB;YAEA,MAAM,WAAW,MAAM,MACrB,AAAC,GAA0C,OAAxC,UAAS,iCAA0D,OAA3B,gBAAe,cAAoB,OAAR,SAAQ,YAC9E;gBACE,QAAQ;gBACR;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAGF,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI;gBACrC,MAAM,IAAI,MACR,UAAU,MAAM,IACd,AAAC,wCAAuD,OAAhB,SAAS,MAAM;YAE7D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,yCAAyC;YACzC,+KAAQ,CAAC,cAAc,CACrB,AAAC,gCAA8C,OAAf,gBAAe;YAGjD,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yCAAyC;YACvD,MAAM;QACR;IACF;IAEA,6CAA6C;IAC7C,YAAY;IACZ,6CAA6C;IAE7C,0BAA0B,eACxB;YACA,4EAAmB;QAEnB,IAAI,CAAC,gBAAgB;YACnB,MAAM,IAAI,MAAM;QAClB;QAEA,MAAM,WAAW,IAAA,qLAAc,EAC7B,AAAC,6BAAwD,OAA5B,gBAAe,eAAsB,OAAT;QAG3D,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAwB;QACnD,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;YACnC,MAAM,aAAa,IAAI;YACvB,MAAM,YAAY,WAAW,IAAM,WAAW,KAAK,IAAI,QAAQ,oBAAoB;YAEnF,MAAM,WAAW,MAAM,MACrB,AAAC,GAAuC,OAArC,UAAS,8BAAwD,OAA5B,gBAAe,eAAsB,OAAT,WACpE;gBACE,SAAS;oBACP,eAAe,AAAC,UAAe,OAAN;oBACzB,gBAAgB;gBAClB;gBACA,QAAQ,WAAW,MAAM;YAC3B;YAGF,aAAa;YAEb,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,YAAY,MAAM,SAAS,IAAI,GAAG,KAAK,CAAC,IAAM,CAAC,CAAC,CAAC;gBACvD,MAAM,eACJ,UAAU,MAAM,IAAI,AAAC,8BAA6C,OAAhB,SAAS,MAAM;gBACnE,MAAM,IAAI,MAAM;YAClB;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,YAAY,KAAK,SAAS,IAAI;YAEpC,sBAAsB;YACtB,+KAAQ,CAAC,GAAG,CAAC,UAAU,WAAW,IAAI,KAAK;YAE3C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0CAA0C;YACxD,IAAI,iBAAiB,SAAS,MAAM,IAAI,KAAK,cAAc;gBACzD,MAAM,IAAI,MACR;YAEJ;YACA,MAAM;QACR;IACF;IAEA,sBAAsB,eACpB;YACA,4EAAmB;QAEnB,MAAM,WAAW,IAAA,qLAAc,EAC7B,AAAC,6BAA4E,OAAhD,gBAAe,mCAA0C,OAAT;QAG/E,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAoB;QAC/C,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;YACnC,MAAM,WAAW,MAAM,MACrB,AAAC,GAAuC,OAArC,UAAS,8BAA4E,OAAhD,gBAAe,mCAA0C,OAAT,WACxF;gBACE,SAAS;oBACP,eAAe,AAAC,UAAe,OAAN;oBACzB,gBAAgB;gBAClB;YACF;YAGF,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MACR,AAAC,uCAAsD,OAAhB,SAAS,MAAM;YAE1D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,aAAa,KAAK,UAAU,IAAI;YAEtC,sBAAsB;YACtB,+KAAQ,CAAC,GAAG,CAAC,UAAU,YAAY,IAAI,KAAK;YAE5C,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sCAAsC;YACpD,MAAM;QACR;IACF;IAEA,kBAAkB,eAChB,gBACA;YACA,4EAAmB;QAEnB,MAAM,WAAW,IAAA,qLAAc,EAC7B,AAAC,6BAAuD,OAA3B,gBAAe,cAAwC,OAA5B,SAAQ,sBAA6B,OAAT;QAGtF,oBAAoB;QACpB,MAAM,SAAS,+KAAQ,CAAC,GAAG,CAAgB;QAC3C,IAAI,QAAQ;YACV,OAAO;QACT;QAEA,IAAI;YACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;YACnC,MAAM,WAAW,MAAM,MACrB,AAAC,GAAuC,OAArC,UAAS,8BAAuD,OAA3B,gBAAe,cAAwC,OAA5B,SAAQ,sBAA6B,OAAT,WAC/F;gBACE,SAAS;oBACP,eAAe,AAAC,UAAe,OAAN;oBACzB,gBAAgB;gBAClB;YACF;YAGF,IAAI,CAAC,SAAS,EAAE,EAAE;gBAChB,MAAM,IAAI,MAAM,AAAC,mCAAkD,OAAhB,SAAS,MAAM;YACpE;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,MAAM,SAAS,KAAK,MAAM,IAAI;YAE9B,sBAAsB;YACtB,+KAAQ,CAAC,GAAG,CAAC,UAAU,QAAQ,IAAI,KAAK;YAExC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,MAAM;QACR;IACF;IAEA,6CAA6C;IAC7C,kBAAkB;IAClB,6CAA6C;IAE7C,4BAA4B,CAC1B,eAMA,eACA;QAEA,OAAQ;YACN,KAAK;gBACH,OAAO,MAAM,CAAC,iBAAiB,CAAC,IAAI;YACtC,KAAK;gBACH,OAAO,MAAM,CAAC,gBAAgB,CAAC,IAAI;YACrC,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,kDAAkD;IAClD,6BAA6B;QAC3B,+KAAQ,CAAC,cAAc,CAAC;QACxB,QAAQ,GAAG,CAAC;IACd;IAEA,gDAAgD;IAChD,4BAA4B;QAC1B,IAAI;YACF,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAA,sLAAW;YAC3C,QAAQ,GAAG,CAAC,4CAA4C;gBAAE,QAAQ,OAAO,SAAS,CAAC,GAAG,KAAK;gBAAO,OAAO,CAAA,kBAAA,4BAAA,MAAO,SAAS,CAAC,GAAG,MAAK,SAAS;YAAO;YAElJ,MAAM,UAOF;gBACF,eAAe;gBACf,YAAY;gBACZ,kBAAkB;gBAClB,iBAAiB;gBACjB,OAAO;gBACP,QAAQ,EAAE;YACZ;YAEA,4BAA4B;YAC5B,IAAI;gBACF,QAAQ,GAAG,CAAC,iCAAiC;gBAC7C,MAAM,iBAAiB,MAAM,MAAM,AAAC,GAAW,OAAT,UAAS,MAAI;oBACjD,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;gBACF;gBACA,QAAQ,aAAa,GAAG,eAAe,EAAE;gBACzC,QAAQ,GAAG,CAAC,qBAAqB,QAAQ,aAAa,EAAE,WAAW,eAAe,MAAM;gBAExF,IAAI,CAAC,eAAe,EAAE,EAAE;oBACtB,MAAM,YAAY,MAAM,eAAe,IAAI;oBAC3C,QAAQ,GAAG,CAAC,uBAAuB;oBACnC,QAAQ,MAAM,CAAC,IAAI,CAAC;wBAAE,MAAM;wBAAW,OAAO,AAAC,oBAA6C,OAA1B,eAAe,MAAM,EAAC,MAAc,OAAV;oBAAY;gBAC1G;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,2BAA2B;gBACzC,QAAQ,MAAM,CAAC,IAAI,CAAC;oBAAE,MAAM;oBAAW,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;gBAAO;YACvG;YAEA,yBAAyB;YACzB,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ,gBAAgB,GAAG,MAAM,gBAAgB,qBAAqB,CAAC,QAAQ;gBAC/E,QAAQ,GAAG,CAAC,+BAA+B,QAAQ,gBAAgB;YACrE,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,8BAA8B;gBAC5C,QAAQ,MAAM,CAAC,IAAI,CAAC;oBAAE,MAAM;oBAAQ,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;gBAAO;YACpG;YAEA,iDAAiD;YACjD,IAAI,OAAO;gBACT,IAAI;oBACF,QAAQ,GAAG,CAAC;oBACZ,QAAQ,eAAe,GAAG,MAAM,gBAAgB,qBAAqB,CAAC,gBAAgB;oBACtF,QAAQ,GAAG,CAAC,uCAAuC,QAAQ,eAAe;gBAC5E,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,sCAAsC;oBACpD,QAAQ,MAAM,CAAC,IAAI,CAAC;wBAAE,MAAM;wBAAgB,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;oBAAO;gBAC5G;YACF;YAEA,sBAAsB;YACtB,IAAI;gBACF,QAAQ,GAAG,CAAC;gBACZ,QAAQ,KAAK,GAAG,MAAM,gBAAgB,QAAQ;gBAC9C,QAAQ,GAAG,CAAC,mBAAmB,QAAQ,KAAK;YAC9C,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,kBAAkB;gBAChC,QAAQ,MAAM,CAAC,IAAI,CAAC;oBAAE,MAAM;oBAAS,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;gBAAO;YACrG;YAEA,QAAQ,GAAG,CAAC,6BAA6B;YACzC,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,OAAO;gBAAE,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YAAO;QACzE;IACF;AACF","debugId":null}},
    {"offset": {"line": 1297, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/contexts/SubscriptionContext.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  ReactNode,\n} from \"react\";\nimport { subscriptionApi } from \"@/app/api/subscription\";\nimport { getAuthInfo } from \"@/app/api/auth\";\nimport type {\n  SubscriptionContextType,\n  SubscriptionStatus,\n  SubscriptionPlans,\n  TokenAvailabilityCheck,\n  TokenConsumptionRequest,\n  TokenConsumptionResponse,\n} from \"@/types/subscription\";\n\nconst SubscriptionContext = createContext<SubscriptionContextType | undefined>(\n  undefined\n);\n\ninterface SubscriptionProviderProps {\n  children: ReactNode;\n}\n\nexport const SubscriptionProvider: React.FC<SubscriptionProviderProps> = ({\n  children,\n}) => {\n  const [subscription, setSubscription] = useState<SubscriptionStatus | null>(\n    null\n  );\n  const [plans, setPlans] = useState<SubscriptionPlans | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load subscription plans on mount\n  useEffect(() => {\n    const loadPlans = async () => {\n      try {\n        const plansData = await subscriptionApi.getPlans();\n        setPlans(plansData);\n      } catch (err) {\n        console.error(\"Failed to load subscription plans:\", err);\n        setError(\"Failed to load subscription plans\");\n      }\n    };\n\n    loadPlans();\n  }, []);\n\n  // Load subscription status when user is authenticated\n  useEffect(() => {\n    const loadSubscriptionStatus = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const { userId, orgId } = await getAuthInfo();\n\n        // FIXED: Try both user and organization subscriptions\n        // Priority: organization subscription first, then user subscription\n        let response: SubscriptionStatus | null = null;\n        let entityType = \"\";\n\n        // First try organization subscription if user has orgId\n        if (orgId) {\n          try {\n            response = await subscriptionApi.getSubscriptionStatus(\n              \"organization\",\n              orgId\n            );\n            entityType = \"organization\";\n            console.log(\"Found organization subscription:\", response);\n          } catch {\n            console.log(\n              \"No organization subscription found, trying user subscription\"\n            );\n            response = null;\n          }\n        }\n\n        // If no organization subscription or no orgId, try user subscription\n        if (!response || response.has_subscription === false) {\n          try {\n            response = await subscriptionApi.getSubscriptionStatus(\n              \"user\",\n              userId\n            );\n            entityType = \"user\";\n            console.log(\"Found user subscription:\", response);\n          } catch {\n            console.log(\"No user subscription found either\");\n            response = null;\n          }\n        }\n\n        // Handle the response\n        if (!response || response.has_subscription === false) {\n          console.log(\"No subscription found for user or organization\");\n          setSubscription(null);\n          setError(\n            \"No subscription found. Please contact admin to set up your subscription.\"\n          );\n        } else {\n          // Convert response to SubscriptionStatus format\n          const status: SubscriptionStatus = {\n            subscription_id: response.subscription_id || \"\",\n            tokens_used_this_month: response.tokens_used_this_month || 0,\n            tokens_remaining: response.tokens_remaining || 0,\n            monthly_limit: response.monthly_limit || 0,\n            usage_percentage: response.usage_percentage || 0,\n            reset_date: response.reset_date || \"\",\n            plan_name: response.plan_name || \"Basic Plan\",\n          };\n          setSubscription(status);\n          console.log(\n            `Successfully loaded ${entityType} subscription:`,\n            status\n          );\n        }\n      } catch (err) {\n        console.error(\"Failed to load subscription status:\", err);\n\n        // FIXED: Better error handling\n        if (err instanceof Error) {\n          if (err.message.includes(\"Not authenticated\")) {\n            // User not logged in - this is normal\n            setSubscription(null);\n            setError(null);\n          } else if (\n            err.message.includes(\"Failed to fetch subscription status: 500\")\n          ) {\n            // Server error - likely no subscription exists\n            setSubscription(null);\n            setError(\n              \"No subscription found. Please contact admin to set up your subscription.\"\n            );\n          } else {\n            setError(\"Failed to load subscription status\");\n          }\n        } else {\n          setError(\"Failed to load subscription status\");\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadSubscriptionStatus();\n\n    // Refresh subscription status every 30 seconds\n    const interval = setInterval(loadSubscriptionStatus, 30000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const refreshSubscription = async () => {\n    try {\n      setError(null);\n      const { userId, orgId } = await getAuthInfo();\n\n      // FIXED: Try both user and organization subscriptions\n      // Priority: organization subscription first, then user subscription\n      let response: SubscriptionStatus | null = null;\n      let entityType = \"\";\n\n      // First try organization subscription if user has orgId\n      if (orgId) {\n        try {\n          response = await subscriptionApi.getSubscriptionStatus(\n            \"organization\",\n            orgId\n          );\n          entityType = \"organization\";\n          console.log(\"Refreshed organization subscription:\", response);\n        } catch {\n          console.log(\n            \"No organization subscription found, trying user subscription\"\n          );\n          response = null;\n        }\n      }\n\n      // If no organization subscription or no orgId, try user subscription\n      if (!response || response.has_subscription === false) {\n        try {\n          response = await subscriptionApi.getSubscriptionStatus(\n            \"user\",\n            userId\n          );\n          entityType = \"user\";\n          console.log(\"Refreshed user subscription:\", response);\n        } catch {\n          console.log(\"No user subscription found either\");\n          response = null;\n        }\n      }\n\n      // Handle the response\n      if (!response || response.has_subscription === false) {\n        setSubscription(null);\n        setError(\n          \"No subscription found. Please contact admin to set up your subscription.\"\n        );\n      } else {\n        const status: SubscriptionStatus = {\n          subscription_id: response.subscription_id || \"\",\n          tokens_used_this_month: response.tokens_used_this_month || 0,\n          tokens_remaining: response.tokens_remaining || 0,\n          monthly_limit: response.monthly_limit || 0,\n          usage_percentage: response.usage_percentage || 0,\n          reset_date: response.reset_date || \"\",\n          plan_name: response.plan_name || \"Basic Plan\",\n        };\n        setSubscription(status);\n        console.log(\n          `Successfully refreshed ${entityType} subscription:`,\n          status\n        );\n      }\n    } catch (err) {\n      console.error(\"Failed to refresh subscription status:\", err);\n      setError(\"Failed to refresh subscription status\");\n    }\n  };\n\n  const checkTokenAvailability = async (\n    requiredTokens: number\n  ): Promise<TokenAvailabilityCheck> => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n\n      // FIXED: Try both user and organization subscriptions\n      // Priority: organization subscription first, then user subscription\n      let result: TokenAvailabilityCheck | null = null;\n\n      // First try organization subscription if user has orgId\n      if (orgId) {\n        try {\n          result = await subscriptionApi.checkTokenAvailability(\n            \"organization\",\n            orgId,\n            requiredTokens\n          );\n          console.log(\"Checked organization token availability:\", result);\n        } catch {\n          console.log(\n            \"No organization subscription found, trying user subscription\"\n          );\n          result = null;\n        }\n      }\n\n      // If no organization subscription or no orgId, try user subscription\n      if (!result) {\n        try {\n          result = await subscriptionApi.checkTokenAvailability(\n            \"user\",\n            userId,\n            requiredTokens\n          );\n          console.log(\"Checked user token availability:\", result);\n        } catch {\n          console.log(\"No user subscription found either\");\n          result = null;\n        }\n      }\n\n      // Return result or default response\n      if (result) {\n        return result;\n      } else {\n        return {\n          success: false,\n          has_enough_tokens: false,\n          tokens_required: requiredTokens,\n          tokens_available: 0,\n          can_proceed: false,\n        };\n      }\n    } catch (err) {\n      console.error(\"Failed to check token availability:\", err);\n\n      // FIXED: Return appropriate response for no subscription\n      return {\n        success: false,\n        has_enough_tokens: false,\n        tokens_required: requiredTokens,\n        tokens_available: 0,\n        can_proceed: false,\n      };\n    }\n  };\n\n  const consumeTokens = async (\n    request: TokenConsumptionRequest\n  ): Promise<TokenConsumptionResponse> => {\n    try {\n      const response = await subscriptionApi.consumeTokens(request);\n\n      // Refresh subscription status after consuming tokens\n      await refreshSubscription();\n\n      return response;\n    } catch (err) {\n      console.error(\"Failed to consume tokens:\", err);\n      throw err;\n    }\n  };\n\n  const value: SubscriptionContextType = {\n    subscription,\n    plans,\n    isLoading,\n    error,\n    refreshSubscription,\n    checkTokenAvailability,\n    consumeTokens,\n  };\n\n  return (\n    <SubscriptionContext.Provider value={value}>\n      {children}\n    </SubscriptionContext.Provider>\n  );\n};\n\nexport const useSubscription = (): SubscriptionContextType => {\n  const context = useContext(SubscriptionContext);\n  if (context === undefined) {\n    throw new Error(\n      \"useSubscription must be used within a SubscriptionProvider\"\n    );\n  }\n  return context;\n};\n\n// Hook for token estimation\nexport const useTokenEstimation = () => {\n  const estimateTokens = (\n    operationType:\n      | \"chat\"\n      | \"document_upload\"\n      | \"document_processing\"\n      | \"web_scraping\"\n      | \"embedding_generation\",\n    messageLength?: number,\n    documentSize?: number\n  ): number => {\n    return subscriptionApi.estimateTokensForOperation(\n      operationType,\n      messageLength,\n      documentSize\n    );\n  };\n\n  return { estimateTokens };\n};\n\n// Hook for subscription limits\nexport const useSubscriptionLimits = () => {\n  const { subscription, plans } = useSubscription();\n\n  const getCurrentPlan = () => {\n    if (!subscription || !plans) return null;\n\n    // Find plan by monthly limit\n    const planEntries = Object.entries(plans);\n    const currentPlan = planEntries.find(\n      ([, plan]) => plan.monthly_token_limit === subscription.monthly_limit\n    );\n\n    return currentPlan ? { key: currentPlan[0], plan: currentPlan[1] } : null;\n  };\n\n  const getUpgradeOptions = () => {\n    if (!plans) return [];\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return Object.entries(plans);\n\n    const planEntries = Object.entries(plans);\n    return planEntries.filter(\n      ([, plan]) => plan.monthly_token_limit > subscription!.monthly_limit\n    );\n  };\n\n  const isNearLimit = (threshold: number = 0.9) => {\n    if (!subscription) return false;\n    return subscription.usage_percentage >= threshold * 100;\n  };\n\n  const canCreateChatbot = () => {\n    if (!subscription || !plans) return true;\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return true;\n\n    // This would need to be tracked separately - for now return true\n    return true;\n  };\n\n  const canUploadDocument = () => {\n    if (!subscription || !plans) return true;\n\n    const currentPlan = getCurrentPlan();\n    if (!currentPlan) return true;\n\n    // This would need to be tracked separately - for now return true\n    return true;\n  };\n\n  return {\n    getCurrentPlan,\n    getUpgradeOptions,\n    isNearLimit,\n    canCreateChatbot,\n    canUploadDocument,\n  };\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1644, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/subscription/SimpleSubscriptionStatus.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { Zap, Calendar, AlertTriangle, Loader2, RefreshCw } from \"lucide-react\";\n\ninterface SimpleSubscriptionStatusProps {\n  className?: string;\n  showRefreshButton?: boolean;\n}\n\nexport const SimpleSubscriptionStatus: React.FC<\n  SimpleSubscriptionStatusProps\n> = ({ className, showRefreshButton = true }) => {\n  const { subscription, isLoading, error, refreshSubscription } =\n    useSubscription();\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const formatPercentage = (num: number) => {\n    return `${num.toFixed(1)}%`;\n  };\n\n  if (isLoading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center justify-center space-x-2\">\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n            <span className=\"text-sm\">Loading subscription...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"flex items-center justify-between\">\n              <span>{error}</span>\n              {showRefreshButton && (\n                <RefreshCw\n                  className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform\"\n                  onClick={refreshSubscription}\n                />\n              )}\n            </AlertDescription>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!subscription) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center text-gray-500\">\n            <Zap className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p className=\"text-sm\">No subscription found</p>\n            <p className=\"text-xs mt-1\">\n              Please contact admin to set up your subscription\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const usagePercentage = subscription.usage_percentage;\n  const isNearLimit = usagePercentage >= 80;\n  const isAtLimit = usagePercentage >= 95;\n\n  const getStatusBadge = () => {\n    if (isAtLimit)\n      return <Badge className=\"bg-red-100 text-red-800\">At Limit</Badge>;\n    if (isNearLimit)\n      return (\n        <Badge className=\"bg-yellow-100 text-yellow-800\">Near Limit</Badge>\n      );\n    return <Badge className=\"bg-green-100 text-green-800\">Healthy</Badge>;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center justify-between text-lg\">\n          <span className=\"flex items-center\">\n            <Zap className=\"h-5 w-5 mr-2 text-blue-500\" />\n            Subscription Status\n          </span>\n          {showRefreshButton && (\n            <RefreshCw\n              className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform text-gray-400\"\n              onClick={refreshSubscription}\n            />\n          )}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Plan Information */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-600\">Current Plan</p>\n            <p className=\"text-lg font-semibold\">\n              {subscription.plan_name || \"Basic Plan\"}\n            </p>\n          </div>\n          {getStatusBadge()}\n        </div>\n\n        {/* Token Usage */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">Token Usage</span>\n            <span className=\"font-medium\">\n              {formatNumber(subscription.tokens_used_this_month)} /{\" \"}\n              {formatNumber(subscription.monthly_limit)}\n            </span>\n          </div>\n          <Progress value={usagePercentage} className=\"h-2\" />\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <span>{formatPercentage(usagePercentage)} used</span>\n            <span>{formatNumber(subscription.tokens_remaining)} remaining</span>\n          </div>\n        </div>\n\n        {/* Billing Cycle */}\n        <div className=\"flex items-center justify-between text-sm\">\n          <div className=\"flex items-center text-gray-600\">\n            <Calendar className=\"h-4 w-4 mr-1\" />\n            <span>Resets</span>\n          </div>\n          <span className=\"font-medium\">\n            {new Date(subscription.reset_date).toLocaleDateString()}\n          </span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2076, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/layout/SideBar.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { usePathname, useParams } from \"next/navigation\";\nimport {\n  Home,\n  Settings,\n  Brain,\n  ChevronLeft,\n  ChevronRight,\n  LogOut,\n  User,\n  BrainCircuit,\n} from \"lucide-react\";\n\nimport { RiRobot3Line } from \"react-icons/ri\";\nimport { supabase } from \"@/lib/supabase\";\nimport { Button } from \"@/components/ui/button\";\nimport { toast } from \"sonner\";\nimport type { User as SupabaseUser } from \"@supabase/supabase-js\";\nimport { getUserDisplayName } from \"@/utils/userUtils\";\nimport { SimpleSubscriptionStatus } from \"@/components/subscription/SimpleSubscriptionStatus\";\n\nconst Sidebar = () => {\n  const [isCollapsed, setIsCollapsed] = useState(true);\n  const [user, setUser] = useState<SupabaseUser | null>(null);\n  const pathname = usePathname();\n  const params = useParams();\n\n  useEffect(() => {\n    const getUser = async () => {\n      const {\n        data: { session },\n      } = await supabase.auth.getSession();\n      if (session?.user) {\n        setUser(session.user);\n      }\n    };\n    getUser();\n  }, []);\n\n  // Get userId from params or user state\n  const currentUserId = params?.userId || user?.id;\n\n  // Create a function to get the correct path for menu items\n  const getMenuItemPath = (basePath: string) => {\n    return currentUserId\n      ? `/dashboard/${currentUserId}${basePath}`\n      : `/dashboard${basePath}`;\n  };\n\n  const menuItems = [\n    {\n      title: \"Dashboard\",\n      icon: <Home size={20} />,\n      path: getMenuItemPath(\"\"),\n    },\n    {\n      title: \"Train\",\n      icon: <Brain size={20} />,\n      path: getMenuItemPath(\"/train\"),\n    },\n    {\n      title: \"AI\",\n      icon: <BrainCircuit size={20} />,\n      path: getMenuItemPath(\"/context-settings\"),\n    },\n    {\n      title: \"Customize\",\n      icon: <RiRobot3Line size={20} />,\n      path: getMenuItemPath(\"/customize\"),\n    },\n    {\n      title: \"Settings\",\n      icon: <Settings size={20} />,\n      path: getMenuItemPath(\"/settings\"),\n    },\n  ];\n\n  const handleLogout = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) {\n      toast.error(\"Error logging out\");\n    } else {\n      toast.success(\"Logged out successfully\");\n      window.location.href = \"/auth/login\";\n    }\n  };\n\n  return (\n    <div\n      className={`${\n        isCollapsed ? \"w-[4vw]\" : \"sm:w-60 w-60 z-[999]\"\n      } min-h-screen bg-white text-white transition-all-ease-in-out duration-400 fixed left-0 top-0 flex flex-col`}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-r border-gray-700 overflow-y-auto\">\n        {!isCollapsed && (\n          <span className=\"text-xl font-bold text-white\">Zentria Pro</span>\n        )}\n        <button\n          onClick={() => setIsCollapsed(!isCollapsed)}\n          className=\"pointer\"\n        >\n          {isCollapsed ? (\n            <span className=\"glass shadow-sm p-2 rounded-full flex items-center justify-center\">\n              {\" \"}\n              <ChevronRight size={20} color=\"#fff\" />\n            </span>\n          ) : (\n            <span className=\"glass shadow-sm p-2 rounded-full flex items-center justify-center\">\n              <ChevronLeft size={20} color=\"#fff\" />\n            </span>\n          )}\n        </button>\n      </div>\n\n      {/* User Info */}\n      {!isCollapsed && user && (\n        <div className=\"p-4 border-r border-gray-700 overflow-y-auto\">\n          <div className=\"flex items-center gap-3\">\n            <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center\">\n              <User size={16} className=\"text-white\" />\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-white truncate\">\n                {getUserDisplayName({\n                  id: user.id,\n                  email: user.email || \"\",\n                  name: user.user_metadata?.name || \"\",\n                  display_name: user.user_metadata?.display_name || \"\",\n                })}\n              </p>\n              <p className=\"text-xs text-white\">\n                User ID: {user.id.slice(0, 8)}...\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Navigation */}\n      <nav className=\"p-4 flex-1 border-r border-gray-700 overflow-y-auto\">\n        <ul className=\"space-y-2\">\n          {menuItems.map((item, index) => {\n            // Normalize paths by removing trailing slashes\n            const normalizedItemPath = item.path.replace(/\\/$/, \"\");\n            const normalizedPathname = pathname.replace(/\\/$/, \"\");\n\n            // Much simpler and more reliable active state logic\n            let isActive = false;\n\n            // Split paths into segments for comparison\n            const pathSegments = normalizedPathname.split(\"/\").filter(Boolean);\n            const itemSegments = normalizedItemPath.split(\"/\").filter(Boolean);\n\n            if (item.title === \"Dashboard\") {\n              // Dashboard is active only when we're exactly on /dashboard/{userId} with no additional segments\n              isActive =\n                pathSegments.length === 2 &&\n                pathSegments[0] === \"dashboard\" &&\n                pathSegments[1] !== undefined &&\n                pathSegments[2] === undefined;\n            } else {\n              // For other items, check if the last meaningful segment matches\n              const lastPathSegment = pathSegments[pathSegments.length - 1];\n              const expectedSegment = itemSegments[itemSegments.length - 1];\n              isActive = lastPathSegment === expectedSegment;\n            }\n\n            return (\n              <li key={index}>\n                <Link\n                  href={item.path}\n                  className={`flex items-center gap-4 p-2 rounded-lg transition-colors\n                    ${\n                      isActive\n                        ? \"glass shadow-sm text-white font-bold\"\n                        : \"text-[#0a0a60] hover:text-[#020617]\"\n                    }\n                  `}\n                >\n                  {item.icon}\n                  {!isCollapsed && (\n                    <span className=\"text-base font-semibold\">\n                      {item.title}\n                    </span>\n                  )}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </nav>\n\n      {/* Subscription Status Widget */}\n      {!isCollapsed && (\n        <div className=\"p-4 border-t border-gray-700\">\n          <SimpleSubscriptionStatus showRefreshButton={false} />\n        </div>\n      )}\n\n      {/* Logout Button */}\n      <div className=\"p-4 border-t border-gray-700\">\n        <Button\n          onClick={handleLogout}\n          variant=\"ghost\"\n          className={`w-full justify-start text-gray-600 hover:text-white hover:bg-red-500 ${\n            isCollapsed ? \"px-2\" : \"\"\n          }`}\n        >\n          <LogOut size={20} />\n          {!isCollapsed && <span className=\"ml-4\">Logout</span>}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2457, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,wOAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,uKAAE,EACX,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 2489, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/app/api/routes.ts"],"sourcesContent":["// import { supabase } from \"@/utils/SupabaseClient\";\nimport { ChatbotInfo, UploadFile, ConversationInfo } from \"@/types/schemaTypes\";\nimport { fetchWithAuth, getAuthInfo } from \"@/app/api/auth\";\nimport { apiCache, createCacheKey } from \"@/utils/cache\";\n// import { fetchWithTimeout } from \"@/utils/timeout\";\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\n// Enhanced Types for Context Engineering - Updated to match backend\ninterface ChatResponse {\n  response: string;\n  sources: string[];\n  conversation_id: string;\n  message_id?: string;\n  processing_time_ms: number;\n  context_quality: {\n    context_length: number;\n    has_context: boolean;\n    coverage_score: number;\n    quality_tier: string;\n    timestamp: string;\n  };\n  chatbot_config: {\n    name: string;\n    avatar_url?: string;\n    color_hex: string;\n    tone: string;\n    id?: string;\n  };\n}\n\n// Updated to match backend ContextEngineeringConfig exactly\ninterface ContextConfig {\n  org_id: string;\n  config_name: string;\n  initial_retrieval_count: number;\n  semantic_rerank_count: number;\n  final_context_chunks: number;\n  max_context_length: number;\n  enable_query_rewriting: boolean;\n  max_query_variants: number;\n  conversation_context_turns: number;\n  retrieval_strategy:\n    | \"semantic_only\"\n    | \"hybrid\"\n    | \"keyword_only\"\n    | \"domain_specific\";\n  semantic_weight: number;\n  keyword_weight: number;\n  model_tier: \"fast\" | \"balanced\" | \"premium\" | \"enterprise\";\n  embedding_model: string;\n  rerank_model: string;\n  enable_semantic_rerank: boolean;\n  enable_hallucination_check: boolean;\n  enable_source_verification: boolean;\n  confidence_threshold: number;\n  max_response_time_ms: number;\n  enable_caching: boolean;\n  cache_ttl_minutes: number;\n  domain_filters: Record<string, unknown>;\n  business_context: string;\n  specialized_instructions: string;\n  enable_detailed_logging: boolean;\n  log_user_queries: boolean;\n  collect_feedback: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface PerformanceRecommendation {\n  type: \"performance\" | \"quality\" | \"usage\";\n  issue: string;\n  recommendation: string;\n  suggested_changes: Record<string, unknown>;\n}\n\ninterface PerformanceInsights {\n  recommendations: PerformanceRecommendation[];\n  confidence: number;\n  analysis_date: string;\n}\n\ninterface ContextAnalytics {\n  org_id: string;\n  conversation_id: string;\n  message_id: string;\n  query_original: string;\n  query_enhanced?: string;\n  documents_retrieved: number;\n  context_length: number;\n  context_quality_score: number;\n  retrieval_time_ms: number;\n  response_time_ms: number;\n  model_used: string;\n  sources_count: number;\n  user_satisfaction?: number;\n  feedback_text?: string;\n  timestamp: string;\n}\n\ninterface PerformanceMetrics {\n  summary: {\n    total_queries: number;\n    avg_response_time_ms: number;\n    p95_response_time_ms: number;\n    avg_context_quality: number;\n    avg_satisfaction: number;\n    period_days: number;\n  };\n  performance: {\n    response_time: {\n      average: number;\n      median: number;\n      p95: number;\n      distribution: Record<string, number>;\n    };\n    context_quality: {\n      average: number;\n      distribution: Record<string, number>;\n    };\n    satisfaction: {\n      average: number;\n      total_feedback: number;\n      distribution: Record<string, number>;\n    };\n  };\n  usage_patterns: {\n    hourly_distribution: Record<string, number>;\n    model_usage: Record<string, number>;\n    avg_sources_per_query: number;\n    queries_per_day: number;\n  };\n  trends: {\n    trends_available: boolean;\n    response_time_change?: number;\n    quality_change?: number;\n    volume_change?: number;\n  };\n  quality_analysis: {\n    best_performing_model?: string;\n    optimal_source_count?: number;\n    peak_quality_hours: Array<[number, number]>;\n  };\n  insights: Array<{\n    type: \"warning\" | \"success\" | \"info\";\n    category: \"performance\" | \"quality\" | \"usage\" | \"satisfaction\";\n    title: string;\n    description: string;\n    recommendation: string;\n  }>;\n  generated_at: string;\n}\n\ninterface FeedbackRequest {\n  message_id: string;\n  rating: 1 | -1;\n  feedback_text?: string;\n  feedback_type?: \"quality\" | \"accuracy\" | \"helpfulness\" | \"other\";\n}\n\ninterface RetrainResponse {\n  message: string;\n  status: string;\n}\n\ninterface HealthCheck {\n  status: \"healthy\" | \"degraded\";\n  timestamp: string;\n  services: {\n    database: \"healthy\" | \"error\";\n    chat_service: \"healthy\" | \"error\";\n    context_engine: \"healthy\" | \"error\";\n  };\n  version: string;\n  error?: string;\n}\n\n// Organization API Types\ninterface UpdateOrganizationRequest {\n  name: string;\n  email: string;\n  contact_phone?: string;\n  business_type?: string;\n}\n\ninterface OrganizationInfo {\n  name: string;\n  email: string;\n  plan_id: string | null;\n  contact_phone?: string;\n  business_type?: string;\n}\n\ninterface OrganizationResponse {\n  user: {\n    email: string;\n  };\n  organization: OrganizationInfo;\n}\n\ninterface UpdateOrganizationResponse {\n  success: boolean;\n  message: string;\n  organization: {\n    name: string;\n    email: string;\n  };\n}\n\n// Get token and user info from Supabase session\n// const getAuthInfo = async () => {\n//   const { data } = await supabase.auth.getSession();\n//   const token = data.session?.access_token;\n//   const userId = data.session?.user?.id;\n//   const orgId = data.session?.user?.user_metadata?.org_id;\n\n//   if (!token || !userId) {\n//     throw new Error(\"Not authenticated. Please log in again.\");\n//   }\n\n//   return { token, userId, orgId };\n// };\n\n// Custom error type for API errors\n\n// Enhanced Chatbot API with Context Engineering Support\nexport const chatbotApi = {\n  // ==========================================\n  // CHATBOT MANAGEMENT\n  // ==========================================\n\n  getChatbots: async (): Promise<ChatbotInfo[]> => {\n    const cacheKey = createCacheKey(\"/api/chat/chatbots\");\n\n    // Check cache first\n    const cached = apiCache.get<ChatbotInfo[]>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 10 seconds\"));\n      }, 10000);\n\n      const data = await fetchWithAuth(\"/api/chat/chatbots\", {\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n      const result = data.chatbots || data || [];\n\n      // Cache for 2 minutes\n      apiCache.set(cacheKey, result, 2 * 60 * 1000);\n\n      return result;\n    } catch (error) {\n      console.error(\"Error fetching chatbots:\", error);\n      if (\n        error instanceof Error &&\n        (error.name === \"AbortError\" || error.message.includes(\"timeout\"))\n      ) {\n        throw new Error(\"Request timed out. Please try again.\");\n      }\n      throw error;\n    }\n  },\n\n  getChatbot: async (chatbotId: string): Promise<ChatbotInfo> => {\n    return fetchWithAuth(`/api/chat/chatbots/${chatbotId}`);\n  },\n\n  createChatbot: async (config: ChatbotInfo): Promise<ChatbotInfo> => {\n    const { userId, orgId } = await getAuthInfo();\n\n    // Ensure org_id is always present - use a default if not set\n    const finalOrgId = orgId || `user_${userId}_org`;\n\n    // Map frontend ai_model_config to backend model_config format\n    const backendConfig = {\n      ...config,\n      user_id: userId,\n      org_id: finalOrgId,\n    };\n\n    // Map ai_model_config to what backend expects\n    if (config.ai_model_config) {\n      backendConfig.ai_model_config = config.ai_model_config;\n      // Backend stores this as model_config internally\n    }\n\n    console.log(\"🤖 Creating chatbot with config:\", {\n      ...backendConfig,\n      user_id: userId.substring(0, 8) + \"...\",\n      org_id: finalOrgId.substring(0, 12) + \"...\",\n    });\n\n    const response = await fetchWithAuth(\"/api/chat/chatbots\", {\n      method: \"POST\",\n      body: JSON.stringify(backendConfig),\n    });\n\n    return response.chatbot || response;\n  },\n\n  updateChatbot: async (\n    chatbotId: string,\n    config: ChatbotInfo\n  ): Promise<ChatbotInfo> => {\n    const response = await fetchWithAuth(`/api/chat/chatbots/${chatbotId}`, {\n      method: \"PUT\",\n      body: JSON.stringify(config),\n    });\n\n    return response.chatbot || response;\n  },\n\n  deleteChatbot: async (chatbotId: string): Promise<void> => {\n    await fetchWithAuth(`/api/chat/chatbots/${chatbotId}`, {\n      method: \"DELETE\",\n    });\n  },\n\n  activateChatbot: async (chatbotId: string): Promise<void> => {\n    await fetchWithAuth(`/api/chat/chatbots/${chatbotId}/activate`, {\n      method: \"POST\",\n    });\n  },\n\n  // ==========================================\n  // HEALTH CHECK & SYSTEM STATUS\n  // ==========================================\n\n  healthCheck: async (): Promise<{\n    status: \"healthy\" | \"degraded\";\n    timestamp: string;\n    services: {\n      database: \"healthy\" | \"error\";\n      chat_service: \"healthy\" | \"error\";\n      context_engine: \"healthy\" | \"error\";\n    };\n    version: string;\n    error?: string;\n  }> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/health\");\n    } catch (error) {\n      console.warn(\"Health check failed:\", error);\n      return {\n        status: \"degraded\",\n        timestamp: new Date().toISOString(),\n        services: {\n          database: \"error\",\n          chat_service: \"error\",\n          context_engine: \"error\",\n        },\n        version: \"unknown\",\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  },\n};\n\n// ==========================================\n// KNOWLEDGE BASE MANAGEMENT\n// ==========================================\nexport const uploadsApi = {\n  getUploads: async (): Promise<UploadFile[]> => {\n    const cacheKey = createCacheKey(\"/api/uploads\");\n\n    // Check cache first\n    const cached = apiCache.get<UploadFile[]>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 8 seconds\"));\n      }, 8000);\n\n      const data = await fetchWithAuth(\"/api/uploads\", {\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      let result: UploadFile[] = [];\n      if (Array.isArray(data)) {\n        result = data;\n      } else if (data.uploads && Array.isArray(data.uploads)) {\n        result = data.uploads;\n      } else if (data.data && Array.isArray(data.data)) {\n        result = data.data;\n      } else {\n        console.warn(\"Unexpected uploads response structure:\", data);\n        result = [];\n      }\n\n      // Cache for 1 minute (uploads change more frequently)\n      apiCache.set(cacheKey, result, 1 * 60 * 1000);\n\n      return result;\n    } catch (error) {\n      console.error(\"Error fetching uploads:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\"Request timed out. Please try again.\");\n      }\n      throw error;\n    }\n  },\n\n  uploadFile: async (file: File, type: string): Promise<UploadFile> => {\n    const { token, userId, orgId } = await getAuthInfo();\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    const headers: Record<string, string> = {\n      Authorization: `Bearer ${token}`,\n      \"X-User-ID\": userId,\n    };\n\n    if (orgId) {\n      headers[\"X-Org-ID\"] = orgId;\n    }\n\n    console.log(\n      `📤 Uploading file: ${file.name} (${file.size} bytes) as ${type}`\n    );\n\n    const response = await fetch(`${BASE_URL}/api/uploads/${type}`, {\n      method: \"POST\",\n      headers,\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Upload failed (${response.status}): ${errorText}`);\n    }\n\n    const result = await response.json();\n    console.log(`✅ File uploaded successfully:`, result);\n    return result;\n  },\n\n  uploadFileWithTokenHandling: async (\n    file: File,\n    type: string,\n    tokenHandler?: any\n  ): Promise<UploadFile | null> => {\n    if (!tokenHandler) {\n      return uploadsApi.uploadFile(file, type);\n    }\n\n    return tokenHandler.wrapApiCall(\n      () => uploadsApi.uploadFile(file, type),\n      'document_upload',\n      undefined,\n      file.size\n    );\n  },\n\n  uploadUrl: async (url: string): Promise<UploadFile> => {\n    console.log(`🔗 Uploading URL: ${url}`);\n    return fetchWithAuth(\"/api/uploads/url\", {\n      method: \"POST\",\n      body: JSON.stringify({ url }),\n    });\n  },\n\n  uploadJson: async (\n    jsonData: object,\n    filename: string = \"training-data.json\"\n  ): Promise<UploadFile> => {\n    console.log(`📋 Uploading JSON data: ${filename}`);\n\n    // Convert JSON object to File\n    const jsonString = JSON.stringify(jsonData, null, 2);\n    const blob = new Blob([jsonString], { type: \"application/json\" });\n    const file = new File([blob], filename, { type: \"application/json\" });\n\n    return uploadsApi.uploadFile(file, \"json\");\n  },\n\n  deleteUpload: async (uploadId: string): Promise<void> => {\n    console.log(`🗑️ Deleting upload: ${uploadId}`);\n    await fetchWithAuth(`/api/uploads/${uploadId}`, {\n      method: \"DELETE\",\n    });\n  },\n\n  reprocessUpload: async (uploadId: string): Promise<RetrainResponse> => {\n    console.log(`🔄 Reprocessing upload: ${uploadId}`);\n    return fetchWithAuth(`/api/uploads/${uploadId}/reprocess`, {\n      method: \"POST\",\n    });\n  },\n\n  getUploadStatus: async (\n    uploadId: string\n  ): Promise<{\n    id: string;\n    status: string;\n    progress?: number;\n    error_message?: string;\n    processed_at?: string;\n  }> => {\n    return fetchWithAuth(`/api/uploads/${uploadId}/status`);\n  },\n\n  // ==========================================\n  // SYSTEM HEALTH & MONITORING\n  // ==========================================\n};\n\n// ==========================================\n// ENHANCED CHAT & CONVERSATIONS\n// ==========================================\nexport const conversationApi = {\n  sendMessage: async (\n    message: string,\n    chatbotId?: string,\n    conversationId?: string\n  ): Promise<ChatResponse> => {\n    try {\n      // Match backend parameter names exactly\n      const body = {\n        message,\n        ...(chatbotId && { chatbot_id: chatbotId }),\n        ...(conversationId && { conversation_id: conversationId }),\n      };\n\n      console.log(\"📤 Sending message with payload:\", {\n        message: message.substring(0, 50) + \"...\",\n        has_chatbot_id: !!chatbotId,\n        has_conversation_id: !!conversationId,\n      });\n\n      return await fetchWithAuth(\"/api/chat/conversation\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n      });\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      throw error;\n    }\n  },\n\n  sendMessageWithTokenHandling: async (\n    message: string,\n    chatbotId?: string,\n    conversationId?: string,\n    tokenHandler?: any\n  ): Promise<ChatResponse | null> => {\n    if (!tokenHandler) {\n      return conversationApi.sendMessage(message, chatbotId, conversationId);\n    }\n\n    return tokenHandler.wrapApiCall(\n      () => conversationApi.sendMessage(message, chatbotId, conversationId),\n      'chat',\n      message.length\n    );\n  },\n\n  getConversations: async (limit?: number): Promise<ConversationInfo[]> => {\n    try {\n      // For dashboard, use a smaller limit for faster loading\n      const queryLimit = limit || (limit === 10 ? 10 : 10000);\n      const data = await fetchWithAuth(\n        `/api/chat/conversations?limit=${queryLimit}`\n      );\n      return data.conversations || data || [];\n    } catch (error) {\n      console.error(\"Error fetching conversations:\", error);\n      throw error;\n    }\n  },\n\n  // Fast conversation count for dashboard stats\n  getConversationCount: async (): Promise<number> => {\n    try {\n      const cacheKey = createCacheKey('conversation-count');\n      const cached = apiCache.get(cacheKey);\n      if (typeof cached === 'number') {\n        return cached;\n      }\n\n      // Get total count from pagination metadata (much more efficient)\n      const data = await fetchWithAuth('/api/chat/conversations?page_size=1');\n      \n      // Extract total count from pagination metadata\n      const totalCount = data.pagination?.total_items || 0;\n      \n      // Cache for 30 seconds\n      apiCache.set(cacheKey, totalCount, 30 * 1000);\n      return totalCount;\n    } catch (error) {\n      console.error(\"Error fetching conversation count:\", error);\n      return 0; // Return 0 on error to prevent UI breaking\n    }\n  },\n\n  addFeedback: async (\n    feedbackRequest: FeedbackRequest\n  ): Promise<{ success: boolean; message?: string }> => {\n    return fetchWithAuth(\"/api/chat/feedback\", {\n      method: \"POST\",\n      body: JSON.stringify(feedbackRequest),\n    });\n  },\n\n  // ==========================================\n  // ENHANCED CONTEXT ENGINEERING\n  // ==========================================\n\n  getContextConfig: async (\n    configName: string = \"default\"\n  ): Promise<{\n    success: boolean;\n    config: ContextConfig;\n    message: string;\n  } | null> => {\n    try {\n      // Use a more targeted approach to avoid console noise\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n        ...(orgId && { \"X-Org-ID\": orgId }),\n      };\n\n      const response = await fetch(\n        `${BASE_URL}/api/chat/context-config?config_name=${configName}`,\n        {\n          method: \"GET\",\n          headers,\n        }\n      );\n\n      if (!response.ok) {\n        // Silently return null for 404 (endpoint not available) or other expected errors\n        return null;\n      }\n\n      const result = await response.json();\n      return result;\n    } catch {\n      // Silently handle connection errors - this is expected in development\n      return null;\n    }\n  },\n\n  updateContextConfig: async (\n    updates: Partial<ContextConfig>\n  ): Promise<{\n    success: boolean;\n    message: string;\n  }> => {\n    // Validate the updates object\n    if (!updates || typeof updates !== \"object\") {\n      throw new Error(\"Invalid context config updates provided\");\n    }\n\n    // Additional validation to prevent server errors\n    const sanitizedUpdates = Object.fromEntries(\n      Object.entries(updates).filter(([key, value]) => {\n        // Remove undefined values that might cause server issues\n        if (value === undefined) {\n          console.debug(`⚠️ Removing undefined value for key: ${key}`);\n          return false;\n        }\n        return true;\n      })\n    );\n\n    console.debug(\"🔧 Updating context config with sanitized payload:\", {\n      originalKeys: Object.keys(updates),\n      sanitizedKeys: Object.keys(sanitizedUpdates),\n      payload: sanitizedUpdates,\n    });\n\n    try {\n      const requestPayload = { config_updates: sanitizedUpdates };\n      console.debug(\n        \"📤 Sending request payload:\",\n        JSON.stringify(requestPayload, null, 2)\n      );\n\n      // Use direct fetch to avoid excessive logging for expected failures\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n        ...(orgId && { \"X-Org-ID\": orgId }),\n      };\n\n      const response = await fetch(`${BASE_URL}/api/chat/context-config`, {\n        method: \"PUT\",\n        headers,\n        body: JSON.stringify(requestPayload),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.debug(\"✅ Context config update successful\");\n        return (\n          result || {\n            success: true,\n            message: \"Configuration updated successfully\",\n          }\n        );\n      } else {\n        // Handle specific error cases without logging errors for expected failures\n        if (response.status === 404) {\n          console.debug(\n            \"⚠️ Context config endpoint not available, using local fallback\"\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally (backend endpoint not available)\",\n          };\n        } else if (response.status === 401) {\n          throw new Error(\n            \"Session expired. Please refresh the page and try again.\"\n          );\n        } else {\n          console.warn(\n            `⚠️ Context config update failed with status ${response.status}`\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally. Server sync will retry automatically.\",\n          };\n        }\n      }\n    } catch (error) {\n      console.debug(\"❌ Context config update error:\", error);\n\n      // Handle specific error cases with better user feedback\n      if (error instanceof Error) {\n        // If authentication error, provide clearer guidance\n        if (\n          error.message.includes(\"Authentication\") ||\n          error.message.includes(\"401\")\n        ) {\n          throw new Error(\n            \"Session expired. Please refresh the page and try again.\"\n          );\n        }\n\n        // If it's a network error, provide fallback\n        if (\n          error.message.includes(\"fetch\") ||\n          error.message.includes(\"network\")\n        ) {\n          console.debug(\n            \"⚠️ Network error during context config update, using fallback\"\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally. Changes will sync when connection is restored.\",\n          };\n        }\n      }\n\n      // For other errors, provide a fallback response instead of throwing\n      console.debug(\n        \"⚠️ Context config update error, providing fallback response\"\n      );\n      return {\n        success: true,\n        message:\n          \"Configuration saved locally. Some features may not sync until connection is restored.\",\n      };\n    }\n  },\n\n  createCustomContextConfig: async (\n    configName: string,\n    baseTemplate: string = \"saas\",\n    customSettings: Partial<ContextConfig> = {}\n  ): Promise<{\n    success: boolean;\n    config: ContextConfig;\n    message: string;\n  }> => {\n    return fetchWithAuth(\"/api/chat/context-config/custom\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        config_name: configName,\n        base_template: baseTemplate,\n        custom_settings: customSettings,\n      }),\n    });\n  },\n\n  // Get business templates - matches backend default configs\n\n  // ==========================================\n  // ANALYTICS & INSIGHTS (Updated to match backend exactly)\n  // ==========================================\n\n  getAnalyticsDashboard: async (\n    days: number = 7\n  ): Promise<PerformanceMetrics | null> => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 15 seconds\"));\n      }, 15000);\n\n      const result = await fetchWithAuth(\n        `/api/chat/analytics/dashboard?days=${days}`,\n        {\n          signal: controller.signal,\n        }\n      );\n\n      clearTimeout(timeoutId);\n      return result;\n    } catch (error) {\n      console.warn(\"Analytics dashboard not available:\", error);\n      if (\n        error instanceof Error &&\n        (error.name === \"AbortError\" || error.message.includes(\"timeout\"))\n      ) {\n        console.warn(\"Analytics request timed out\");\n      }\n      return null;\n    }\n  },\n\n  getPerformanceInsights: async (): Promise<{\n    success: boolean;\n    insights: PerformanceMetrics;\n    generated_at: string;\n  } | null> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/performance-insights\");\n    } catch (error) {\n      console.warn(\"Performance insights not available:\", error);\n      return null;\n    }\n  },\n\n  getContextAnalytics: async (\n    days: number = 7\n  ): Promise<{\n    success: boolean;\n    analytics: ContextAnalytics[];\n    summary: {\n      total_queries: number;\n      avg_quality_score: number;\n      avg_retrieval_time: number;\n      model_distribution: Record<string, number>;\n    };\n  } | null> => {\n    try {\n      return await fetchWithAuth(`/api/chat/analytics/context?days=${days}`);\n    } catch (error) {\n      console.warn(\"Context analytics not available:\", error);\n      return null;\n    }\n  },\n\n  analyzeQueryOptimization: async (\n    query: string\n  ): Promise<{\n    original_query: string;\n    enhanced_query: string;\n    expected_quality: number;\n    strategy_recommendation: string;\n    estimated_response_time: number;\n  } | null> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/analytics/query-optimization\", {\n        method: \"POST\",\n        body: JSON.stringify({ query }),\n      });\n    } catch (error) {\n      console.warn(\"Query optimization not available:\", error);\n      return null;\n    }\n  },\n\n  // getContextAnalytics: async (days: number = 7): Promise<{\n  //   analytics: ContextAnalytics[];\n  //   summary: {\n  //     total_queries: number;\n  //     avg_quality_score: number;\n  //     avg_retrieval_time: number;\n  //     model_distribution: Record<string, number>;\n  //   };\n  // }> => {\n  //   return fetchWithAuth(`/api/chat/analytics/context?days=${days}`);\n  // },\n\n  // analyzeQuery: async (query: string): Promise<{\n  //   original_query: string;\n  //   enhanced_query?: string;\n  //   expected_quality: number;\n  //   strategy_recommendation: string;\n  //   estimated_response_time: number;\n  // }> => {\n  //   return fetchWithAuth('/api/chat/analytics/query-optimization', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ query }),\n  //   });\n  // },\n\n  // getQueryAnalysis: async (query: string, days: number = 30): Promise<{\n  //   similar_queries_found: number;\n  //   analysis: {\n  //     avg_context_quality: number;\n  //     avg_response_time_ms: number;\n  //     avg_satisfaction: number;\n  //     most_common_sources: Array<[string, number]>;\n  //   } | null;\n  // }> => {\n  //   return fetchWithAuth('/api/chat/analytics/query-analysis', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ query, days }),\n  //   });\n  // },\n\n  exportAnalyticsData: async (\n    startDate: string,\n    endDate: string,\n    format: \"json\" | \"csv\" = \"json\"\n  ): Promise<{\n    format: string;\n    data: unknown[];\n    count: number;\n    error?: string;\n  }> => {\n    return fetchWithAuth(\"/api/chat/analytics/export\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        start_date: startDate,\n        end_date: endDate,\n        format,\n      }),\n    });\n  },\n\n  getHealthCheck: async (): Promise<HealthCheck> => {\n    const response = await fetch(`${BASE_URL}/api/chat/health`);\n    return response.json();\n  },\n\n// ==========================================\n// UTILITY METHODS\n// ==========================================\n\n  getAuthHeaders: async (): Promise<Record<string, string>> => {\n    const { token, userId, orgId } = await getAuthInfo();\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n      \"X-User-ID\": userId,\n      ...(orgId && { \"X-Org-ID\": orgId }),\n    };\n  },\n\n  testConnection: async (): Promise<{\n    success: boolean;\n    responseTime: number;\n    error?: string;\n  }> => {\n    const startTime = Date.now();\n    try {\n      await fetchWithAuth(\"/api/chat/health\");\n      return {\n        success: true,\n        responseTime: Date.now() - startTime,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        responseTime: Date.now() - startTime,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  },\n\n  getCurrentUserContext: async (): Promise<{\n    userId: string;\n    orgId?: string;\n    isAuthenticated: boolean;\n  }> => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n      return {\n        userId,\n        orgId,\n        isAuthenticated: true,\n      };\n    } catch {\n      return {\n        userId: \"\",\n        orgId: undefined,\n        isAuthenticated: false,\n      };\n    }\n  },\n};\n\n// ==========================================\n// ORGANIZATION MANAGEMENT API\n// ==========================================\nexport const organizationApi = {\n  getOrganizationInfo: async (): Promise<OrganizationResponse> => {\n    try {\n      const cacheKey = createCacheKey(\"/api/org/info\");\n      \n      // Check cache first\n      const cached = apiCache.get<OrganizationResponse>(cacheKey);\n      if (cached) {\n        return cached;\n      }\n\n      console.log(\"🔍 Fetching organization info from:\", `${BASE_URL}/api/org/info`);\n      \n      try {\n        const data = await fetchWithAuth(\"/api/org/info\");\n        \n        // Cache for 5 minutes\n        apiCache.set(cacheKey, data, 5 * 60 * 1000);\n        \n        return data;\n      } catch (error) {\n        // If organization endpoint doesn't exist, return mock data\n        console.warn(\"Organization endpoint not available, using mock data:\", error);\n        \n        const mockData: OrganizationResponse = {\n          user: {\n            email: \"user@example.com\"\n          },\n          organization: {\n            name: \"Demo Organization\",\n            email: \"org@example.com\",\n            plan_id: \"free\"\n          }\n        };\n        \n        // Cache mock data for 1 minute\n        apiCache.set(cacheKey, mockData, 1 * 60 * 1000);\n        \n        return mockData;\n      }\n    } catch (error) {\n      console.error(\"Error fetching organization info:\", error);\n      console.error(\"Error details:\", {\n        name: error instanceof Error ? error.name : 'Unknown',\n        message: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      throw error;\n    }\n  },\n\n  updateOrganization: async (\n    request: UpdateOrganizationRequest\n  ): Promise<UpdateOrganizationResponse> => {\n    try {\n      console.log(\"🏢 Updating organization:\", {\n        name: request.name,\n        email: request.email.substring(0, 3) + \"***\" // Log partial email for security\n      });\n\n      // Debug: Log the full URL being called\n      console.log(\"🔍 Calling organization update endpoint:\", `${BASE_URL}/api/org/update`);\n\n      // Try the organization update endpoint\n      try {\n        const response = await fetchWithAuth(\"/api/org/update\", {\n          method: \"PATCH\",\n          body: JSON.stringify(request),\n        });\n\n        console.log(\"✅ Organization update response:\", response);\n\n        // Handle different response formats\n        if (response && typeof response === 'object') {\n          // If response has success field, use it as is\n          if ('success' in response) {\n            // Invalidate organization cache after successful update\n            apiCache.deleteMatching(\"/api/org\");\n            return response as UpdateOrganizationResponse;\n          }\n          \n          // If response has message field, format it properly\n          if ('message' in response) {\n            const formattedResponse: UpdateOrganizationResponse = {\n              success: true,\n              message: response.message as string,\n              organization: {\n                name: request.name,\n                email: request.email\n              }\n            };\n            \n            // Invalidate organization cache after successful update\n            apiCache.deleteMatching(\"/api/org\");\n            return formattedResponse;\n          }\n        }\n\n        // If response doesn't match expected format, create a success response\n        console.log(\"⚠️ Unexpected response format, creating success response\");\n        const successResponse: UpdateOrganizationResponse = {\n          success: true,\n          message: \"Organization updated successfully\",\n          organization: {\n            name: request.name,\n            email: request.email\n          }\n        };\n\n        // Invalidate organization cache after successful update\n        apiCache.deleteMatching(\"/api/org\");\n        return successResponse;\n      } catch (orgError) {\n        console.warn(\"Organization update endpoint failed, trying alternative paths...\");\n        \n        // Try alternative endpoint paths that might exist\n        const alternativeEndpoints = [\n          \"/api/user/organization/update\", \n          \"/api/settings/org/update\"\n        ];\n\n        for (const endpoint of alternativeEndpoints) {\n          try {\n            console.log(`🔄 Trying alternative endpoint: ${endpoint}`);\n            const response = await fetchWithAuth(endpoint, {\n              method: \"PATCH\",\n              body: JSON.stringify(request),\n            });\n            \n            console.log(`✅ Success with endpoint: ${endpoint}`);\n            apiCache.deleteMatching(\"/api/org\");\n            return response;\n          } catch (altError) {\n            console.log(`❌ Failed with endpoint: ${endpoint}`, altError);\n            continue;\n          }\n        }\n        \n        // If all alternatives fail, return a mock success response for development\n        console.warn(\"All organization endpoints failed, returning mock success response\");\n        console.warn(\"Original error:\", orgError);\n        \n        const mockResponse: UpdateOrganizationResponse = {\n          success: true,\n          message: \"Organization updated successfully (mock response - backend endpoint not available)\",\n          organization: {\n            name: request.name,\n            email: request.email\n          }\n        };\n        \n        // Invalidate cache anyway\n        apiCache.deleteMatching(\"/api/org\");\n        \n        return mockResponse;\n      }\n    } catch (error) {\n      console.error(\"Error updating organization:\", error);\n      console.error(\"Error details:\", {\n        name: error instanceof Error ? error.name : 'Unknown',\n        message: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      throw error;\n    }\n  },\n\n  getChatbots: async (): Promise<ChatbotInfo[]> => {\n    try {\n      const data = await fetchWithAuth(\"/api/org/chatbots\");\n      return data.chatbots || data || [];\n    } catch (error) {\n      console.error(\"Error fetching organization chatbots:\", error);\n      throw error;\n    }\n  },\n};\n\n// Export additional utility functions\nexport const apiUtils = {\n  formatError: (error: unknown): string => {\n    if (error instanceof Error) {\n      return error.message;\n    }\n    if (typeof error === \"string\") {\n      return error;\n    }\n    return \"An unexpected error occurred. Please try again.\";\n  },\n\n  isAuthenticated: async (): Promise<boolean> => {\n    try {\n      await getAuthInfo();\n      return true;\n    } catch {\n      return false;\n    }\n  },\n\n  getBaseUrl: (): string => BASE_URL,\n\n  createRequestId: (): string =>\n    `req-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n\n  // Helper function to invalidate cache when data changes\n  invalidateCache: (pattern?: string) => {\n    if (pattern) {\n      // Use the new pattern matching method\n      const deletedCount = apiCache.deleteMatching(pattern);\n      console.log(`Cache invalidation: deleted ${deletedCount} entries matching \"${pattern}\"`);\n    } else {\n      // Clear all cache\n      apiCache.clear();\n      console.log('Cache invalidation: cleared all cache entries');\n    }\n  },\n};\n\n// Export types for use in components\nexport type {\n  ChatResponse,\n  ContextConfig,\n  PerformanceMetrics,\n  ConversationInfo,\n  FeedbackRequest,\n  HealthCheck,\n  PerformanceRecommendation,\n  PerformanceInsights,\n  ContextAnalytics,\n  UpdateOrganizationRequest,\n  OrganizationInfo,\n  OrganizationResponse,\n  UpdateOrganizationResponse,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3267, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/hooks/useServerConnection.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { conversationApi } from \"@/app/api/routes\";\n\ninterface ConnectionState {\n  isConnected: boolean;\n  isChecking: boolean;\n  lastChecked: Date | null;\n  error: string | null;\n}\n\nexport function useServerConnection(checkInterval: number = 30000) {\n  const [connectionState, setConnectionState] = useState<ConnectionState>({\n    isConnected: false,\n    isChecking: true,\n    lastChecked: null,\n    error: null,\n  });\n\n  const checkConnection = useCallback(async () => {\n    try {\n      setConnectionState((prev) => ({\n        ...prev,\n        isChecking: true,\n        error: null,\n      }));\n\n      const result = await conversationApi.testConnection();\n\n      setConnectionState({\n        isConnected: result.success,\n        isChecking: false,\n        lastChecked: new Date(),\n        error: result.success ? null : \"Connection test failed\",\n      });\n\n      return result.success;\n    } catch (error) {\n      const errorMessage =\n        error instanceof Error ? error.message : \"Unknown connection error\";\n\n      setConnectionState({\n        isConnected: false,\n        isChecking: false,\n        lastChecked: new Date(),\n        error: errorMessage,\n      });\n\n      return false;\n    }\n  }, []);\n\n  // Initial connection check\n  useEffect(() => {\n    checkConnection();\n  }, [checkConnection]);\n\n  // Periodic connection checks\n  useEffect(() => {\n    if (checkInterval > 0) {\n      const interval = setInterval(checkConnection, checkInterval);\n      return () => clearInterval(interval);\n    }\n  }, [checkConnection, checkInterval]);\n\n  const isConnectionError = useCallback((error: unknown): boolean => {\n    if (!(error instanceof Error)) return false;\n\n    return (\n      error.message.includes(\"Unable to connect\") ||\n      error.message.includes(\"server unavailable\") ||\n      error.message.includes(\"ECONNREFUSED\") ||\n      error.message.includes(\"network\") ||\n      error.message.includes(\"timeout\")\n    );\n  }, []);\n\n  const getConnectionErrorMessage = useCallback(\n    (error: unknown): string => {\n      if (!isConnectionError(error)) {\n        return \"An unexpected error occurred\";\n      }\n\n      return \"Unable to connect to server. Please check if the backend service is running.\";\n    },\n    [isConnectionError]\n  );\n\n  return {\n    ...connectionState,\n    checkConnection,\n    isConnectionError,\n    getConnectionErrorMessage,\n  };\n}\n\n// Simpler hook for just checking if an error is connection-related\nexport function useConnectionErrorHandler() {\n  const isConnectionError = useCallback((error: unknown): boolean => {\n    if (!(error instanceof Error)) return false;\n\n    return (\n      error.message.includes(\"Unable to connect\") ||\n      error.message.includes(\"server unavailable\") ||\n      error.message.includes(\"ECONNREFUSED\") ||\n      error.message.includes(\"network\") ||\n      error.message.includes(\"timeout\")\n    );\n  }, []);\n\n  const getErrorMessage = useCallback(\n    (error: unknown): string => {\n      if (!(error instanceof Error)) {\n        return \"An unexpected error occurred\";\n      }\n\n      if (isConnectionError(error)) {\n        return \"Unable to connect to server. Please check if the backend service is running and try again.\";\n      }\n\n      if (\n        error.message.includes(\"Not authenticated\") ||\n        error.message.includes(\"Authentication expired\")\n      ) {\n        return \"Your session has expired. Please log in again.\";\n      }\n\n      if (\n        error.message.includes(\"Access denied\") ||\n        error.message.includes(\"Unauthorized\")\n      ) {\n        return \"You don't have permission to perform this action.\";\n      }\n\n      if (error.message.includes(\"timeout\")) {\n        return \"The request timed out. Please try again.\";\n      }\n\n      return error.message || \"An unexpected error occurred\";\n    },\n    [isConnectionError]\n  );\n\n  return {\n    isConnectionError,\n    getErrorMessage,\n  };\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;;AASO,SAAS;QAAoB,gBAAA,iEAAwB;;IAC1D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,IAAA,oNAAQ,EAAkB;QACtE,aAAa;QACb,YAAY;QACZ,aAAa;QACb,OAAO;IACT;IAEA,MAAM,kBAAkB,IAAA,uNAAW;4DAAC;YAClC,IAAI;gBACF;wEAAmB,CAAC,OAAS,CAAC;4BAC5B,GAAG,IAAI;4BACP,YAAY;4BACZ,OAAO;wBACT,CAAC;;gBAED,MAAM,SAAS,MAAM,4LAAe,CAAC,cAAc;gBAEnD,mBAAmB;oBACjB,aAAa,OAAO,OAAO;oBAC3B,YAAY;oBACZ,aAAa,IAAI;oBACjB,OAAO,OAAO,OAAO,GAAG,OAAO;gBACjC;gBAEA,OAAO,OAAO,OAAO;YACvB,EAAE,OAAO,OAAO;gBACd,MAAM,eACJ,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBAE3C,mBAAmB;oBACjB,aAAa;oBACb,YAAY;oBACZ,aAAa,IAAI;oBACjB,OAAO;gBACT;gBAEA,OAAO;YACT;QACF;2DAAG,EAAE;IAEL,2BAA2B;IAC3B,IAAA,qNAAS;yCAAC;YACR;QACF;wCAAG;QAAC;KAAgB;IAEpB,6BAA6B;IAC7B,IAAA,qNAAS;yCAAC;YACR,IAAI,gBAAgB,GAAG;gBACrB,MAAM,WAAW,YAAY,iBAAiB;gBAC9C;qDAAO,IAAM,cAAc;;YAC7B;QACF;wCAAG;QAAC;QAAiB;KAAc;IAEnC,MAAM,oBAAoB,IAAA,uNAAW;8DAAC,CAAC;YACrC,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG,OAAO;YAEtC,OACE,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,yBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,cACvB,MAAM,OAAO,CAAC,QAAQ,CAAC;QAE3B;6DAAG,EAAE;IAEL,MAAM,4BAA4B,IAAA,uNAAW;sEAC3C,CAAC;YACC,IAAI,CAAC,kBAAkB,QAAQ;gBAC7B,OAAO;YACT;YAEA,OAAO;QACT;qEACA;QAAC;KAAkB;IAGrB,OAAO;QACL,GAAG,eAAe;QAClB;QACA;QACA;IACF;AACF;GAnFgB;AAsFT,SAAS;;IACd,MAAM,oBAAoB,IAAA,uNAAW;oEAAC,CAAC;YACrC,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG,OAAO;YAEtC,OACE,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,yBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,cACvB,MAAM,OAAO,CAAC,QAAQ,CAAC;QAE3B;mEAAG,EAAE;IAEL,MAAM,kBAAkB,IAAA,uNAAW;kEACjC,CAAC;YACC,IAAI,CAAC,CAAC,iBAAiB,KAAK,GAAG;gBAC7B,OAAO;YACT;YAEA,IAAI,kBAAkB,QAAQ;gBAC5B,OAAO;YACT;YAEA,IACE,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,2BACvB;gBACA,OAAO;YACT;YAEA,IACE,MAAM,OAAO,CAAC,QAAQ,CAAC,oBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,iBACvB;gBACA,OAAO;YACT;YAEA,IAAI,MAAM,OAAO,CAAC,QAAQ,CAAC,YAAY;gBACrC,OAAO;YACT;YAEA,OAAO,MAAM,OAAO,IAAI;QAC1B;iEACA;QAAC;KAAkB;IAGrB,OAAO;QACL;QACA;IACF;AACF;IAlDgB","debugId":null}},
    {"offset": {"line": 3406, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ChatWidget.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport {\n  Send,\n  Bot,\n  User,\n  MessageCircle,\n  X,\n  Minus,\n  ChevronDown,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { conversationApi, chatbotApi } from \"@/app/api/routes\";\nimport { ChatbotInfo } from \"@/types/schemaTypes\";\nimport { useConnectionErrorHandler } from \"@/hooks/useServerConnection\";\nimport Image from \"next/image\";\n\ninterface Message {\n  id: string;\n  type: \"user\" | \"bot\";\n  content: string;\n  timestamp: Date;\n  sources?: string[];\n}\n\ninterface ChatWidgetProps {\n  position?: \"bottom-right\" | \"bottom-left\";\n  chatbotId?: string; // Specific chatbot ID to use\n  showChatbotSelector?: boolean; // Allow users to switch between chatbots\n  orgId?: string; // Organization ID (optional, will use current user's org)\n}\n\nexport default function ChatWidget({\n  position = \"bottom-right\",\n  chatbotId,\n  showChatbotSelector = false,\n}: // orgId,\nChatWidgetProps) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [conversationId, setConversationId] = useState<string>();\n  const [availableChatbots, setAvailableChatbots] = useState<ChatbotInfo[]>([]);\n  const [selectedChatbot, setSelectedChatbot] = useState<ChatbotInfo | null>(\n    null\n  );\n  const [loadingChatbots, setLoadingChatbots] = useState(true);\n  const [showChatbotDropdown, setShowChatbotDropdown] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean | null>(null);\n  const [isClient, setIsClient] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Connection error handling\n  const { getErrorMessage } = useConnectionErrorHandler();\n\n  // Ensure component only renders on client to prevent hydration issues\n  useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  // Load organization's chatbots\n  useEffect(() => {\n    const loadChatbots = async () => {\n      try {\n        setLoadingChatbots(true);\n\n        // Check authentication first\n        const authCheck = await conversationApi.getCurrentUserContext();\n        setIsAuthenticated(authCheck.isAuthenticated);\n\n        if (!authCheck.isAuthenticated) {\n          setMessages([\n            {\n              id: \"greeting\",\n              type: \"bot\",\n              content:\n                \"Hello! To use the chat feature, please log in to your account first.\",\n              timestamp: new Date(),\n            },\n          ]);\n          return;\n        }\n\n        const chatbots = await chatbotApi.getChatbots();\n\n        if (chatbots && chatbots.length > 0) {\n          setAvailableChatbots(chatbots);\n\n          // Select chatbot based on priority:\n          // 1. Provided chatbotId\n          // 2. Active chatbot\n          // 3. First available chatbot\n          let targetChatbot: ChatbotInfo | null = null;\n\n          if (chatbotId) {\n            targetChatbot =\n              chatbots.find((bot) => bot.id === chatbotId) || null;\n          }\n\n          if (!targetChatbot) {\n            targetChatbot =\n              chatbots.find((bot) => bot.chain_status === \"active\") ||\n              chatbots[0];\n          }\n\n          if (targetChatbot) {\n            // Get full chatbot details\n            const fullChatbot = await chatbotApi.getChatbot(targetChatbot.id);\n            setSelectedChatbot(fullChatbot);\n\n            // Set initial greeting message\n            setMessages([\n              {\n                id: \"greeting\",\n                type: \"bot\",\n                content:\n                  fullChatbot.greeting_message ||\n                  `Hello! I'm ${fullChatbot.name}. How can I help you today?`,\n                timestamp: new Date(),\n              },\n            ]);\n          }\n        } else {\n          // No chatbots available - show default message\n          setMessages([\n            {\n              id: \"greeting\",\n              type: \"bot\",\n              content:\n                \"Hello! I'm your AI assistant. Please note that no chatbots are currently configured for your organization.\",\n              timestamp: new Date(),\n            },\n          ]);\n        }\n      } catch (error) {\n        console.error(\"Error loading chatbots:\", error);\n\n        // Check if it's an authentication error\n        if (\n          error instanceof Error &&\n          error.message.includes(\"Not authenticated\")\n        ) {\n          setIsAuthenticated(false);\n          setMessages([\n            {\n              id: \"greeting\",\n              type: \"bot\",\n              content:\n                \"Hello! To use the chat feature, please log in to your account first.\",\n              timestamp: new Date(),\n            },\n          ]);\n        } else {\n          // Use the connection error handler for consistent messaging\n          const errorMessage = getErrorMessage(error);\n          setMessages([\n            {\n              id: \"greeting\",\n              type: \"bot\",\n              content: `Hello! ${errorMessage}`,\n              timestamp: new Date(),\n            },\n          ]);\n        }\n      } finally {\n        setLoadingChatbots(false);\n      }\n    };\n\n    loadChatbots();\n  }, [chatbotId, getErrorMessage]);\n\n  // Handle chatbot selection change\n  const handleChatbotChange = async (newChatbotId: string) => {\n    try {\n      const newChatbot = await chatbotApi.getChatbot(newChatbotId);\n      setSelectedChatbot(newChatbot);\n      setConversationId(undefined); // Reset conversation for new chatbot\n\n      // Reset messages with new greeting\n      setMessages([\n        {\n          id: \"greeting\",\n          type: \"bot\",\n          content:\n            newChatbot.greeting_message ||\n            `Hello! I'm ${newChatbot.name}. How can I help you today?`,\n          timestamp: new Date(),\n        },\n      ]);\n\n      setShowChatbotDropdown(false);\n    } catch (error) {\n      console.error(\"Error switching chatbot:\", error);\n    }\n  };\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSendMessage = async () => {\n    if (!inputMessage.trim() || isTyping || !isAuthenticated) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      type: \"user\",\n      content: inputMessage,\n      timestamp: new Date(),\n    };\n\n    setMessages((prev) => [...prev, userMessage]);\n    const currentMessage = inputMessage;\n    setInputMessage(\"\");\n    setIsTyping(true);\n\n    try {\n      const response = await conversationApi.sendMessage(\n        currentMessage,\n        selectedChatbot?.id || chatbotId,\n        conversationId\n      );\n\n      // Store conversation ID for follow-up messages\n      if (response.conversation_id && !conversationId) {\n        setConversationId(response.conversation_id);\n      }\n\n      const botResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        type: \"bot\",\n        content: response.response,\n        timestamp: new Date(),\n        sources: response.sources || [],\n      };\n\n      setMessages((prev) => [...prev, botResponse]);\n    } catch (error) {\n      console.error(\"Error getting bot response:\", error);\n\n      // Handle authentication errors specially\n      if (\n        error instanceof Error &&\n        (error.message.includes(\"Not authenticated\") ||\n          error.message.includes(\"Authentication expired\"))\n      ) {\n        setIsAuthenticated(false);\n      }\n\n      // Use the connection error handler for consistent messaging\n      const errorMessage = getErrorMessage(error);\n\n      const errorResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        type: \"bot\",\n        content: errorMessage,\n        timestamp: new Date(),\n      };\n      setMessages((prev) => [...prev, errorResponse]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const positionClasses = {\n    \"bottom-right\": \"bottom-10 right-4\",\n    \"bottom-left\": \"bottom-10 left-4\",\n  };\n\n  // Don't render anything until client-side hydration is complete\n  if (!isClient) {\n    return null;\n  }\n\n  if (!isOpen) {\n    return (\n      <div className={`fixed ${positionClasses[position]} z-50`}>\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"pointer rounded-full w-14 h-14 shadow-lg hover:shadow-xl transition-all duration-200\"\n          style={{ backgroundColor: selectedChatbot?.color_hex || \"#3B82F6\" }}\n          disabled={loadingChatbots}\n        >\n          {loadingChatbots ? (\n            <div className=\"w-6 h-6 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n          ) : (\n            <MessageCircle className=\"h-6 w-6 text-white\" />\n          )}\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`fixed ${positionClasses[position]} flex flex-col p-0 z-50`}\n    >\n      <div\n        className={`w-[25vw] flex flex-col shadow-2xl rounded-lg p-3 transition-all bg-white m-0 duration-300 ${\n          isMinimized ? \"h-14\" : \"h-[70vh]\"\n        }`}\n      >\n        <div\n          className=\"flex-row items-center justify-between space-y-0 p-3 text-white rounded-lg shadow-md\"\n          style={{\n            background: selectedChatbot?.color_hex\n              ? `linear-gradient(135deg, ${selectedChatbot.color_hex}, ${selectedChatbot.color_hex}dd)`\n              : \"linear-gradient(135deg, #3B82F6, #2563EB)\",\n          }}\n        >\n          <div className=\"flex flex-row justify-between items-center gap-5 flex-1\">\n            <div className=\"flex flex-row items-center gap-2\">\n              <div className=\"w-9 h-9 rounded-full flex flex-row items-center justify-center bg-white/20\">\n                {selectedChatbot?.avatar_url ? (\n                  <Image\n                    src={\n                      selectedChatbot.avatar_url.includes(\n                        \"storage/v1/object/uploads/\"\n                      )\n                        ? `${\n                            process.env.NEXT_PUBLIC_API_BASE_URL ||\n                            \"http://localhost:8001\"\n                          }/api/uploads/avatar/legacy/${\n                            selectedChatbot.avatar_url.split(\n                              \"storage/v1/object/uploads/\"\n                            )[1]\n                          }`\n                        : selectedChatbot.avatar_url\n                    }\n                    alt={selectedChatbot.name}\n                    width={30}\n                    height={30}\n                    unoptimized={true}\n                    className=\"w-9 h-9 rounded-full\"\n                  />\n                ) : (\n                  <Bot className=\"h-4 w-4 text-white\" />\n                )}\n              </div>\n\n              {showChatbotSelector && availableChatbots.length > 1 ? (\n                <div className=\"relative gap-3\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setShowChatbotDropdown(!showChatbotDropdown)}\n                    className=\"h-auto p-1 text-white hover:bg-white/20 flex items-center gap-1\"\n                  >\n                    <span className=\"font-medium text-sm\">\n                      {selectedChatbot?.name || \"Select Chatbot\"}\n                    </span>\n                    <ChevronDown className=\"h-3 w-3\" />\n                  </Button>\n\n                  {showChatbotDropdown && (\n                    <div className=\"absolute top-full left-0 mt-1 bg-white rounded-md shadow-lg border z-10 min-w-48\">\n                      {availableChatbots.map((chatbot) => (\n                        <button\n                          key={chatbot.id}\n                          onClick={() => handleChatbotChange(chatbot.id)}\n                          className=\"w-full text-left px-3 py-2 text-sm text-gray-700 hover:bg-gray-100 flex items-center gap-2\"\n                        >\n                          <div\n                            className=\"w-3 h-3 rounded-full\"\n                            style={{\n                              backgroundColor: chatbot.color_hex || \"#3B82F6\",\n                            }}\n                          />\n                          <span>{chatbot.name}</span>\n                          {chatbot.chain_status === \"active\" && (\n                            <span className=\"text-xs text-green-600 ml-auto\">\n                              Active\n                            </span>\n                          )}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <span className=\"font-medium text-sm\">\n                  {selectedChatbot?.name || \"Assistant\"}\n                </span>\n              )}\n\n              <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n            </div>\n            <span className=\"flex items-center gap-3\">\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsMinimized(!isMinimized)}\n                className=\"pointer h-7 w-7 rounded-lg p-0 text-white bg-white/20\"\n              >\n                <Minus className=\"h-3 w-3\" />\n              </Button>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setIsOpen(false)}\n                className=\"pointer h-7 w-7 rounded-lg p-0 bg-white\"\n              >\n                <X\n                  className=\"h-3 w-3\"\n                  style={{\n                    color: selectedChatbot?.color_hex,\n                  }}\n                />\n              </Button>{\" \"}\n            </span>\n          </div>\n        </div>\n\n        {!isMinimized && (\n          <div className=\"relative flex-1 flex flex-col overflow-scroll\">\n            {/* Messages Area */}\n            <div className=\"flex-1 overflow-y-auto p-3 space-y-3\">\n              {/* Show login prompt if not authenticated */}\n              {isAuthenticated === false && (\n                <div className=\"text-center py-4\">\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <Bot className=\"h-8 w-8 text-blue-500 mx-auto mb-2\" />\n                    <h3 className=\"font-medium text-blue-900 mb-2\">\n                      Login Required\n                    </h3>\n                    <p className=\"text-sm text-blue-700 mb-3\">\n                      Please log in to your account to start chatting with our\n                      AI assistant.\n                    </p>\n                    <Button\n                      size=\"sm\"\n                      onClick={() => (window.location.href = \"/login\")}\n                      className=\"bg-blue-600 hover:bg-blue-700\"\n                    >\n                      Go to Login\n                    </Button>\n                  </div>\n                </div>\n              )}\n\n              {messages.map((message) => (\n                <div\n                  key={message.id}\n                  className={`flex ${\n                    message.type === \"user\" ? \"justify-end\" : \"justify-start\"\n                  }`}\n                >\n                  <div\n                    className={`max-w-[85%] p-2 rounded-lg text-sm ${\n                      message.type === \"user\"\n                        ? \"text-white ml-2\"\n                        : \"bg-gray-100 mr-2\"\n                    }`}\n                    style={{\n                      backgroundColor:\n                        message.type === \"user\"\n                          ? selectedChatbot?.color_hex || \"#3B82F6\"\n                          : undefined,\n                    }}\n                  >\n                    <div className=\"flex items-start gap-2\">\n                      {message.type === \"bot\" && (\n                        <Bot className=\"h-3 w-3 text-blue-500 mt-0.5 flex-shrink-0\" />\n                      )}\n                      {message.type === \"user\" && (\n                        <User className=\"h-3 w-3 text-white mt-0.5 flex-shrink-0\" />\n                      )}\n                      <div className=\"flex-1\">\n                        <p className=\"whitespace-pre-wrap\">{message.content}</p>\n                        {message.sources && message.sources.length > 0 && (\n                          <div className=\"mt-1 text-xs text-gray-500\">\n                            Sources: {message.sources.length} document(s)\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              {/* Typing Indicator */}\n              {isTyping && (\n                <div className=\"flex justify-start\">\n                  <div className=\"bg-gray-100 mr-2 p-2 rounded-lg max-w-[85%]\">\n                    <div className=\"flex items-center gap-2\">\n                      <Bot className=\"h-3 w-3 text-blue-500\" />\n                      <div className=\"flex gap-1\">\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce delay-100\"></div>\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce delay-200\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              <div ref={messagesEndRef} />\n            </div>\n\n            {/* Input Area */}\n            <div className=\"p-2 border-t bg-gray-50 \">\n              <div className=\"flex items-center gap-2\">\n                <Input\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyDown={handleKeyDown}\n                  placeholder={\n                    !isAuthenticated\n                      ? \"Please log in to chat...\"\n                      : `Ask ${selectedChatbot?.name || \"Assistant\"}...`\n                  }\n                  className=\"flex-1 text-sm focus:ring-1 focus:ring-opacity-50 focus:border-transparent transition-all duration-200\"\n                  style={\n                    {\n                      \"--tw-ring-color\":\n                        selectedChatbot?.color_hex || \"#3B82F6\",\n                    } as React.CSSProperties & { \"--tw-ring-color\": string }\n                  }\n                  disabled={isTyping || !selectedChatbot || !isAuthenticated}\n                />\n                <Button\n                  onClick={handleSendMessage}\n                  disabled={\n                    !inputMessage.trim() ||\n                    isTyping ||\n                    !selectedChatbot ||\n                    !isAuthenticated\n                  }\n                  size=\"sm\"\n                  className=\"px-3\"\n                  style={{\n                    backgroundColor: selectedChatbot?.color_hex || \"#3B82F6\",\n                  }}\n                >\n                  <Send className=\"h-3 w-3\" />\n                </Button>\n              </div>\n              <p className=\"mt-3 text-xs text-right\">Powered by Zaakiy</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4182, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ClientOnlyWrapper.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\n\ninterface ClientOnlyWrapperProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}\n\nexport default function ClientOnlyWrapper({\n  children,\n  fallback = null,\n}: ClientOnlyWrapperProps) {\n  const [hasMounted, setHasMounted] = useState(false);\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":";;;;;AAEA;;;AAFA;;AASe,SAAS,kBAAkB,KAGjB;QAHiB,EACxC,QAAQ,EACR,WAAW,IAAI,EACQ,GAHiB;;IAIxC,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,oNAAQ,EAAC;IAE7C,IAAA,qNAAS;uCAAC;YACR,cAAc;QAChB;sCAAG,EAAE;IAEL,IAAI,CAAC,YAAY;QACf,qBAAO;sBAAG;;IACZ;IAEA,qBAAO;kBAAG;;AACZ;GAfwB;KAAA","debugId":null}}]
}