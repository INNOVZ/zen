{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/ErrorBoundary.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, RefreshCw } from \"lucide-react\";\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error?: Error; retry: () => void }>;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n}\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error(\"ErrorBoundary caught an error:\", error, errorInfo);\n    this.props.onError?.(error, errorInfo);\n  }\n\n  retry = () => {\n    this.setState({ hasError: false, error: undefined });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return (\n          <FallbackComponent error={this.state.error} retry={this.retry} />\n        );\n      }\n\n      return (\n        <Card className=\"border-red-200\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-red-600\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              Something went wrong\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"text-gray-600\">\n              {this.state.error?.message || \"An unexpected error occurred\"}\n            </p>\n            <Button\n              onClick={this.retry}\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              Try again\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Simple functional error fallback component\nexport const SimpleErrorFallback: React.FC<{\n  error?: Error;\n  retry: () => void;\n}> = ({ error, retry }) => (\n  <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\n    <div className=\"flex items-center gap-2 text-red-600 mb-2\">\n      <AlertTriangle className=\"h-4 w-4\" />\n      <span className=\"font-medium\">Error loading component</span>\n    </div>\n    <p className=\"text-sm text-gray-600 mb-3\">\n      {error?.message || \"Something went wrong\"}\n    </p>\n    <Button size=\"sm\" onClick={retry} variant=\"outline\">\n      Retry\n    </Button>\n  </div>\n);\n\nexport default ErrorBoundary;\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;;AAkBA,MAAM,sBAAsB,mNAAK,CAAC,SAAS;IASzC,OAAO,yBAAyB,KAAY,EAAsB;QAChE,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAA0B,EAAE;YAE1D,qBAAA;QADA,QAAQ,KAAK,CAAC,kCAAkC,OAAO;SACvD,sBAAA,CAAA,cAAA,IAAI,CAAC,KAAK,EAAC,OAAO,cAAlB,0CAAA,yBAAA,aAAqB,OAAO;IAC9B;IAMA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAkBd;YAjBT,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,MAAM,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7C,qBACE,wOAAC;oBAAkB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,KAAK;;;;;;YAEjE;YAEA,qBACE,wOAAC,sLAAI;gBAAC,WAAU;;kCACd,wOAAC,4LAAU;kCACT,cAAA,wOAAC,2LAAS;4BAAC,WAAU;;8CACnB,wOAAC,uRAAa;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;kCAIzC,wOAAC,6LAAW;wBAAC,WAAU;;0CACrB,wOAAC;gCAAE,WAAU;0CACV,EAAA,oBAAA,IAAI,CAAC,KAAK,CAAC,KAAK,cAAhB,wCAAA,kBAAkB,OAAO,KAAI;;;;;;0CAEhC,wOAAC,0LAAM;gCACL,SAAS,IAAI,CAAC,KAAK;gCACnB,SAAQ;gCACR,WAAU;;kDAEV,wOAAC,2QAAS;wCAAC,WAAU;;;;;;oCAAY;;;;;;;;;;;;;;;;;;;QAM3C;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IArDA,YAAY,KAAyB,CAAE;QACrC,KAAK,CAAC,QAaR,0NAAA,SAAQ;YACN,IAAI,CAAC,QAAQ,CAAC;gBAAE,UAAU;gBAAO,OAAO;YAAU;QACpD;QAdE,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;AAmDF;AAGO,MAAM,sBAGR;QAAC,EAAE,KAAK,EAAE,KAAK,EAAE;yBACpB,wOAAC;QAAI,WAAU;;0BACb,wOAAC;gBAAI,WAAU;;kCACb,wOAAC,uRAAa;wBAAC,WAAU;;;;;;kCACzB,wOAAC;wBAAK,WAAU;kCAAc;;;;;;;;;;;;0BAEhC,wOAAC;gBAAE,WAAU;0BACV,CAAA,kBAAA,4BAAA,MAAO,OAAO,KAAI;;;;;;0BAErB,wOAAC,0LAAM;gBAAC,MAAK;gBAAK,SAAS;gBAAO,SAAQ;0BAAU;;;;;;;;;;;;;KAZ3C;uCAkBE","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/stores/customizeStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport type {\n  ChatbotInfo,\n  UploadFile,\n  ConversationInfo,\n} from \"@/types/schemaTypes\";\nimport type {\n  ContextConfig,\n  PerformanceMetrics,\n  ChatResponse,\n} from \"@/app/api/routes\";\nimport type { User } from \"@supabase/supabase-js\";\nimport { chatbotApi, conversationApi, uploadsApi } from \"@/app/api/routes\";\nimport { toast } from \"sonner\";\n\n// Define the store state interface\ninterface CustomizeState {\n  // Loading states\n  loading: boolean;\n  saving: boolean;\n  analyticsLoading: boolean;\n  uploading: boolean;\n\n  // UI state\n  activeTab: string;\n  showCreateForm: boolean;\n  showEmbedModal: boolean;\n  isEditMode: boolean;\n\n  // User and organization data\n  currentUser: User | null;\n  orgChatbots: ChatbotInfo[];\n  selectedChatbot: ChatbotInfo | null;\n\n  // Upload and embed data\n  uploads: UploadFile[];\n  embedCode: string;\n\n  // Analytics and performance\n  performanceMetrics: PerformanceMetrics | null;\n  conversations: ConversationInfo[];\n\n  // Deletion state\n  deletingChatbotId: string | null;\n\n  // Configuration\n  contextConfig: ContextConfig;\n  config: ChatbotInfo;\n\n  // Error states\n  error: string | null;\n  connectionStatus: \"connected\" | \"disconnected\" | \"checking\" | \"partial\";\n\n  // Chat state\n  chatMessages: ChatResponse[];\n  currentConversationId: string | null;\n\n  // Basic Actions\n  setLoading: (loading: boolean) => void;\n  setSaving: (saving: boolean) => void;\n  setActiveTab: (activeTab: string) => void;\n  setShowCreateForm: (showCreateForm: boolean) => void;\n  setShowEmbedModal: (showEmbedModal: boolean) => void;\n  setIsEditMode: (isEditMode: boolean) => void;\n  setAnalyticsLoading: (analyticsLoading: boolean) => void;\n  setUploading: (uploading: boolean) => void;\n  setCurrentUser: (currentUser: User | null) => void;\n  setError: (error: string | null) => void;\n  setConnectionStatus: (\n    status: \"connected\" | \"disconnected\" | \"checking\"\n  ) => void;\n\n  // Data Actions\n  setOrgChatbots: (orgChatbots: ChatbotInfo[]) => void;\n  setSelectedChatbot: (selectedChatbot: ChatbotInfo | null) => void;\n  setUploads: (uploads: UploadFile[]) => void;\n  setEmbedCode: (embedCode: string) => void;\n  setPerformanceMetrics: (\n    performanceMetrics: PerformanceMetrics | null\n  ) => void;\n  setDeletingChatbotId: (deletingChatbotId: string | null) => void;\n  setConversations: (conversations: ConversationInfo[]) => void;\n  setChatMessages: (messages: ChatResponse[]) => void;\n  setCurrentConversationId: (id: string | null) => void;\n\n  // Configuration Actions\n  setContextConfig: (contextConfig: ContextConfig) => void;\n  updateContextConfig: (updates: Partial<ContextConfig>) => void;\n  setConfig: (config: ChatbotInfo) => void;\n  updateConfig: (updates: Partial<ChatbotInfo>) => void;\n\n  // Enhanced Async Actions\n  loadChatbots: () => Promise<void>;\n  loadUploads: () => Promise<void>;\n  loadContextConfig: () => Promise<void>;\n  loadPerformanceMetrics: (days?: number) => Promise<void>;\n  createChatbot: (config: ChatbotInfo) => Promise<ChatbotInfo | null>;\n  updateChatbot: (\n    chatbotId: string,\n    config: ChatbotInfo\n  ) => Promise<ChatbotInfo | null>;\n  deleteChatbot: (chatbotId: string) => Promise<void>;\n  saveContextConfig: (updates: Partial<ContextConfig>) => Promise<void>;\n  uploadFile: (file: File, type: string) => Promise<UploadFile | null>;\n  generateEmbedCode: (chatbotId: string) => string;\n  testConnection: () => Promise<boolean>;\n\n  // Utility Actions\n  resetState: () => void;\n  initializeStore: (retryCount?: number) => Promise<void>;\n}\n\n// Default context configuration\nconst defaultContextConfig: ContextConfig = {\n  org_id: \"\",\n  config_name: \"default\",\n  initial_retrieval_count: 20,\n  semantic_rerank_count: 10,\n  final_context_chunks: 5,\n  max_context_length: 4000,\n  enable_query_rewriting: true,\n  max_query_variants: 3,\n  conversation_context_turns: 3,\n  retrieval_strategy: \"hybrid\",\n  semantic_weight: 0.6,\n  keyword_weight: 0.4,\n  model_tier: \"balanced\",\n  embedding_model: \"text-embedding-3-small\",\n  rerank_model: \"gpt-3.5-turbo\",\n  enable_semantic_rerank: true,\n  enable_hallucination_check: true,\n  enable_source_verification: true,\n  confidence_threshold: 0.7,\n  max_response_time_ms: 5000,\n  enable_caching: true,\n  cache_ttl_minutes: 60,\n  domain_filters: {},\n  business_context: \"\",\n  specialized_instructions: \"\",\n  enable_detailed_logging: true,\n  log_user_queries: true,\n  collect_feedback: true,\n  created_at: \"\",\n  updated_at: \"\",\n};\n\n// Default chatbot configuration\nconst defaultConfig: ChatbotInfo = {\n  id: \"\",\n  name: \"\",\n  description: \"\",\n  color_hex: \"#6a8fff\",\n  tone: \"helpful\",\n  behavior: \"Be helpful and informative while maintaining professionalism\",\n  system_prompt: \"\",\n  greeting_message:\n    \"Hello! I'm your INNOVZ AI Assistant. How can I help you today?\",\n  fallback_message:\n    \"I apologize, but I don't have enough information to answer that accurately. Could you please rephrase or provide more context?\",\n  ai_model_config: {\n    model: \"gpt-4\",\n    temperature: 0.7,\n    max_tokens: 1000,\n  },\n  is_active: true,\n  chain_status: \"ready\",\n  trainer_at: \"\",\n  created_at: \"\",\n  status: \"active\",\n  deployment_config: {\n    url: \"\",\n    headers: {},\n    method: \"POST\",\n  },\n  avatar_url: \"\",\n};\n\n// Create the Zustand store\nexport const useCustomizeStore = create<CustomizeState>()(\n  devtools(\n    (set, get) => ({\n      // Initial state\n      loading: true,\n      saving: false,\n      activeTab: \"basic\",\n      showCreateForm: false,\n      showEmbedModal: false,\n      isEditMode: false,\n      analyticsLoading: false,\n      uploading: false,\n\n      currentUser: null,\n      error: null,\n      connectionStatus: \"checking\",\n\n      orgChatbots: [],\n      selectedChatbot: null,\n      uploads: [],\n      embedCode: \"\",\n      performanceMetrics: null,\n      conversations: [],\n      deletingChatbotId: null,\n\n      contextConfig: defaultContextConfig,\n      config: defaultConfig,\n      chatMessages: [],\n      currentConversationId: null,\n\n      // Basic Actions\n      setLoading: (loading) => set({ loading }, false, \"setLoading\"),\n      setSaving: (saving) => set({ saving }, false, \"setSaving\"),\n      setActiveTab: (activeTab) => set({ activeTab }, false, \"setActiveTab\"),\n      setShowCreateForm: (showCreateForm) =>\n        set({ showCreateForm }, false, \"setShowCreateForm\"),\n      setShowEmbedModal: (showEmbedModal) =>\n        set({ showEmbedModal }, false, \"setShowEmbedModal\"),\n      setIsEditMode: (isEditMode) =>\n        set({ isEditMode }, false, \"setIsEditMode\"),\n      setAnalyticsLoading: (analyticsLoading) =>\n        set({ analyticsLoading }, false, \"setAnalyticsLoading\"),\n      setUploading: (uploading) => set({ uploading }, false, \"setUploading\"),\n      setCurrentUser: (currentUser) =>\n        set({ currentUser }, false, \"setCurrentUser\"),\n      setError: (error) => set({ error }, false, \"setError\"),\n      setConnectionStatus: (connectionStatus) =>\n        set({ connectionStatus }, false, \"setConnectionStatus\"),\n\n      // Data Actions\n      setOrgChatbots: (orgChatbots) =>\n        set({ orgChatbots }, false, \"setOrgChatbots\"),\n      setSelectedChatbot: (selectedChatbot) =>\n        set({ selectedChatbot }, false, \"setSelectedChatbot\"),\n      setUploads: (uploads) => set({ uploads }, false, \"setUploads\"),\n      setEmbedCode: (embedCode) => set({ embedCode }, false, \"setEmbedCode\"),\n      setPerformanceMetrics: (performanceMetrics) =>\n        set({ performanceMetrics }, false, \"setPerformanceMetrics\"),\n      setDeletingChatbotId: (deletingChatbotId) =>\n        set({ deletingChatbotId }, false, \"setDeletingChatbotId\"),\n      setConversations: (conversations) =>\n        set({ conversations }, false, \"setConversations\"),\n      setChatMessages: (chatMessages) =>\n        set({ chatMessages }, false, \"setChatMessages\"),\n      setCurrentConversationId: (currentConversationId) =>\n        set({ currentConversationId }, false, \"setCurrentConversationId\"),\n\n      // Configuration Actions\n      setContextConfig: (contextConfig) =>\n        set({ contextConfig }, false, \"setContextConfig\"),\n      updateContextConfig: (updates) =>\n        set(\n          (state) => ({\n            contextConfig: { ...state.contextConfig, ...updates },\n          }),\n          false,\n          \"updateContextConfig\"\n        ),\n\n      setConfig: (config) => set({ config }, false, \"setConfig\"),\n      updateConfig: (updates) =>\n        set(\n          (state) => ({\n            config: { ...state.config, ...updates },\n          }),\n          false,\n          \"updateConfig\"\n        ),\n\n      // Enhanced Async Actions with better error handling\n      loadChatbots: async () => {\n        try {\n          set({ loading: true, error: null });\n          const chatbots = await chatbotApi.getChatbots();\n          set({\n            orgChatbots: chatbots,\n            loading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\") ||\n            error.message.includes(\"Not authenticated\")\n          );\n\n          // Check if this is likely an initial load error (no chatbots loaded yet)\n          const currentState = get();\n          const isInitialLoad = !currentState.orgChatbots || currentState.orgChatbots.length === 0;\n\n          if (isDevelopment && isConnectionError && isInitialLoad) {\n            // In development, suppress error messages during initial load\n            console.debug(\"Initial load - chatbots loading failed (likely auth in progress)\");\n            set({\n              loading: false,\n              connectionStatus: \"disconnected\",\n            });\n            return; // Don't set error state for initial load failures\n          }\n\n          if (isDevelopment && isConnectionError) {\n            // In development, just log a warning for connection errors\n            console.warn(\"Chatbots loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading chatbots:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load chatbots\",\n            loading: false,\n            connectionStatus: \"disconnected\",\n          });\n\n          // Only show toast for unexpected errors, not connection issues in development\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load chatbots. Please check your connection.\");\n          }\n        }\n      },\n\n      loadUploads: async () => {\n        try {\n          const uploads = await uploadsApi.getUploads();\n          set({ uploads, connectionStatus: \"connected\" });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\")\n          );\n\n          if (isDevelopment && isConnectionError) {\n            console.warn(\"Uploads loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading uploads:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load uploads\",\n            connectionStatus: \"disconnected\",\n          });\n\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load knowledge base files.\");\n          }\n        }\n      },\n\n      loadContextConfig: async () => {\n        try {\n          const response = await conversationApi.getContextConfig();\n          if (response && response.success) {\n            set({\n              contextConfig: response.config,\n              connectionStatus: \"connected\",\n            });\n          }\n        } catch (error) {\n          console.error(\"Error loading context config:\", error);\n          set({\n            error: \"Failed to load context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to load AI configuration.\");\n        }\n      },\n\n      loadPerformanceMetrics: async (days = 7) => {\n        try {\n          set({ analyticsLoading: true });\n          const metrics = await conversationApi.getAnalyticsDashboard(days);\n          set({\n            performanceMetrics: metrics,\n            analyticsLoading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          console.error(\"Error loading performance metrics:\", error);\n          set({\n            performanceMetrics: null,\n            analyticsLoading: false,\n            error: \"Failed to load analytics\",\n            connectionStatus: \"disconnected\",\n          });\n          // Don't show error toast for analytics as it's not critical\n        }\n      },\n\n      createChatbot: async (config) => {\n        try {\n          set({ saving: true, error: null });\n          const chatbot = await chatbotApi.createChatbot(config);\n          set((state) => ({\n            orgChatbots: [...state.orgChatbots, chatbot],\n            selectedChatbot: chatbot,\n            saving: false,\n            showCreateForm: false,\n            isEditMode: true,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot created successfully!\");\n          return chatbot;\n        } catch (error) {\n          console.error(\"Error creating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to create chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to create chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      updateChatbot: async (chatbotId, config) => {\n        try {\n          set({ saving: true, error: null });\n          const updatedChatbot = await chatbotApi.updateChatbot(\n            chatbotId,\n            config\n          );\n          set((state) => ({\n            orgChatbots: state.orgChatbots.map((bot) =>\n              bot.id === chatbotId ? updatedChatbot : bot\n            ),\n            selectedChatbot: updatedChatbot,\n            saving: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot updated successfully!\");\n          return updatedChatbot;\n        } catch (error) {\n          console.error(\"Error updating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to update chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      deleteChatbot: async (chatbotId) => {\n        try {\n          set({ deletingChatbotId: chatbotId, error: null });\n          await chatbotApi.deleteChatbot(chatbotId);\n          set((state) => ({\n            orgChatbots: state.orgChatbots.filter(\n              (bot) => bot.id !== chatbotId\n            ),\n            selectedChatbot:\n              state.selectedChatbot?.id === chatbotId\n                ? null\n                : state.selectedChatbot,\n            deletingChatbotId: null,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting chatbot:\", error);\n          set({\n            deletingChatbotId: null,\n            error: \"Failed to delete chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to delete chatbot. Please try again.\");\n        }\n      },\n\n      saveContextConfig: async (updates) => {\n        try {\n          set({ saving: true, error: null });\n          const response = await conversationApi.updateContextConfig(updates);\n\n          if (response && response.success) {\n            set((state) => ({\n              contextConfig: { ...state.contextConfig, ...updates },\n              saving: false,\n              connectionStatus: \"connected\",\n            }));\n            toast.success(\"Context configuration updated successfully!\");\n          } else {\n            throw new Error(response?.message || \"Save failed\");\n          }\n        } catch (error) {\n          console.error(\"Error saving context config:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? `Failed to save: ${error.message}`\n              : \"Failed to update context configuration. Please try again.\";\n          toast.error(errorMessage);\n        }\n      },\n\n      uploadFile: async (file, type) => {\n        try {\n          set({ uploading: true, error: null });\n          const uploadResult = await uploadsApi.uploadFile(file, type);\n          set((state) => ({\n            uploads: [...state.uploads, uploadResult],\n            uploading: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"File uploaded successfully!\");\n          return uploadResult;\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          set({\n            uploading: false,\n            error: \"Failed to upload file\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to upload file. Please try again.\");\n          return null;\n        }\n      },\n\n      testConnection: async () => {\n        try {\n          set({ connectionStatus: \"checking\" });\n          // First try a simple health check without auth\n          try {\n            const healthResponse = await conversationApi.getHealthCheck();\n            if (healthResponse) {\n              // If basic health check passes, try authenticated connection\n              const result = await conversationApi.testConnection();\n              const isConnected = result.success;\n              set({\n                connectionStatus: isConnected ? \"connected\" : \"disconnected\",\n              });\n              return isConnected;\n            }\n          } catch (healthError) {\n            console.warn(\n              \"Health check failed, trying direct connection test:\",\n              healthError\n            );\n          }\n\n          // Fall back to direct authenticated test\n          const result = await conversationApi.testConnection();\n          const isConnected = result.success;\n          set({ connectionStatus: isConnected ? \"connected\" : \"disconnected\" });\n          return isConnected;\n        } catch (error) {\n          console.error(\"Connection test failed:\", error);\n          set({ connectionStatus: \"disconnected\" });\n          return false;\n        }\n      },\n\n      generateEmbedCode: (chatbotId) => {\n        const API_BASE =\n          process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n        const embedScript = `<script>\n  (function() {\n    var script = document.createElement('script');\n    script.src = '${window.location.origin}/chatbot-widget.js';\n    script.setAttribute('data-chatbot-id', '${chatbotId}');\n    script.setAttribute('data-api-url', '${API_BASE}');\n    document.head.appendChild(script);\n  })();\n</script>`;\n        set({ embedCode: embedScript, showEmbedModal: true });\n        return embedScript;\n      },\n\n      initializeStore: async (retryCount = 0) => {\n        const maxRetries = 3;\n        try {\n          set({ loading: true, error: null, connectionStatus: \"checking\" });\n\n          // Test connection first with timeout and retry logic\n          let connectionResult;\n          try {\n            connectionResult = await get().testConnection();\n          } catch (connectionError) {\n            console.warn(\n              \"Initial connection test failed, attempting to continue:\",\n              connectionError\n            );\n            // Continue with initialization even if connection test fails\n            connectionResult = false;\n          }\n\n          // Load all data in parallel with individual error handling\n          const results = await Promise.allSettled([\n            chatbotApi.getChatbots(),\n            uploadsApi.getUploads(),\n            conversationApi.getContextConfig(),\n          ]);\n\n          let hasAnySuccess = false;\n          let criticalFailures = 0;\n\n          // Handle chatbots result (critical for basic functionality)\n          if (results[0].status === \"fulfilled\") {\n            set({ orgChatbots: results[0].value });\n            hasAnySuccess = true;\n          } else {\n            console.error(\"Failed to load chatbots:\", results[0].reason);\n            criticalFailures++;\n          }\n\n          // Handle uploads result (non-critical)\n          if (results[1].status === \"fulfilled\") {\n            set({ uploads: results[1].value });\n            hasAnySuccess = true;\n          } else {\n            console.warn(\n              \"Failed to load uploads (non-critical):\",\n              results[1].reason\n            );\n          }\n\n          // Handle context config result (non-critical, has defaults)\n          if (\n            results[2].status === \"fulfilled\" &&\n            results[2].value &&\n            results[2].value.success\n          ) {\n            // Ensure loaded config has proper org_id\n            const loadedConfig = {\n              ...results[2].value.config,\n              org_id:\n                results[2].value.config.org_id || `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: loadedConfig });\n            console.debug(\"✅ Context config loaded successfully\");\n            hasAnySuccess = true;\n          } else {\n            // Context config failed to load - this is expected if backend is not available\n            console.debug(\n              \"🔧 Context config not available, using built-in defaults\"\n            );\n            // Ensure default config has proper org_id\n            const defaultConfigWithOrgId = {\n              ...defaultContextConfig,\n              org_id: `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: defaultConfigWithOrgId });\n          }\n\n          // Determine if initialization was successful enough\n          if (hasAnySuccess && criticalFailures === 0) {\n            set({\n              loading: false,\n              connectionStatus: connectionResult ? \"connected\" : \"partial\",\n              error: null,\n            });\n            if (!connectionResult) {\n              toast.warning(\n                \"Some features may be limited due to connectivity issues\"\n              );\n            }\n          } else if (\n            hasAnySuccess &&\n            criticalFailures > 0 &&\n            retryCount < maxRetries\n          ) {\n            // Partial success but critical failures - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to critical failures`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else if (!hasAnySuccess && retryCount < maxRetries) {\n            // Complete failure - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to complete failure`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            // Final failure after retries\n            throw new Error(\n              `Failed to load critical application data after ${\n                retryCount + 1\n              } attempts`\n            );\n          }\n        } catch (error) {\n          console.error(\"Error initializing store:\", error);\n          const isRetryable =\n            retryCount < maxRetries &&\n            error instanceof Error &&\n            (error.message.includes(\"network\") ||\n              error.message.includes(\"timeout\") ||\n              error.message.includes(\"fetch\"));\n\n          if (isRetryable) {\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) after error:`,\n              error.message\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1500)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            set({\n              loading: false,\n              error: `Failed to initialize application${\n                retryCount > 0 ? ` after ${retryCount + 1} attempts` : \"\"\n              }`,\n              connectionStatus: \"disconnected\",\n            });\n            toast.error(\n              \"Failed to initialize application. Please check your connection and try refreshing the page.\"\n            );\n          }\n        }\n      },\n\n      resetState: () =>\n        set(\n          {\n            loading: true,\n            saving: false,\n            activeTab: \"basic\",\n            showCreateForm: false,\n            showEmbedModal: false,\n            isEditMode: false,\n            analyticsLoading: false,\n            uploading: false,\n            currentUser: null,\n            error: null,\n            connectionStatus: \"checking\",\n            orgChatbots: [],\n            selectedChatbot: null,\n            uploads: [],\n            embedCode: \"\",\n            performanceMetrics: null,\n            conversations: [],\n            deletingChatbotId: null,\n            contextConfig: defaultContextConfig,\n            config: defaultConfig,\n            chatMessages: [],\n            currentConversationId: null,\n          },\n          false,\n          \"resetState\"\n        ),\n    }),\n    { name: \"customize-store\" }\n  )\n);\n\n// Export convenience hooks for accessing specific parts of the store\nexport const useCustomizeLoading = () =>\n  useCustomizeStore((state) => state.loading);\nexport const useCustomizeSaving = () =>\n  useCustomizeStore((state) => state.saving);\nexport const useCustomizeActiveTab = () =>\n  useCustomizeStore((state) => state.activeTab);\nexport const useCustomizeCurrentUser = () =>\n  useCustomizeStore((state) => state.currentUser);\nexport const useCustomizeOrgChatbots = () =>\n  useCustomizeStore((state) => state.orgChatbots);\nexport const useCustomizeSelectedChatbot = () =>\n  useCustomizeStore((state) => state.selectedChatbot);\nexport const useCustomizeUploads = () =>\n  useCustomizeStore((state) => state.uploads);\nexport const useCustomizeContextConfig = () =>\n  useCustomizeStore((state) => state.contextConfig);\nexport const useCustomizeConfig = () =>\n  useCustomizeStore((state) => state.config);\nexport const useCustomizePerformanceMetrics = () =>\n  useCustomizeStore((state) => state.performanceMetrics);\nexport const useCustomizeConnectionStatus = () =>\n  useCustomizeStore((state) => state.connectionStatus);\n\n// Export compound selectors for common use cases\nexport const useCustomizeActions = () =>\n  useCustomizeStore((state) => ({\n    setLoading: state.setLoading,\n    setSaving: state.setSaving,\n    setActiveTab: state.setActiveTab,\n    updateConfig: state.updateConfig,\n    updateContextConfig: state.updateContextConfig,\n    testConnection: state.testConnection,\n  }));\n\nexport const useCustomizeUIState = () =>\n  useCustomizeStore((state) => ({\n    loading: state.loading,\n    saving: state.saving,\n    activeTab: state.activeTab,\n    showCreateForm: state.showCreateForm,\n    showEmbedModal: state.showEmbedModal,\n    isEditMode: state.isEditMode,\n    analyticsLoading: state.analyticsLoading,\n    connectionStatus: state.connectionStatus,\n  }));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/utils/errorHandling.ts"],"sourcesContent":["/**\n * Utility functions for consistent error handling across the application\n */\n\nexport interface ConnectionErrorInfo {\n  isConnectionError: boolean;\n  shouldShowToast: boolean;\n  logLevel: 'warn' | 'error';\n  message: string;\n}\n\n/**\n * Analyzes an error and determines how it should be handled\n * @param error - The error to analyze\n * @returns Information about how to handle the error\n */\nexport const analyzeError = (error: unknown): ConnectionErrorInfo => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  \n  const isConnectionError = error instanceof Error && (\n    error.message.includes(\"Unable to connect\") ||\n    error.message.includes(\"Backend server unavailable\") ||\n    error.message.includes(\"ECONNREFUSED\") ||\n    error.message.includes(\"Failed to fetch\") ||\n    error.message.includes(\"network\") ||\n    error.message.includes(\"timeout\")\n  );\n\n  return {\n    isConnectionError,\n    shouldShowToast: !isDevelopment || !isConnectionError,\n    logLevel: isDevelopment && isConnectionError ? 'warn' : 'error',\n    message: isConnectionError ? \"Backend server unavailable\" : \"An unexpected error occurred\"\n  };\n};\n\n/**\n * Logs an error with appropriate level and detail\n * @param error - The error to log\n * @param context - Additional context for the error\n * @param info - Connection error information\n */\nexport const logError = (\n  error: unknown, \n  context: string, \n  info: ConnectionErrorInfo\n): void => {\n  if (info.logLevel === 'warn') {\n    console.warn(`${context} - backend server not available`);\n  } else {\n    console.error(`Error in ${context}:`, error);\n  }\n};\n\n/**\n * Gets a user-friendly error message from an error\n * @param error - The error to get a message from\n * @returns A user-friendly error message\n */\nexport const getUserFriendlyErrorMessage = (error: unknown): string => {\n  const info = analyzeError(error);\n  \n  if (info.isConnectionError) {\n    return \"Unable to connect to the server. Please check your connection and try again.\";\n  }\n  \n  if (error instanceof Error) {\n    return error.message;\n  }\n  \n  return \"An unexpected error occurred. Please try again.\";\n};\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;AAeuB;AADjB,MAAM,eAAe,CAAC;IAC3B,MAAM,gBAAgB,oDAAyB;IAE/C,MAAM,oBAAoB,iBAAiB,SAAS,CAClD,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,iCACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,sBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,cACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,UACzB;IAEA,OAAO;QACL;QACA,iBAAiB,CAAC,iBAAiB,CAAC;QACpC,UAAU,iBAAiB,oBAAoB,SAAS;QACxD,SAAS,oBAAoB,+BAA+B;IAC9D;AACF;AAQO,MAAM,WAAW,CACtB,OACA,SACA;IAEA,IAAI,KAAK,QAAQ,KAAK,QAAQ;QAC5B,QAAQ,IAAI,CAAC,AAAC,GAAU,OAAR,SAAQ;IAC1B,OAAO;QACL,QAAQ,KAAK,CAAC,AAAC,YAAmB,OAAR,SAAQ,MAAI;IACxC;AACF;AAOO,MAAM,8BAA8B,CAAC;IAC1C,MAAM,OAAO,aAAa;IAE1B,IAAI,KAAK,iBAAiB,EAAE;QAC1B,OAAO;IACT;IAEA,IAAI,iBAAiB,OAAO;QAC1B,OAAO,MAAM,OAAO;IACtB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1051, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/hooks/useDashboardData.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useCustomizeStore } from '@/stores/customizeStore';\nimport { conversationApi } from '@/app/api/routes';\nimport { analyzeError, logError } from '@/utils/errorHandling';\nimport { ConversationInfo } from '@/types/schemaTypes';\n/**\n * Custom hook for optimized dashboard data loading\n * Handles sequential loading of critical data first, then secondary data\n */\nexport const useDashboardData = () => {\n  const {\n    loading,\n    analyticsLoading,\n    orgChatbots: chatbots,\n    uploads,\n    conversations,\n    performanceMetrics: analyticsMetrics,\n    connectionStatus,\n    loadChatbots,\n    loadUploads,\n    loadPerformanceMetrics,\n    setConversations,\n    testConnection,\n  } = useCustomizeStore();\n\n  // Fast conversation count for immediate display\n  const [conversationCount, setConversationCount] = useState<number>(0);\n  const [conversationCountLoading, setConversationCountLoading] = useState(false);\n\n  // Fast conversation count loading\n  const loadConversationCount = useCallback(async () => {\n    try {\n      setConversationCountLoading(true);\n      const count = await conversationApi.getConversationCount();\n      setConversationCount(count);\n    } catch (error) {\n      console.error(\"Error loading conversation count:\", error);\n      setConversationCount(0);\n    } finally {\n      setConversationCountLoading(false);\n    }\n  }, []);\n\n  // Non-blocking data loading for better dashboard performance\n  const loadDashboardData = useCallback(async () => {\n    try {\n      // Load critical data first (chatbots and uploads) for immediate UI display\n      await Promise.allSettled([\n        loadChatbots(),\n        loadUploads(),\n        loadConversationCount(), // Load conversation count immediately\n      ]);\n\n      // Load conversation details in background (much smaller sample)\n      setTimeout(async () => {\n        try {\n          const conversationPromise = conversationApi.getConversations(10); // Only 10 for dashboard\n          const timeoutPromise = new Promise((_, reject) => \n            setTimeout(() => reject(new Error('Conversation loading timeout')), 1500)\n          );\n          \n          const userConversations = await Promise.race([conversationPromise, timeoutPromise]);\n          setConversations(userConversations as ConversationInfo[]);\n        } catch (error) {\n          const errorInfo = analyzeError(error);\n          logError(error, \"loading conversations\", errorInfo);\n          setConversations([]);\n        }\n      }, 100);\n\n      // Load analytics data in background (use 30 days to capture more data)\n      setTimeout(() => {\n        loadPerformanceMetrics(30);\n      }, 200);\n    } catch (error) {\n      const errorInfo = analyzeError(error);\n      logError(error, \"loading dashboard data\", errorInfo);\n    }\n  }, [loadChatbots, loadUploads, loadConversationCount, setConversations, loadPerformanceMetrics]);\n\n  const handleRefreshAnalytics = useCallback(async () => {\n    await loadPerformanceMetrics(30);\n  }, [loadPerformanceMetrics]);\n\n  const refreshConnection = useCallback(() => {\n    testConnection();\n    loadDashboardData();\n  }, [testConnection, loadDashboardData]);\n\n  return {\n    // Data\n    loading,\n    analyticsLoading,\n    chatbots,\n    uploads,\n    conversations,\n    analyticsMetrics,\n    isOffline: connectionStatus === 'disconnected',\n    \n    // Fast conversation data\n    conversationCount,\n    conversationCountLoading,\n    \n    // Actions\n    loadDashboardData,\n    handleRefreshAnalytics,\n    refreshConnection,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAMO,MAAM,mBAAmB;;IAC9B,MAAM,EACJ,OAAO,EACP,gBAAgB,EAChB,aAAa,QAAQ,EACrB,OAAO,EACP,aAAa,EACb,oBAAoB,gBAAgB,EACpC,gBAAgB,EAChB,YAAY,EACZ,WAAW,EACX,sBAAsB,EACtB,gBAAgB,EAChB,cAAc,EACf,GAAG,IAAA,kMAAiB;IAErB,gDAAgD;IAChD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,oNAAQ,EAAS;IACnE,MAAM,CAAC,0BAA0B,4BAA4B,GAAG,IAAA,oNAAQ,EAAC;IAEzE,kCAAkC;IAClC,MAAM,wBAAwB,IAAA,uNAAW;+DAAC;YACxC,IAAI;gBACF,4BAA4B;gBAC5B,MAAM,QAAQ,MAAM,4LAAe,CAAC,oBAAoB;gBACxD,qBAAqB;YACvB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qCAAqC;gBACnD,qBAAqB;YACvB,SAAU;gBACR,4BAA4B;YAC9B;QACF;8DAAG,EAAE;IAEL,6DAA6D;IAC7D,MAAM,oBAAoB,IAAA,uNAAW;2DAAC;YACpC,IAAI;gBACF,2EAA2E;gBAC3E,MAAM,QAAQ,UAAU,CAAC;oBACvB;oBACA;oBACA;iBACD;gBAED,gEAAgE;gBAChE;uEAAW;wBACT,IAAI;4BACF,MAAM,sBAAsB,4LAAe,CAAC,gBAAgB,CAAC,KAAK,wBAAwB;4BAC1F,MAAM,iBAAiB,IAAI;mFAAQ,CAAC,GAAG,SACrC;2FAAW,IAAM,OAAO,IAAI,MAAM;0FAAkC;;4BAGtE,MAAM,oBAAoB,MAAM,QAAQ,IAAI,CAAC;gCAAC;gCAAqB;6BAAe;4BAClF,iBAAiB;wBACnB,EAAE,OAAO,OAAO;4BACd,MAAM,YAAY,IAAA,2LAAY,EAAC;4BAC/B,IAAA,uLAAQ,EAAC,OAAO,yBAAyB;4BACzC,iBAAiB,EAAE;wBACrB;oBACF;sEAAG;gBAEH,uEAAuE;gBACvE;uEAAW;wBACT,uBAAuB;oBACzB;sEAAG;YACL,EAAE,OAAO,OAAO;gBACd,MAAM,YAAY,IAAA,2LAAY,EAAC;gBAC/B,IAAA,uLAAQ,EAAC,OAAO,0BAA0B;YAC5C;QACF;0DAAG;QAAC;QAAc;QAAa;QAAuB;QAAkB;KAAuB;IAE/F,MAAM,yBAAyB,IAAA,uNAAW;gEAAC;YACzC,MAAM,uBAAuB;QAC/B;+DAAG;QAAC;KAAuB;IAE3B,MAAM,oBAAoB,IAAA,uNAAW;2DAAC;YACpC;YACA;QACF;0DAAG;QAAC;QAAgB;KAAkB;IAEtC,OAAO;QACL,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,WAAW,qBAAqB;QAEhC,yBAAyB;QACzB;QACA;QAEA,UAAU;QACV;QACA;QACA;IACF;AACF;GAnGa;;QAcP,kMAAiB","debugId":null}},
    {"offset": {"line": 1181, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/hooks/useDashboardNavigation.ts"],"sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Bot, Upload, MessageSquare, TrendingUp } from \"lucide-react\";\nimport { QuickActionProps } from \"@/types/dashboard\";\n\nexport const useDashboardNavigation = (userId: string) => {\n  const router = useRouter();\n\n  // Memoized navigation handlers\n  const handleTrainClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/train`);\n  }, [router, userId]);\n\n  const handleCustomizeClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/customize`);\n  }, [router, userId]);\n\n  const handleChatClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/chat`);\n  }, [router, userId]);\n\n  const handleSettingsClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/settings`);\n  }, [router, userId]);\n\n  // Configuration-driven quick actions\n  const quickActions = useMemo<QuickActionProps[]>(\n    () => [\n      {\n        id: \"create-chatbot\",\n        icon: Bot,\n        title: \"Create Chatbot\",\n        onClick: handleCustomizeClick,\n      },\n      {\n        id: \"upload-data\",\n        icon: Upload,\n        title: \"Upload Data\",\n        onClick: handleTrainClick,\n      },\n      {\n        id: \"test-chat\",\n        icon: MessageSquare,\n        title: \"Test Chat\",\n        onClick: handleChatClick,\n      },\n      {\n        id: \"view-analytics\",\n        icon: TrendingUp,\n        title: \"View Analytics\",\n        onClick: handleSettingsClick,\n      },\n    ],\n    [handleCustomizeClick, handleTrainClick, handleChatClick, handleSettingsClick]\n  );\n\n  return {\n    handleTrainClick,\n    handleCustomizeClick,\n    handleChatClick,\n    handleSettingsClick,\n    quickActions,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;AAGO,MAAM,yBAAyB,CAAC;;IACrC,MAAM,SAAS,IAAA,6LAAS;IAExB,+BAA+B;IAC/B,MAAM,mBAAmB,IAAA,uNAAW;gEAAC;YACnC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;+DAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,uBAAuB,IAAA,uNAAW;oEAAC;YACvC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;mEAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,kBAAkB,IAAA,uNAAW;+DAAC;YAClC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;8DAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,sBAAsB,IAAA,uNAAW;mEAAC;YACtC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;kEAAG;QAAC;QAAQ;KAAO;IAEnB,qCAAqC;IACrC,MAAM,eAAe,IAAA,mNAAO;wDAC1B,IAAM;gBACJ;oBACE,IAAI;oBACJ,MAAM,qPAAG;oBACT,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,8PAAM;oBACZ,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,uRAAa;oBACnB,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,8QAAU;oBAChB,OAAO;oBACP,SAAS;gBACX;aACD;uDACD;QAAC;QAAsB;QAAkB;QAAiB;KAAoB;IAGhF,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GA1Da;;QACI,6LAAS","debugId":null}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/hooks/useDashboardStats.ts"],"sourcesContent":["import { useMemo } from \"react\";\nimport { DashboardStats } from \"@/types/dashboard\";\n\nexport const useDashboardStats = (\n  chatbots: unknown[],\n  uploads: unknown[],\n  conversations: unknown[],\n  conversationCount?: number\n): DashboardStats => {\n  return useMemo(\n    () => ({\n      totalChatbots: chatbots.length,\n      totalUploads: uploads.length,\n      totalConversations: conversationCount || conversations.length,\n      activeUsers: 0, // This could be calculated from analytics data\n    }),\n    [chatbots.length, uploads.length, conversations.length, conversationCount]\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAGO,MAAM,oBAAoB,CAC/B,UACA,SACA,eACA;;IAEA,OAAO,IAAA,mNAAO;qCACZ,IAAM,CAAC;gBACL,eAAe,SAAS,MAAM;gBAC9B,cAAc,QAAQ,MAAM;gBAC5B,oBAAoB,qBAAqB,cAAc,MAAM;gBAC7D,aAAa;YACf,CAAC;oCACD;QAAC,SAAS,MAAM;QAAE,QAAQ,MAAM;QAAE,cAAc,MAAM;QAAE;KAAkB;AAE9E;GAfa","debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/hooks/useUserAuth.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { supabase } from \"@/lib/supabase\";\nimport { toast } from \"sonner\";\nimport { User } from \"@/types/schemaTypes\";\nimport { User as SupabaseUser } from \"@supabase/supabase-js\";\n\nexport const useUserAuth = (userId: string, \n  setCurrentUser: (user: SupabaseUser | null) => void) => {\n  const router = useRouter();\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const checkUserAccess = async () => {\n      try {\n        setIsAuthLoading(true);\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n\n        if (!mounted) return;\n\n        if (!session?.user) {\n          router.replace(\"/auth/login\");\n          return;\n        }\n\n        // Check if the userId in URL matches the logged-in user\n        if (session.user.id !== userId) {\n          toast.error(\"Unauthorized access\");\n          router.replace(`/dashboard/${session.user.id}`);\n          return;\n        }\n\n        const userData: User = {\n          id: session.user.id,\n          email: session.user.email || \"\",\n          name: session.user.user_metadata?.name || session.user.email || \"\",\n          display_name: session.user.user_metadata?.display_name || session.user.user_metadata?.name || session.user.email || \"\",\n        };\n\n        setUser(userData);\n        setCurrentUser(session.user);\n      } catch (error) {\n        console.error(\"Error checking user access:\", error);\n        if (mounted) {\n          router.replace(\"/auth/login\");\n        }\n      } finally {\n        if (mounted) {\n          setIsAuthLoading(false);\n        }\n      }\n    };\n\n    checkUserAccess();\n\n    return () => {\n      mounted = false;\n    };\n  }, [userId, router, setCurrentUser]);\n\n  return {\n    user,\n    isAuthLoading,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAIO,MAAM,cAAc,CAAC,QAC1B;;IACA,MAAM,SAAS,IAAA,6LAAS;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,oNAAQ,EAAc;IAC9C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,oNAAQ,EAAC;IAEnD,IAAA,qNAAS;iCAAC;YACR,IAAI,UAAU;YAEd,MAAM;yDAAkB;oBACtB,IAAI;4BAuBM,6BACQ,8BAA4C;wBAvB5D,iBAAiB;wBACjB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,gLAAQ,CAAC,IAAI,CAAC,UAAU;wBAElC,IAAI,CAAC,SAAS;wBAEd,IAAI,EAAC,oBAAA,8BAAA,QAAS,IAAI,GAAE;4BAClB,OAAO,OAAO,CAAC;4BACf;wBACF;wBAEA,wDAAwD;wBACxD,IAAI,QAAQ,IAAI,CAAC,EAAE,KAAK,QAAQ;4BAC9B,+LAAK,CAAC,KAAK,CAAC;4BACZ,OAAO,OAAO,CAAC,AAAC,cAA6B,OAAhB,QAAQ,IAAI,CAAC,EAAE;4BAC5C;wBACF;wBAEA,MAAM,WAAiB;4BACrB,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACnB,OAAO,QAAQ,IAAI,CAAC,KAAK,IAAI;4BAC7B,MAAM,EAAA,8BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,kDAAA,4BAA4B,IAAI,KAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;4BAChE,cAAc,EAAA,+BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,mDAAA,6BAA4B,YAAY,OAAI,+BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,mDAAA,6BAA4B,IAAI,KAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;wBACtH;wBAEA,QAAQ;wBACR,eAAe,QAAQ,IAAI;oBAC7B,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+BAA+B;wBAC7C,IAAI,SAAS;4BACX,OAAO,OAAO,CAAC;wBACjB;oBACF,SAAU;wBACR,IAAI,SAAS;4BACX,iBAAiB;wBACnB;oBACF;gBACF;;YAEA;YAEA;yCAAO;oBACL,UAAU;gBACZ;;QACF;gCAAG;QAAC;QAAQ;QAAQ;KAAe;IAEnC,OAAO;QACL;QACA;IACF;AACF;GA9Da;;QAEI,6LAAS","debugId":null}},
    {"offset": {"line": 1403, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/DashboardHeader.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, Plus } from \"lucide-react\";\nimport { DashboardHeaderProps } from \"@/types/dashboard\";\nimport { getUserFirstName } from \"@/utils/userUtils\";\n\nexport const DashboardHeader = memo<DashboardHeaderProps>(\n  ({ user, onTrainClick, onCustomizeClick }) => (\n    <header className=\"flex justify-between items-center bg-white p-8 rounded-t-2xl\">\n      <div>\n        <h1 className=\"text-3xl text-[#0a0a60] font-bold\">\n          Welcome back, {getUserFirstName(user)}!\n        </h1>\n        <p className=\"text-gray-700 mt-1\">\n          Manage your AI chatbots and training data\n        </p>\n      </div>\n      <div className=\"flex gap-2\" role=\"group\" aria-label=\"Primary actions\">\n        <Button\n          onClick={onTrainClick}\n          variant=\"outline\"\n          className=\"pointer flex items-center gap-2\"\n          aria-label=\"Add training data\"\n        >\n          <Upload className=\"h-4 w-4\" aria-hidden=\"true\" />\n          Add Training Data\n        </Button>\n        <Button\n          onClick={onCustomizeClick}\n          className=\"pointer flex items-center gap-2\"\n          aria-label=\"Create new chatbot\"\n        >\n          <Plus className=\"h-4 w-4\" aria-hidden=\"true\" />\n          Create Chatbot\n        </Button>\n      </div>\n    </header>\n  )\n);\n\nDashboardHeader.displayName = \"DashboardHeader\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;AAEA;;;;;;AAEO,MAAM,gCAAkB,IAAA,gNAAI,OACjC;QAAC,EAAE,IAAI,EAAE,YAAY,EAAE,gBAAgB,EAAE;yBACvC,wOAAC;QAAO,WAAU;;0BAChB,wOAAC;;kCACC,wOAAC;wBAAG,WAAU;;4BAAoC;4BACjC,IAAA,2LAAgB,EAAC;4BAAM;;;;;;;kCAExC,wOAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;0BAIpC,wOAAC;gBAAI,WAAU;gBAAa,MAAK;gBAAQ,cAAW;;kCAClD,wOAAC,0LAAM;wBACL,SAAS;wBACT,SAAQ;wBACR,WAAU;wBACV,cAAW;;0CAEX,wOAAC,8PAAM;gCAAC,WAAU;gCAAU,eAAY;;;;;;4BAAS;;;;;;;kCAGnD,wOAAC,0LAAM;wBACL,SAAS;wBACT,WAAU;wBACV,cAAW;;0CAEX,wOAAC,wPAAI;gCAAC,WAAU;gCAAU,eAAY;;;;;;4BAAS;;;;;;;;;;;;;;;;;;;;;AAQzD,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1522, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/StatusCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { StatusCardProps } from \"@/types/dashboard\";\n\nexport const StatusCard = memo<StatusCardProps>(\n  ({ icon: Icon, title, value, isLoading = false }) => (\n    <div\n      className=\"px-4 py-3 bg-white rounded-lg pointer hover:-translate-y-1 duration-500 border shadow-sm\"\n      role=\"article\"\n      aria-label={`${title} statistics`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <Icon size={22} className=\"text-[#020617]\" aria-hidden=\"true\" />\n          <p className=\"mt-2 text-sm font-medium text-[#0a0a60]\">{title}</p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {isLoading ? (\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">Loading</span>\n            </div>\n          ) : (\n            <span aria-label={`${value} ${title.toLowerCase()}`}>{value}</span>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n);\n\nStatusCard.displayName = \"StatCard\";\n"],"names":[],"mappings":";;;;;AAAA;;;AAGO,MAAM,2BAAa,IAAA,gNAAI,OAC5B;QAAC,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,KAAK,EAAE;yBAC9C,wOAAC;QACC,WAAU;QACV,MAAK;QACL,cAAY,AAAC,GAAQ,OAAN,OAAM;kBAErB,cAAA,wOAAC;YAAI,WAAU;;8BACb,wOAAC;;sCACC,wOAAC;4BAAK,MAAM;4BAAI,WAAU;4BAAiB,eAAY;;;;;;sCACvD,wOAAC;4BAAE,WAAU;sCAA2C;;;;;;;;;;;;8BAE1D,wOAAC;oBAAI,WAAU;8BACZ,0BACC,wOAAC;wBAAI,WAAU;;0CACb,wOAAC;gCAAI,WAAU;;;;;;0CACf,wOAAC;gCAAK,WAAU;0CAAwB;;;;;;;;;;;iFAG1C,wOAAC;wBAAK,cAAY,AAAC,GAAW,OAAT,OAAM,KAAuB,OAApB,MAAM,WAAW;kCAAO;;;;;;;;;;;;;;;;;;;;;;;;AAQlE,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1626, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/ConversationsCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { MessageSquare } from \"lucide-react\";\nimport { ConversationsCardProps } from \"@/types/dashboard\";\n\nexport const ConversationsCard = memo<ConversationsCardProps>(\n  ({\n    conversations,\n    totalConversations,\n    loading,\n    conversationCount,\n    conversationCountLoading,\n  }) => (\n    <div\n      className=\"px-4 py-3 bg-white rounded-lg pointer hover:-translate-y-1 duration-500 border shadow-sm\"\n      role=\"article\"\n      aria-label=\"Conversations statistics\"\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <MessageSquare\n            size={20}\n            className=\"text-[#020617]\"\n            aria-hidden=\"true\"\n          />\n          <p className=\"mt-2 text-sm font-medium text-[#0a0a60]\">\n            Conversations\n          </p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {conversationCountLoading ? (\n            <div\n              className=\"flex items-center space-x-1\"\n              role=\"status\"\n              aria-label=\"Loading conversation count\"\n            >\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">0</span>\n            </div>\n          ) : typeof conversationCount === \"number\" && conversationCount > 0 ? (\n            <span aria-label={`${conversationCount} conversations`}>\n              {conversationCount}\n            </span>\n          ) : conversations.length > 0 ? (\n            <span aria-label={`${totalConversations} conversations`}>\n              {totalConversations}\n            </span>\n          ) : (\n            <span className=\"text-md\" aria-label=\"No conversations\">\n              0\n            </span>\n          )}\n        </div>\n      </div>\n      {!loading && conversations.length === 0 && (\n        <div className=\"mt-2 text-center\"></div>\n      )}\n    </div>\n  )\n);\n\nConversationsCard.displayName = \"ConversationsCard\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAGO,MAAM,kCAAoB,IAAA,gNAAI,OACnC;QAAC,EACC,aAAa,EACb,kBAAkB,EAClB,OAAO,EACP,iBAAiB,EACjB,wBAAwB,EACzB;yBACC,wOAAC;QACC,WAAU;QACV,MAAK;QACL,cAAW;;0BAEX,wOAAC;gBAAI,WAAU;;kCACb,wOAAC;;0CACC,wOAAC,uRAAa;gCACZ,MAAM;gCACN,WAAU;gCACV,eAAY;;;;;;0CAEd,wOAAC;gCAAE,WAAU;0CAA0C;;;;;;;;;;;;kCAIzD,wOAAC;wBAAI,WAAU;kCACZ,yCACC,wOAAC;4BACC,WAAU;4BACV,MAAK;4BACL,cAAW;;8CAEX,wOAAC;oCAAI,WAAU;;;;;;8CACf,wOAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;uEAExC,OAAO,sBAAsB,YAAY,oBAAoB,kBAC/D,wOAAC;4BAAK,cAAY,AAAC,GAAoB,OAAlB,mBAAkB;sCACpC;;;;;uEAED,cAAc,MAAM,GAAG,kBACzB,wOAAC;4BAAK,cAAY,AAAC,GAAqB,OAAnB,oBAAmB;sCACrC;;;;;qFAGH,wOAAC;4BAAK,WAAU;4BAAU,cAAW;sCAAmB;;;;;;;;;;;;;;;;;YAM7D,CAAC,WAAW,cAAc,MAAM,KAAK,mBACpC,wOAAC;gBAAI,WAAU;;;;;;;;;;;;;;AAMvB,kBAAkB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1758, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/TokenUsageCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Zap } from \"lucide-react\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\n\ninterface TokenUsageCardProps {\n  className?: string;\n}\n\nexport const TokenUsageCard = memo<TokenUsageCardProps>(({ className }) => {\n  const { subscription, isLoading } = useSubscription();\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const getUsagePercentage = () => {\n    if (!subscription) return 0;\n    return subscription.usage_percentage;\n  };\n\n  const getStatusColor = () => {\n    const percentage = getUsagePercentage();\n    if (percentage >= 95) return \"text-red-400\";\n    if (percentage >= 80) return \"text-yellow-400\";\n    return \"text-green-400\";\n  };\n\n  return (\n    <div\n      className={`px-4 py-3 bg-white rounded-lg pointer hover:-translate-y-1 duration-500 border shadow-sm ${\n        className || \"\"\n      }`}\n      role=\"article\"\n      aria-label=\"Token usage statistics\"\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <div>\n          <Zap size={20} className=\"text-gray-700\" aria-hidden=\"true\" />\n          <p className=\"mt-2 text-sm font-medium text-gray-700\">Token Usage</p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {isLoading ? (\n            <div\n              className=\"flex items-center space-x-1\"\n              role=\"status\"\n              aria-label=\"Loading token usage\"\n            >\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">0%</span>\n            </div>\n          ) : subscription ? (\n            <span\n              className={getStatusColor()}\n              aria-label={`${getUsagePercentage().toFixed(1)}% token usage`}\n            >\n              {getUsagePercentage().toFixed(1)}%\n            </span>\n          ) : (\n            <span className=\"text-md\" aria-label=\"No subscription\">\n              0%\n            </span>\n          )}\n        </div>\n      </div>\n\n      {subscription && (\n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between text-xs text-gray-700/80\">\n            <span>\n              {formatNumber(subscription.tokens_used_this_month)} used\n            </span>\n            <span>{formatNumber(subscription.monthly_limit)} limit</span>\n          </div>\n\n          <div className=\"flex justify-between text-xs text-gray-700/60\">\n            <span>{formatNumber(subscription.tokens_remaining)} remaining</span>\n            <span className={getStatusColor()}>\n              {getUsagePercentage() >= 95\n                ? \"Critical\"\n                : getUsagePercentage() >= 80\n                ? \"Warning\"\n                : \"Healthy\"}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nTokenUsageCard.displayName = \"TokenUsageCard\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;;;AAMO,MAAM,+BAAiB,GAAA,IAAA,gNAAI,UAAsB;QAAC,EAAE,SAAS,EAAE;;IACpE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAA,wMAAe;IAEnD,MAAM,eAAe,CAAC;QACpB,OAAO,IAAI,KAAK,YAAY,GAAG,MAAM,CAAC;IACxC;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,cAAc,OAAO;QAC1B,OAAO,aAAa,gBAAgB;IACtC;IAEA,MAAM,iBAAiB;QACrB,MAAM,aAAa;QACnB,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,OAAO;IACT;IAEA,qBACE,wOAAC;QACC,WAAW,AAAC,4FAEX,OADC,aAAa;QAEf,MAAK;QACL,cAAW;;0BAEX,wOAAC;gBAAI,WAAU;;kCACb,wOAAC;;0CACC,wOAAC,qPAAG;gCAAC,MAAM;gCAAI,WAAU;gCAAgB,eAAY;;;;;;0CACrD,wOAAC;gCAAE,WAAU;0CAAyC;;;;;;;;;;;;kCAExD,wOAAC;wBAAI,WAAU;kCACZ,0BACC,wOAAC;4BACC,WAAU;4BACV,MAAK;4BACL,cAAW;;8CAEX,wOAAC;oCAAI,WAAU;;;;;;8CACf,wOAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;uEAExC,6BACF,wOAAC;4BACC,WAAW;4BACX,cAAY,AAAC,GAAkC,OAAhC,qBAAqB,OAAO,CAAC,IAAG;;gCAE9C,qBAAqB,OAAO,CAAC;gCAAG;;;;;;qFAGnC,wOAAC;4BAAK,WAAU;4BAAU,cAAW;sCAAkB;;;;;;;;;;;;;;;;;YAO5D,8BACC,wOAAC;gBAAI,WAAU;;kCACb,wOAAC;wBAAI,WAAU;;0CACb,wOAAC;;oCACE,aAAa,aAAa,sBAAsB;oCAAE;;;;;;;0CAErD,wOAAC;;oCAAM,aAAa,aAAa,aAAa;oCAAE;;;;;;;;;;;;;kCAGlD,wOAAC;wBAAI,WAAU;;0CACb,wOAAC;;oCAAM,aAAa,aAAa,gBAAgB;oCAAE;;;;;;;0CACnD,wOAAC;gCAAK,WAAW;0CACd,wBAAwB,KACrB,aACA,wBAAwB,KACxB,YACA;;;;;;;;;;;;;;;;;;;;;;;;AAOlB;;QA/EsC,wMAAe;;;;QAAf,wMAAe;;;;AAiFrD,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1971, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/types/dashboard.ts"],"sourcesContent":["import { LucideIcon } from \"lucide-react\";\nimport { IconType } from \"react-icons\";\n\n// Dashboard Statistics Interface\nexport interface DashboardStats {\n  totalChatbots: number;\n  totalUploads: number;\n  totalConversations: number;\n  activeUsers: number;\n}\n\n// Component Props Interfaces\nexport interface StatusCardProps {\n  icon: LucideIcon | IconType;\n  title: string;\n  value: number;\n  className?: string;\n  isLoading?: boolean;\n}\n\nexport interface ConversationsCardProps {\n  conversationsLoaded: boolean;\n  conversations: unknown[];\n  totalConversations: number;\n  loading: boolean;\n  conversationCount?: number;\n  conversationCountLoading?: boolean;\n  onCreateClick: () => void;\n}\n\nexport interface DashboardHeaderProps {\n  user: {\n    id: string;\n    email: string;\n    name?: string;\n  } | null;\n  userId: string;\n  onTrainClick: () => void;\n  onCustomizeClick: () => void;\n}\n\nexport interface QuickActionProps {\n  id: string;\n  icon: LucideIcon;\n  title: string;\n  onClick: () => void;\n}\n\nexport interface QuickActionsGridProps {\n  actions: QuickActionProps[];\n}\n\nexport interface StatusGridProps {\n  stats: DashboardStats;\n  conversationsLoaded: boolean;\n  conversations: unknown[];\n  loading: boolean;\n  conversationCount?: number;\n  conversationCountLoading?: boolean;\n  onCreateConversation: () => void;\n}\n\n// Dashboard Configuration\nexport const DASHBOARD_CONFIG = {\n  SKELETON_ITEMS_COUNT: 4,\n  STATS_GRID_CLASSES: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\",\n  QUICK_ACTIONS_GRID_CLASSES: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\",\n  CONTAINER_CLASSES: \"mx-auto ml-[4.1vw] bg-white rounded-l-3xl space-y-6 shadow-lg\",\n} as const;\n\n// Dashboard Sections for better organization\nexport enum DashboardSection {\n  HEADER = \"header\",\n  STATS = \"stats\", \n  ANALYTICS = \"analytics\",\n  QUICK_ACTIONS = \"quickActions\",\n}\n\n// Error types for better error handling\nexport interface DashboardError {\n  section: DashboardSection;\n  message: string;\n  code?: string;\n}\n"],"names":[],"mappings":";;;;;;AA+DO,MAAM,mBAAmB;IAC9B,sBAAsB;IACtB,oBAAoB;IACpB,4BAA4B;IAC5B,mBAAmB;AACrB;AAGO,IAAA,AAAK,0CAAA;;;;;WAAA","debugId":null}},
    {"offset": {"line": 1997, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/StatusGrid.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Brain } from \"lucide-react\";\nimport { RiRobot3Line } from \"react-icons/ri\";\nimport { StatusCard } from \"./StatusCard\";\nimport { ConversationsCard } from \"./ConversationsCard\";\nimport { TokenUsageCard } from \"./TokenUsageCard\";\nimport { StatusGridProps, DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nexport const StatusGrid = memo<StatusGridProps>(\n  ({\n    stats,\n    conversationsLoaded,\n    conversations,\n    loading,\n    conversationCount,\n    conversationCountLoading,\n    onCreateConversation,\n  }) => (\n    <section\n      aria-label=\"Dashboard Statistics\"\n      className={DASHBOARD_CONFIG.STATS_GRID_CLASSES}\n    >\n      {/* <h2 className=\"text-gray-500 font-bold sr-only\">Dashboard Statistics</h2> */}\n\n      <StatusCard\n        icon={RiRobot3Line}\n        title=\"Total Chatbots\"\n        value={stats.totalChatbots}\n      />\n\n      <StatusCard\n        icon={Brain}\n        title=\"Training Files\"\n        value={stats.totalUploads}\n        className=\"glass-b text-white\"\n      />\n\n      <ConversationsCard\n        conversationsLoaded={conversationsLoaded}\n        conversations={conversations}\n        totalConversations={stats.totalConversations}\n        loading={loading}\n        conversationCount={conversationCount}\n        conversationCountLoading={conversationCountLoading}\n        onCreateClick={onCreateConversation}\n      />\n\n      <TokenUsageCard />\n    </section>\n  )\n);\n\nStatusGrid.displayName = \"StatusGrid\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,2BAAa,IAAA,gNAAI,OAC5B;QAAC,EACC,KAAK,EACL,mBAAmB,EACnB,aAAa,EACb,OAAO,EACP,iBAAiB,EACjB,wBAAwB,EACxB,oBAAoB,EACrB;yBACC,wOAAC;QACC,cAAW;QACX,WAAW,2LAAgB,CAAC,kBAAkB;;0BAI9C,wOAAC,iNAAU;gBACT,MAAM,4MAAY;gBAClB,OAAM;gBACN,OAAO,MAAM,aAAa;;;;;;0BAG5B,wOAAC,iNAAU;gBACT,MAAM,2PAAK;gBACX,OAAM;gBACN,OAAO,MAAM,YAAY;gBACzB,WAAU;;;;;;0BAGZ,wOAAC,+NAAiB;gBAChB,qBAAqB;gBACrB,eAAe;gBACf,oBAAoB,MAAM,kBAAkB;gBAC5C,SAAS;gBACT,mBAAmB;gBACnB,0BAA0B;gBAC1B,eAAe;;;;;;0BAGjB,wOAAC,yNAAc;;;;;;;;;;;;;AAKrB,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2079, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/QuickActionsGrid.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { QuickActionsGridProps, DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nconst QuickActionButton = memo<{\n  icon: React.ComponentType<{ className?: string }>;\n  title: string;\n  onClick: () => void;\n}>(({ icon: Icon, title, onClick }) => (\n  <Button\n    variant=\"outline\"\n    className=\"h-20 flex flex-col gap-2\"\n    onClick={onClick}\n    aria-label={title}\n  >\n    <Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n    <span>{title}</span>\n  </Button>\n));\nQuickActionButton.displayName = \"QuickActionButton\";\n\nexport const QuickActionsGrid = memo<QuickActionsGridProps>(({ actions }) => (\n  <Card className=\"mt-8\">\n    <CardHeader>\n      <CardTitle>Quick Actions</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <nav\n        aria-label=\"Quick Actions\"\n        className={DASHBOARD_CONFIG.QUICK_ACTIONS_GRID_CLASSES}\n      >\n        {actions.map(({ id, icon, title, onClick }) => (\n          <QuickActionButton\n            key={id}\n            icon={icon}\n            title={title}\n            onClick={onClick}\n          />\n        ))}\n      </nav>\n    </CardContent>\n  </Card>\n));\n\nQuickActionsGrid.displayName = \"QuickActionsGrid\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,kCAAoB,IAAA,gNAAI,EAI3B;QAAC,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;yBAChC,wOAAC,0LAAM;QACL,SAAQ;QACR,WAAU;QACV,SAAS;QACT,cAAY;;0BAEZ,wOAAC;gBAAK,WAAU;gBAAU,eAAY;;;;;;0BACtC,wOAAC;0BAAM;;;;;;;;;;;;;KAZL;AAeN,kBAAkB,WAAW,GAAG;AAEzB,MAAM,iCAAmB,IAAA,gNAAI,QAAwB;QAAC,EAAE,OAAO,EAAE;yBACtE,wOAAC,sLAAI;QAAC,WAAU;;0BACd,wOAAC,4LAAU;0BACT,cAAA,wOAAC,2LAAS;8BAAC;;;;;;;;;;;0BAEb,wOAAC,6LAAW;0BACV,cAAA,wOAAC;oBACC,cAAW;oBACX,WAAW,2LAAgB,CAAC,0BAA0B;8BAErD,QAAQ,GAAG,CAAC;4BAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;6CACxC,wOAAC;4BAEC,MAAM;4BACN,OAAO;4BACP,SAAS;2BAHJ;;;;;;;;;;;;;;;;;;;;;;;;AAWjB,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2189, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/components/dashboard/home/LoadingSkeleton.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nexport const LoadingSkeleton = memo(() => (\n  <div\n    className={DASHBOARD_CONFIG.CONTAINER_CLASSES}\n    role=\"status\"\n    aria-label=\"Loading dashboard\"\n  >\n    <div className=\"animate-pulse space-y-6\">\n      {/* Header skeleton */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 bg-gray-200 rounded w-64\" />\n          <div className=\"h-4 bg-gray-200 rounded w-48\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 bg-gray-200 rounded w-32\" />\n          <div className=\"h-10 bg-gray-200 rounded w-32\" />\n        </div>\n      </div>\n\n      {/* Stats cards skeleton */}\n      <div className={DASHBOARD_CONFIG.STATS_GRID_CLASSES}>\n        {Array.from(\n          { length: DASHBOARD_CONFIG.SKELETON_ITEMS_COUNT },\n          (_, i) => (\n            <div key={i} className=\"h-24 bg-gray-200 rounded-lg\" />\n          )\n        )}\n      </div>\n\n      {/* Content skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"h-96 bg-gray-200 rounded-lg\" />\n        <div className=\"h-96 bg-gray-200 rounded-lg\" />\n      </div>\n    </div>\n  </div>\n));\n\nLoadingSkeleton.displayName = \"LoadingSkeleton\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEO,MAAM,gCAAkB,IAAA,gNAAI,OAAC,kBAClC,wOAAC;QACC,WAAW,2LAAgB,CAAC,iBAAiB;QAC7C,MAAK;QACL,cAAW;kBAEX,cAAA,wOAAC;YAAI,WAAU;;8BAEb,wOAAC;oBAAI,WAAU;;sCACb,wOAAC;4BAAI,WAAU;;8CACb,wOAAC;oCAAI,WAAU;;;;;;8CACf,wOAAC;oCAAI,WAAU;;;;;;;;;;;;sCAEjB,wOAAC;4BAAI,WAAU;;8CACb,wOAAC;oCAAI,WAAU;;;;;;8CACf,wOAAC;oCAAI,WAAU;;;;;;;;;;;;;;;;;;8BAKnB,wOAAC;oBAAI,WAAW,2LAAgB,CAAC,kBAAkB;8BAChD,MAAM,IAAI,CACT;wBAAE,QAAQ,2LAAgB,CAAC,oBAAoB;oBAAC,GAChD,CAAC,GAAG,kBACF,wOAAC;4BAAY,WAAU;2BAAb;;;;;;;;;;8BAMhB,wOAAC;oBAAI,WAAU;;sCACb,wOAAC;4BAAI,WAAU;;;;;;sCACf,wOAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMvB,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2323, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Documents/07%3A30%3A15/frontend/src/app/dashboard/%5BuserId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport dynamic from \"next/dynamic\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport { WifiOff, RefreshCw } from \"lucide-react\";\nimport ErrorBoundary, { SimpleErrorFallback } from \"@/components/ErrorBoundary\";\nimport { useCustomizeStore } from \"@/stores/customizeStore\";\nimport { useDashboardData } from \"@/hooks/useDashboardData\";\nimport { useDashboardNavigation } from \"@/hooks/useDashboardNavigation\";\nimport { useDashboardStats } from \"@/hooks/useDashboardStats\";\nimport { useUserAuth } from \"@/hooks/useUserAuth\";\nimport { DashboardHeader } from \"@/components/dashboard/home/DashboardHeader\";\nimport { StatusGrid } from \"@/components/dashboard/home/StatusGrid\";\nimport { QuickActionsGrid } from \"@/components/dashboard/home/QuickActionsGrid\";\nimport { LoadingSkeleton } from \"@/components/dashboard/home/LoadingSkeleton\";\nimport { DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nconst DevModeAlert = dynamic(() => import(\"@/components/DevModeAlert\"), {\n  ssr: false,\n});\n\n// Lazy load components with optimized loading states\nconst AnalyticsDashboard = dynamic(\n  () => import(\"@/components/dashboard/home/AnalyticsDashboard\"),\n  {\n    loading: () => <LoadingSkeleton />,\n    ssr: false,\n  }\n);\n\nconst PerformanceMonitor = dynamic(\n  () => import(\"@/components/PerformanceMonitor\"),\n  {\n    ssr: false,\n  }\n);\n\nconst OfflineMode = dynamic(\n  () => import(\"@/components/dashboard/home/OfflineMode\"),\n  {\n    ssr: false,\n  }\n);\n\nexport default function UserDashboard() {\n  const { userId } = useParams();\n  const userIdString = userId as string;\n\n  // Custom hooks for separation of concerns\n  const { setCurrentUser } = useCustomizeStore();\n  const { user, isAuthLoading } = useUserAuth(userIdString, setCurrentUser);\n  const { quickActions, handleCustomizeClick, handleTrainClick } =\n    useDashboardNavigation(userIdString);\n\n  const {\n    loading,\n    analyticsLoading,\n    chatbots,\n    uploads,\n    conversations,\n    analyticsMetrics,\n    isOffline,\n    conversationCount,\n    conversationCountLoading,\n    loadDashboardData,\n    handleRefreshAnalytics,\n    refreshConnection,\n  } = useDashboardData();\n\n  const stats = useDashboardStats(\n    chatbots,\n    uploads,\n    conversations,\n    conversationCount\n  );\n  const [conversationsLoaded, setConversationsLoaded] = useState(false);\n\n  // Load dashboard data after user authentication with a small delay\n  useEffect(() => {\n    if (user && !isAuthLoading) {\n      // Add a small delay to ensure authentication is fully complete\n      const timer = setTimeout(() => {\n        loadDashboardData();\n      }, 100);\n\n      return () => clearTimeout(timer);\n    }\n  }, [user, isAuthLoading, loadDashboardData]);\n\n  // Track conversation loading state for better UX\n  useEffect(() => {\n    if (conversations.length > 0) {\n      setConversationsLoaded(true);\n    }\n  }, [conversations.length]);\n\n  // Early returns for loading and authentication states\n  if (isAuthLoading || loading) {\n    return <LoadingSkeleton />;\n  }\n\n  // Show offline mode if we can't connect to the server\n  if (isOffline) {\n    return <OfflineMode onRetry={refreshConnection} isRetrying={loading} />;\n  }\n\n  return (\n    <div\n      className={DASHBOARD_CONFIG.CONTAINER_CLASSES}\n      role=\"main\"\n      aria-label=\"User Dashboard\"\n    >\n      <PerformanceMonitor name=\"Dashboard Render\" />\n\n      {/* Development Mode Alert */}\n      <DevModeAlert show={isOffline} />\n\n      {/* Offline Status Banner */}\n      {isOffline && (\n        <Alert variant=\"destructive\" role=\"alert\">\n          <WifiOff className=\"h-4 w-4\" aria-hidden=\"true\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>\n              Unable to connect to server. Some features may not work properly.\n            </span>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={refreshConnection}\n              className=\"ml-4\"\n              aria-label=\"Retry connection\"\n            >\n              <RefreshCw className=\"h-4 w-4 mr-1\" aria-hidden=\"true\" />\n              Retry\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Dashboard Header */}\n      <DashboardHeader\n        user={user}\n        userId={userIdString}\n        onTrainClick={handleTrainClick}\n        onCustomizeClick={handleCustomizeClick}\n      />\n      <div className=\"p-8\">\n        {/* Stats Grid */}\n        <StatusGrid\n          stats={stats}\n          conversationsLoaded={conversationsLoaded}\n          conversations={conversations}\n          loading={loading}\n          conversationCount={conversationCount}\n          conversationCountLoading={conversationCountLoading}\n          onCreateConversation={handleCustomizeClick}\n        />\n\n        {/* Analytics Dashboard */}\n        <ErrorBoundary fallback={SimpleErrorFallback}>\n          <Suspense fallback={<LoadingSkeleton />}>\n            <AnalyticsDashboard\n              metrics={analyticsMetrics}\n              onRefresh={handleRefreshAnalytics}\n              loading={analyticsLoading}\n            />\n          </Suspense>\n        </ErrorBoundary>\n\n        {/* Subscription Analytics */}\n        <ErrorBoundary fallback={SimpleErrorFallback}>\n          <Suspense fallback={<LoadingSkeleton />}>\n           \n          </Suspense>\n        </ErrorBoundary>\n\n        {/* Quick Actions */}\n        <QuickActionsGrid actions={quickActions} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}