{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/ErrorBoundary.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { AlertTriangle, RefreshCw } from \"lucide-react\";\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error?: Error;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: React.ComponentType<{ error?: Error; retry: () => void }>;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n}\n\nclass ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { hasError: true, error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    console.error(\"ErrorBoundary caught an error:\", error, errorInfo);\n    this.props.onError?.(error, errorInfo);\n  }\n\n  retry = () => {\n    this.setState({ hasError: false, error: undefined });\n  };\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        const FallbackComponent = this.props.fallback;\n        return (\n          <FallbackComponent error={this.state.error} retry={this.retry} />\n        );\n      }\n\n      return (\n        <Card className=\"border-red-200\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2 text-red-600\">\n              <AlertTriangle className=\"h-5 w-5\" />\n              Something went wrong\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <p className=\"text-gray-600\">\n              {this.state.error?.message || \"An unexpected error occurred\"}\n            </p>\n            <Button\n              onClick={this.retry}\n              variant=\"outline\"\n              className=\"flex items-center gap-2\"\n            >\n              <RefreshCw className=\"h-4 w-4\" />\n              Try again\n            </Button>\n          </CardContent>\n        </Card>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// Simple functional error fallback component\nexport const SimpleErrorFallback: React.FC<{\n  error?: Error;\n  retry: () => void;\n}> = ({ error, retry }) => (\n  <div className=\"p-4 border border-red-200 rounded-lg bg-red-50\">\n    <div className=\"flex items-center gap-2 text-red-600 mb-2\">\n      <AlertTriangle className=\"h-4 w-4\" />\n      <span className=\"font-medium\">Error loading component</span>\n    </div>\n    <p className=\"text-sm text-gray-600 mb-3\">\n      {error?.message || \"Something went wrong\"}\n    </p>\n    <Button size=\"sm\" onClick={retry} variant=\"outline\">\n      Retry\n    </Button>\n  </div>\n);\n\nexport default ErrorBoundary;\n"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AALA;;;;;;;AAkBA,MAAM,sBAAsB,yMAAK,CAAC,SAAS;IASzC,OAAO,yBAAyB,KAAY,EAAsB;QAChE,OAAO;YAAE,UAAU;YAAM;QAAM;IACjC;IAEA,kBAAkB,KAAY,EAAE,SAA0B,EAAE;YAE1D,qBAAA;QADA,QAAQ,KAAK,CAAC,kCAAkC,OAAO;SACvD,sBAAA,CAAA,cAAA,IAAI,CAAC,KAAK,EAAC,OAAO,cAAlB,0CAAA,yBAAA,aAAqB,OAAO;IAC9B;IAMA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBAkBd;YAjBT,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,MAAM,oBAAoB,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC7C,qBACE,8NAAC;oBAAkB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK;oBAAE,OAAO,IAAI,CAAC,KAAK;;;;;;YAEjE;YAEA,qBACE,8NAAC,4KAAI;gBAAC,WAAU;;kCACd,8NAAC,kLAAU;kCACT,cAAA,8NAAC,iLAAS;4BAAC,WAAU;;8CACnB,8NAAC,6QAAa;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;kCAIzC,8NAAC,mLAAW;wBAAC,WAAU;;0CACrB,8NAAC;gCAAE,WAAU;0CACV,EAAA,oBAAA,IAAI,CAAC,KAAK,CAAC,KAAK,cAAhB,wCAAA,kBAAkB,OAAO,KAAI;;;;;;0CAEhC,8NAAC,gLAAM;gCACL,SAAS,IAAI,CAAC,KAAK;gCACnB,SAAQ;gCACR,WAAU;;kDAEV,8NAAC,iQAAS;wCAAC,WAAU;;;;;;oCAAY;;;;;;;;;;;;;;;;;;;QAM3C;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;IArDA,YAAY,KAAyB,CAAE;QACrC,KAAK,CAAC,QAaR,gNAAA,SAAQ;YACN,IAAI,CAAC,QAAQ,CAAC;gBAAE,UAAU;gBAAO,OAAO;YAAU;QACpD;QAdE,IAAI,CAAC,KAAK,GAAG;YAAE,UAAU;QAAM;IACjC;AAmDF;AAGO,MAAM,sBAGR;QAAC,EAAE,KAAK,EAAE,KAAK,EAAE;yBACpB,8NAAC;QAAI,WAAU;;0BACb,8NAAC;gBAAI,WAAU;;kCACb,8NAAC,6QAAa;wBAAC,WAAU;;;;;;kCACzB,8NAAC;wBAAK,WAAU;kCAAc;;;;;;;;;;;;0BAEhC,8NAAC;gBAAE,WAAU;0BACV,CAAA,kBAAA,4BAAA,MAAO,OAAO,KAAI;;;;;;0BAErB,8NAAC,gLAAM;gBAAC,MAAK;gBAAK,SAAS;gBAAO,SAAQ;0BAAU;;;;;;;;;;;;;KAZ3C;uCAkBE","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/api/routes.ts"],"sourcesContent":["// import { supabase } from \"@/utils/SupabaseClient\";\nimport { ChatbotInfo, UploadFile, ConversationInfo } from \"@/types/schemaTypes\";\nimport { fetchWithAuth, getAuthInfo } from \"@/app/api/auth\";\nimport { apiCache, createCacheKey } from \"@/utils/cache\";\n// import { fetchWithTimeout } from \"@/utils/timeout\";\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\n// Enhanced Types for Context Engineering - Updated to match backend\ninterface ChatResponse {\n  response: string;\n  sources: string[];\n  conversation_id: string;\n  message_id?: string;\n  processing_time_ms: number;\n  context_quality: {\n    context_length: number;\n    has_context: boolean;\n    coverage_score: number;\n    quality_tier: string;\n    timestamp: string;\n  };\n  chatbot_config: {\n    name: string;\n    avatar_url?: string;\n    color_hex: string;\n    tone: string;\n    id?: string;\n  };\n}\n\n// Updated to match backend ContextEngineeringConfig exactly\ninterface ContextConfig {\n  org_id: string;\n  config_name: string;\n  initial_retrieval_count: number;\n  semantic_rerank_count: number;\n  final_context_chunks: number;\n  max_context_length: number;\n  enable_query_rewriting: boolean;\n  max_query_variants: number;\n  conversation_context_turns: number;\n  retrieval_strategy:\n    | \"semantic_only\"\n    | \"hybrid\"\n    | \"keyword_only\"\n    | \"domain_specific\";\n  semantic_weight: number;\n  keyword_weight: number;\n  model_tier: \"fast\" | \"balanced\" | \"premium\" | \"enterprise\";\n  embedding_model: string;\n  rerank_model: string;\n  enable_semantic_rerank: boolean;\n  enable_hallucination_check: boolean;\n  enable_source_verification: boolean;\n  confidence_threshold: number;\n  max_response_time_ms: number;\n  enable_caching: boolean;\n  cache_ttl_minutes: number;\n  domain_filters: Record<string, unknown>;\n  business_context: string;\n  specialized_instructions: string;\n  enable_detailed_logging: boolean;\n  log_user_queries: boolean;\n  collect_feedback: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\ninterface PerformanceRecommendation {\n  type: \"performance\" | \"quality\" | \"usage\";\n  issue: string;\n  recommendation: string;\n  suggested_changes: Record<string, unknown>;\n}\n\ninterface PerformanceInsights {\n  recommendations: PerformanceRecommendation[];\n  confidence: number;\n  analysis_date: string;\n}\n\ninterface ContextAnalytics {\n  org_id: string;\n  conversation_id: string;\n  message_id: string;\n  query_original: string;\n  query_enhanced?: string;\n  documents_retrieved: number;\n  context_length: number;\n  context_quality_score: number;\n  retrieval_time_ms: number;\n  response_time_ms: number;\n  model_used: string;\n  sources_count: number;\n  user_satisfaction?: number;\n  feedback_text?: string;\n  timestamp: string;\n}\n\ninterface PerformanceMetrics {\n  summary: {\n    total_queries: number;\n    avg_response_time_ms: number;\n    p95_response_time_ms: number;\n    avg_context_quality: number;\n    avg_satisfaction: number;\n    period_days: number;\n  };\n  performance: {\n    response_time: {\n      average: number;\n      median: number;\n      p95: number;\n      distribution: Record<string, number>;\n    };\n    context_quality: {\n      average: number;\n      distribution: Record<string, number>;\n    };\n    satisfaction: {\n      average: number;\n      total_feedback: number;\n      distribution: Record<string, number>;\n    };\n  };\n  usage_patterns: {\n    hourly_distribution: Record<string, number>;\n    model_usage: Record<string, number>;\n    avg_sources_per_query: number;\n    queries_per_day: number;\n  };\n  trends: {\n    trends_available: boolean;\n    response_time_change?: number;\n    quality_change?: number;\n    volume_change?: number;\n  };\n  quality_analysis: {\n    best_performing_model?: string;\n    optimal_source_count?: number;\n    peak_quality_hours: Array<[number, number]>;\n  };\n  insights: Array<{\n    type: \"warning\" | \"success\" | \"info\";\n    category: \"performance\" | \"quality\" | \"usage\" | \"satisfaction\";\n    title: string;\n    description: string;\n    recommendation: string;\n  }>;\n  generated_at: string;\n}\n\ninterface FeedbackRequest {\n  message_id: string;\n  rating: 1 | -1;\n  feedback_text?: string;\n  feedback_type?: \"quality\" | \"accuracy\" | \"helpfulness\" | \"other\";\n}\n\ninterface RetrainResponse {\n  message: string;\n  status: string;\n}\n\ninterface HealthCheck {\n  status: \"healthy\" | \"degraded\";\n  timestamp: string;\n  services: {\n    database: \"healthy\" | \"error\";\n    chat_service: \"healthy\" | \"error\";\n    context_engine: \"healthy\" | \"error\";\n  };\n  version: string;\n  error?: string;\n}\n\n// Organization API Types\ninterface UpdateOrganizationRequest {\n  name: string;\n  email: string;\n  contact_phone?: string;\n  business_type?: string;\n}\n\ninterface OrganizationInfo {\n  name: string;\n  email: string;\n  plan_id: string | null;\n  contact_phone?: string;\n  business_type?: string;\n}\n\ninterface OrganizationResponse {\n  user: {\n    email: string;\n  };\n  organization: OrganizationInfo;\n}\n\ninterface UpdateOrganizationResponse {\n  success: boolean;\n  message: string;\n  organization: {\n    name: string;\n    email: string;\n  };\n}\n\n// Get token and user info from Supabase session\n// const getAuthInfo = async () => {\n//   const { data } = await supabase.auth.getSession();\n//   const token = data.session?.access_token;\n//   const userId = data.session?.user?.id;\n//   const orgId = data.session?.user?.user_metadata?.org_id;\n\n//   if (!token || !userId) {\n//     throw new Error(\"Not authenticated. Please log in again.\");\n//   }\n\n//   return { token, userId, orgId };\n// };\n\n// Custom error type for API errors\n\n// Enhanced Chatbot API with Context Engineering Support\nexport const chatbotApi = {\n  // ==========================================\n  // CHATBOT MANAGEMENT\n  // ==========================================\n\n  getChatbots: async (): Promise<ChatbotInfo[]> => {\n    const cacheKey = createCacheKey(\"/api/chat/chatbots\");\n\n    // Check cache first\n    const cached = apiCache.get<ChatbotInfo[]>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 10 seconds\"));\n      }, 10000);\n\n      const data = await fetchWithAuth(\"/api/chat/chatbots\", {\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n      const result = data.chatbots || data || [];\n\n      // Cache for 2 minutes\n      apiCache.set(cacheKey, result, 2 * 60 * 1000);\n\n      return result;\n    } catch (error) {\n      console.error(\"Error fetching chatbots:\", error);\n      if (\n        error instanceof Error &&\n        (error.name === \"AbortError\" || error.message.includes(\"timeout\"))\n      ) {\n        throw new Error(\"Request timed out. Please try again.\");\n      }\n      throw error;\n    }\n  },\n\n  getChatbot: async (chatbotId: string): Promise<ChatbotInfo> => {\n    return fetchWithAuth(`/api/chat/chatbots/${chatbotId}`);\n  },\n\n  createChatbot: async (config: ChatbotInfo): Promise<ChatbotInfo> => {\n    const { userId, orgId } = await getAuthInfo();\n\n    // Ensure org_id is always present - use a default if not set\n    const finalOrgId = orgId || `user_${userId}_org`;\n\n    // Map frontend ai_model_config to backend model_config format\n    const backendConfig = {\n      ...config,\n      user_id: userId,\n      org_id: finalOrgId,\n    };\n\n    // Map ai_model_config to what backend expects\n    if (config.ai_model_config) {\n      backendConfig.ai_model_config = config.ai_model_config;\n      // Backend stores this as model_config internally\n    }\n\n    console.log(\"🤖 Creating chatbot with config:\", {\n      ...backendConfig,\n      user_id: userId.substring(0, 8) + \"...\",\n      org_id: finalOrgId.substring(0, 12) + \"...\",\n    });\n\n    const response = await fetchWithAuth(\"/api/chat/chatbots\", {\n      method: \"POST\",\n      body: JSON.stringify(backendConfig),\n    });\n\n    return response.chatbot || response;\n  },\n\n  updateChatbot: async (\n    chatbotId: string,\n    config: ChatbotInfo\n  ): Promise<ChatbotInfo> => {\n    const response = await fetchWithAuth(`/api/chat/chatbots/${chatbotId}`, {\n      method: \"PUT\",\n      body: JSON.stringify(config),\n    });\n\n    return response.chatbot || response;\n  },\n\n  deleteChatbot: async (chatbotId: string): Promise<void> => {\n    await fetchWithAuth(`/api/chat/chatbots/${chatbotId}`, {\n      method: \"DELETE\",\n    });\n  },\n\n  activateChatbot: async (chatbotId: string): Promise<void> => {\n    await fetchWithAuth(`/api/chat/chatbots/${chatbotId}/activate`, {\n      method: \"POST\",\n    });\n  },\n\n  // ==========================================\n  // HEALTH CHECK & SYSTEM STATUS\n  // ==========================================\n\n  healthCheck: async (): Promise<{\n    status: \"healthy\" | \"degraded\";\n    timestamp: string;\n    services: {\n      database: \"healthy\" | \"error\";\n      chat_service: \"healthy\" | \"error\";\n      context_engine: \"healthy\" | \"error\";\n    };\n    version: string;\n    error?: string;\n  }> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/health\");\n    } catch (error) {\n      console.warn(\"Health check failed:\", error);\n      return {\n        status: \"degraded\",\n        timestamp: new Date().toISOString(),\n        services: {\n          database: \"error\",\n          chat_service: \"error\",\n          context_engine: \"error\",\n        },\n        version: \"unknown\",\n        error: error instanceof Error ? error.message : String(error),\n      };\n    }\n  },\n};\n\n// ==========================================\n// KNOWLEDGE BASE MANAGEMENT\n// ==========================================\nexport const uploadsApi = {\n  getUploads: async (): Promise<UploadFile[]> => {\n    const cacheKey = createCacheKey(\"/api/uploads\");\n\n    // Check cache first\n    const cached = apiCache.get<UploadFile[]>(cacheKey);\n    if (cached) {\n      return cached;\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 8 seconds\"));\n      }, 8000);\n\n      const data = await fetchWithAuth(\"/api/uploads\", {\n        signal: controller.signal,\n      });\n\n      clearTimeout(timeoutId);\n\n      let result: UploadFile[] = [];\n      if (Array.isArray(data)) {\n        result = data;\n      } else if (data.uploads && Array.isArray(data.uploads)) {\n        result = data.uploads;\n      } else if (data.data && Array.isArray(data.data)) {\n        result = data.data;\n      } else {\n        console.warn(\"Unexpected uploads response structure:\", data);\n        result = [];\n      }\n\n      // Cache for 1 minute (uploads change more frequently)\n      apiCache.set(cacheKey, result, 1 * 60 * 1000);\n\n      return result;\n    } catch (error) {\n      console.error(\"Error fetching uploads:\", error);\n      if (error instanceof Error && error.name === \"AbortError\") {\n        throw new Error(\"Request timed out. Please try again.\");\n      }\n      throw error;\n    }\n  },\n\n  uploadFile: async (file: File, type: string): Promise<UploadFile> => {\n    const { token, userId, orgId } = await getAuthInfo();\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    const headers: Record<string, string> = {\n      Authorization: `Bearer ${token}`,\n      \"X-User-ID\": userId,\n    };\n\n    if (orgId) {\n      headers[\"X-Org-ID\"] = orgId;\n    }\n\n    console.log(\n      `📤 Uploading file: ${file.name} (${file.size} bytes) as ${type}`\n    );\n\n    const response = await fetch(`${BASE_URL}/api/uploads/${type}`, {\n      method: \"POST\",\n      headers,\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`Upload failed (${response.status}): ${errorText}`);\n    }\n\n    const result = await response.json();\n    console.log(`✅ File uploaded successfully:`, result);\n    return result;\n  },\n\n  uploadFileWithTokenHandling: async (\n    file: File,\n    type: string,\n    tokenHandler?: any\n  ): Promise<UploadFile | null> => {\n    if (!tokenHandler) {\n      return uploadsApi.uploadFile(file, type);\n    }\n\n    return tokenHandler.wrapApiCall(\n      () => uploadsApi.uploadFile(file, type),\n      'document_upload',\n      undefined,\n      file.size\n    );\n  },\n\n  uploadUrl: async (url: string): Promise<UploadFile> => {\n    console.log(`🔗 Uploading URL: ${url}`);\n    return fetchWithAuth(\"/api/uploads/url\", {\n      method: \"POST\",\n      body: JSON.stringify({ url }),\n    });\n  },\n\n  uploadJson: async (\n    jsonData: object,\n    filename: string = \"training-data.json\"\n  ): Promise<UploadFile> => {\n    console.log(`📋 Uploading JSON data: ${filename}`);\n\n    // Convert JSON object to File\n    const jsonString = JSON.stringify(jsonData, null, 2);\n    const blob = new Blob([jsonString], { type: \"application/json\" });\n    const file = new File([blob], filename, { type: \"application/json\" });\n\n    return uploadsApi.uploadFile(file, \"json\");\n  },\n\n  deleteUpload: async (uploadId: string): Promise<void> => {\n    console.log(`🗑️ Deleting upload: ${uploadId}`);\n    await fetchWithAuth(`/api/uploads/${uploadId}`, {\n      method: \"DELETE\",\n    });\n  },\n\n  reprocessUpload: async (uploadId: string): Promise<RetrainResponse> => {\n    console.log(`🔄 Reprocessing upload: ${uploadId}`);\n    return fetchWithAuth(`/api/uploads/${uploadId}/reprocess`, {\n      method: \"POST\",\n    });\n  },\n\n  getUploadStatus: async (\n    uploadId: string\n  ): Promise<{\n    id: string;\n    status: string;\n    progress?: number;\n    error_message?: string;\n    processed_at?: string;\n  }> => {\n    return fetchWithAuth(`/api/uploads/${uploadId}/status`);\n  },\n\n  // ==========================================\n  // SYSTEM HEALTH & MONITORING\n  // ==========================================\n};\n\n// ==========================================\n// ENHANCED CHAT & CONVERSATIONS\n// ==========================================\nexport const conversationApi = {\n  sendMessage: async (\n    message: string,\n    chatbotId?: string,\n    conversationId?: string\n  ): Promise<ChatResponse> => {\n    try {\n      // Match backend parameter names exactly\n      const body = {\n        message,\n        ...(chatbotId && { chatbot_id: chatbotId }),\n        ...(conversationId && { conversation_id: conversationId }),\n      };\n\n      console.log(\"📤 Sending message with payload:\", {\n        message: message.substring(0, 50) + \"...\",\n        has_chatbot_id: !!chatbotId,\n        has_conversation_id: !!conversationId,\n      });\n\n      return await fetchWithAuth(\"/api/chat/conversation\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n      });\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n      throw error;\n    }\n  },\n\n  sendMessageWithTokenHandling: async (\n    message: string,\n    chatbotId?: string,\n    conversationId?: string,\n    tokenHandler?: any\n  ): Promise<ChatResponse | null> => {\n    if (!tokenHandler) {\n      return conversationApi.sendMessage(message, chatbotId, conversationId);\n    }\n\n    return tokenHandler.wrapApiCall(\n      () => conversationApi.sendMessage(message, chatbotId, conversationId),\n      'chat',\n      message.length\n    );\n  },\n\n  getConversations: async (limit?: number): Promise<ConversationInfo[]> => {\n    try {\n      // For dashboard, use a smaller limit for faster loading\n      const queryLimit = limit || (limit === 10 ? 10 : 10000);\n      const data = await fetchWithAuth(\n        `/api/chat/conversations?limit=${queryLimit}`\n      );\n      return data.conversations || data || [];\n    } catch (error) {\n      console.error(\"Error fetching conversations:\", error);\n      throw error;\n    }\n  },\n\n  // Fast conversation count for dashboard stats\n  getConversationCount: async (): Promise<number> => {\n    try {\n      const cacheKey = createCacheKey('conversation-count');\n      const cached = apiCache.get(cacheKey);\n      if (typeof cached === 'number') {\n        return cached;\n      }\n\n      // Load a small sample for fast count display\n      // This is much faster than loading all conversations\n      const data = await fetchWithAuth('/api/chat/conversations?limit=1000');\n      const conversations = data.conversations || data || [];\n      \n      // Cache for 30 seconds\n      apiCache.set(cacheKey, conversations.length, 30 * 1000);\n      return conversations.length;\n    } catch (error) {\n      console.error(\"Error fetching conversation count:\", error);\n      return 0; // Return 0 on error to prevent UI breaking\n    }\n  },\n\n  addFeedback: async (\n    feedbackRequest: FeedbackRequest\n  ): Promise<{ success: boolean; message?: string }> => {\n    return fetchWithAuth(\"/api/chat/feedback\", {\n      method: \"POST\",\n      body: JSON.stringify(feedbackRequest),\n    });\n  },\n\n  // ==========================================\n  // ENHANCED CONTEXT ENGINEERING\n  // ==========================================\n\n  getContextConfig: async (\n    configName: string = \"default\"\n  ): Promise<{\n    success: boolean;\n    config: ContextConfig;\n    message: string;\n  } | null> => {\n    try {\n      // Use a more targeted approach to avoid console noise\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n        ...(orgId && { \"X-Org-ID\": orgId }),\n      };\n\n      const response = await fetch(\n        `${BASE_URL}/api/chat/context-config?config_name=${configName}`,\n        {\n          method: \"GET\",\n          headers,\n        }\n      );\n\n      if (!response.ok) {\n        // Silently return null for 404 (endpoint not available) or other expected errors\n        return null;\n      }\n\n      const result = await response.json();\n      return result;\n    } catch {\n      // Silently handle connection errors - this is expected in development\n      return null;\n    }\n  },\n\n  updateContextConfig: async (\n    updates: Partial<ContextConfig>\n  ): Promise<{\n    success: boolean;\n    message: string;\n  }> => {\n    // Validate the updates object\n    if (!updates || typeof updates !== \"object\") {\n      throw new Error(\"Invalid context config updates provided\");\n    }\n\n    // Additional validation to prevent server errors\n    const sanitizedUpdates = Object.fromEntries(\n      Object.entries(updates).filter(([key, value]) => {\n        // Remove undefined values that might cause server issues\n        if (value === undefined) {\n          console.debug(`⚠️ Removing undefined value for key: ${key}`);\n          return false;\n        }\n        return true;\n      })\n    );\n\n    console.debug(\"🔧 Updating context config with sanitized payload:\", {\n      originalKeys: Object.keys(updates),\n      sanitizedKeys: Object.keys(sanitizedUpdates),\n      payload: sanitizedUpdates,\n    });\n\n    try {\n      const requestPayload = { config_updates: sanitizedUpdates };\n      console.debug(\n        \"📤 Sending request payload:\",\n        JSON.stringify(requestPayload, null, 2)\n      );\n\n      // Use direct fetch to avoid excessive logging for expected failures\n      const { token, userId, orgId } = await getAuthInfo();\n\n      const headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n        \"X-User-ID\": userId,\n        ...(orgId && { \"X-Org-ID\": orgId }),\n      };\n\n      const response = await fetch(`${BASE_URL}/api/chat/context-config`, {\n        method: \"PUT\",\n        headers,\n        body: JSON.stringify(requestPayload),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        console.debug(\"✅ Context config update successful\");\n        return (\n          result || {\n            success: true,\n            message: \"Configuration updated successfully\",\n          }\n        );\n      } else {\n        // Handle specific error cases without logging errors for expected failures\n        if (response.status === 404) {\n          console.debug(\n            \"⚠️ Context config endpoint not available, using local fallback\"\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally (backend endpoint not available)\",\n          };\n        } else if (response.status === 401) {\n          throw new Error(\n            \"Session expired. Please refresh the page and try again.\"\n          );\n        } else {\n          console.warn(\n            `⚠️ Context config update failed with status ${response.status}`\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally. Server sync will retry automatically.\",\n          };\n        }\n      }\n    } catch (error) {\n      console.debug(\"❌ Context config update error:\", error);\n\n      // Handle specific error cases with better user feedback\n      if (error instanceof Error) {\n        // If authentication error, provide clearer guidance\n        if (\n          error.message.includes(\"Authentication\") ||\n          error.message.includes(\"401\")\n        ) {\n          throw new Error(\n            \"Session expired. Please refresh the page and try again.\"\n          );\n        }\n\n        // If it's a network error, provide fallback\n        if (\n          error.message.includes(\"fetch\") ||\n          error.message.includes(\"network\")\n        ) {\n          console.debug(\n            \"⚠️ Network error during context config update, using fallback\"\n          );\n          return {\n            success: true,\n            message:\n              \"Configuration saved locally. Changes will sync when connection is restored.\",\n          };\n        }\n      }\n\n      // For other errors, provide a fallback response instead of throwing\n      console.debug(\n        \"⚠️ Context config update error, providing fallback response\"\n      );\n      return {\n        success: true,\n        message:\n          \"Configuration saved locally. Some features may not sync until connection is restored.\",\n      };\n    }\n  },\n\n  createCustomContextConfig: async (\n    configName: string,\n    baseTemplate: string = \"saas\",\n    customSettings: Partial<ContextConfig> = {}\n  ): Promise<{\n    success: boolean;\n    config: ContextConfig;\n    message: string;\n  }> => {\n    return fetchWithAuth(\"/api/chat/context-config/custom\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        config_name: configName,\n        base_template: baseTemplate,\n        custom_settings: customSettings,\n      }),\n    });\n  },\n\n  // Get business templates - matches backend default configs\n\n  // ==========================================\n  // ANALYTICS & INSIGHTS (Updated to match backend exactly)\n  // ==========================================\n\n  getAnalyticsDashboard: async (\n    days: number = 7\n  ): Promise<PerformanceMetrics | null> => {\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => {\n        controller.abort(new Error(\"Request timeout after 15 seconds\"));\n      }, 15000);\n\n      const result = await fetchWithAuth(\n        `/api/chat/analytics/dashboard?days=${days}`,\n        {\n          signal: controller.signal,\n        }\n      );\n\n      clearTimeout(timeoutId);\n      return result;\n    } catch (error) {\n      console.warn(\"Analytics dashboard not available:\", error);\n      if (\n        error instanceof Error &&\n        (error.name === \"AbortError\" || error.message.includes(\"timeout\"))\n      ) {\n        console.warn(\"Analytics request timed out\");\n      }\n      return null;\n    }\n  },\n\n  getPerformanceInsights: async (): Promise<{\n    success: boolean;\n    insights: PerformanceMetrics;\n    generated_at: string;\n  } | null> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/performance-insights\");\n    } catch (error) {\n      console.warn(\"Performance insights not available:\", error);\n      return null;\n    }\n  },\n\n  getContextAnalytics: async (\n    days: number = 7\n  ): Promise<{\n    success: boolean;\n    analytics: ContextAnalytics[];\n    summary: {\n      total_queries: number;\n      avg_quality_score: number;\n      avg_retrieval_time: number;\n      model_distribution: Record<string, number>;\n    };\n  } | null> => {\n    try {\n      return await fetchWithAuth(`/api/chat/analytics/context?days=${days}`);\n    } catch (error) {\n      console.warn(\"Context analytics not available:\", error);\n      return null;\n    }\n  },\n\n  analyzeQueryOptimization: async (\n    query: string\n  ): Promise<{\n    original_query: string;\n    enhanced_query: string;\n    expected_quality: number;\n    strategy_recommendation: string;\n    estimated_response_time: number;\n  } | null> => {\n    try {\n      return await fetchWithAuth(\"/api/chat/analytics/query-optimization\", {\n        method: \"POST\",\n        body: JSON.stringify({ query }),\n      });\n    } catch (error) {\n      console.warn(\"Query optimization not available:\", error);\n      return null;\n    }\n  },\n\n  // getContextAnalytics: async (days: number = 7): Promise<{\n  //   analytics: ContextAnalytics[];\n  //   summary: {\n  //     total_queries: number;\n  //     avg_quality_score: number;\n  //     avg_retrieval_time: number;\n  //     model_distribution: Record<string, number>;\n  //   };\n  // }> => {\n  //   return fetchWithAuth(`/api/chat/analytics/context?days=${days}`);\n  // },\n\n  // analyzeQuery: async (query: string): Promise<{\n  //   original_query: string;\n  //   enhanced_query?: string;\n  //   expected_quality: number;\n  //   strategy_recommendation: string;\n  //   estimated_response_time: number;\n  // }> => {\n  //   return fetchWithAuth('/api/chat/analytics/query-optimization', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ query }),\n  //   });\n  // },\n\n  // getQueryAnalysis: async (query: string, days: number = 30): Promise<{\n  //   similar_queries_found: number;\n  //   analysis: {\n  //     avg_context_quality: number;\n  //     avg_response_time_ms: number;\n  //     avg_satisfaction: number;\n  //     most_common_sources: Array<[string, number]>;\n  //   } | null;\n  // }> => {\n  //   return fetchWithAuth('/api/chat/analytics/query-analysis', {\n  //     method: 'POST',\n  //     body: JSON.stringify({ query, days }),\n  //   });\n  // },\n\n  exportAnalyticsData: async (\n    startDate: string,\n    endDate: string,\n    format: \"json\" | \"csv\" = \"json\"\n  ): Promise<{\n    format: string;\n    data: unknown[];\n    count: number;\n    error?: string;\n  }> => {\n    return fetchWithAuth(\"/api/chat/analytics/export\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        start_date: startDate,\n        end_date: endDate,\n        format,\n      }),\n    });\n  },\n\n  getHealthCheck: async (): Promise<HealthCheck> => {\n    const response = await fetch(`${BASE_URL}/api/chat/health`);\n    return response.json();\n  },\n\n// ==========================================\n// UTILITY METHODS\n// ==========================================\n\n  getAuthHeaders: async (): Promise<Record<string, string>> => {\n    const { token, userId, orgId } = await getAuthInfo();\n    return {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n      \"X-User-ID\": userId,\n      ...(orgId && { \"X-Org-ID\": orgId }),\n    };\n  },\n\n  testConnection: async (): Promise<{\n    success: boolean;\n    responseTime: number;\n    error?: string;\n  }> => {\n    const startTime = Date.now();\n    try {\n      await fetchWithAuth(\"/api/chat/health\");\n      return {\n        success: true,\n        responseTime: Date.now() - startTime,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        responseTime: Date.now() - startTime,\n        error: error instanceof Error ? error.message : \"Unknown error\",\n      };\n    }\n  },\n\n  getCurrentUserContext: async (): Promise<{\n    userId: string;\n    orgId?: string;\n    isAuthenticated: boolean;\n  }> => {\n    try {\n      const { userId, orgId } = await getAuthInfo();\n      return {\n        userId,\n        orgId,\n        isAuthenticated: true,\n      };\n    } catch {\n      return {\n        userId: \"\",\n        orgId: undefined,\n        isAuthenticated: false,\n      };\n    }\n  },\n};\n\n// ==========================================\n// ORGANIZATION MANAGEMENT API\n// ==========================================\nexport const organizationApi = {\n  getOrganizationInfo: async (): Promise<OrganizationResponse> => {\n    try {\n      const cacheKey = createCacheKey(\"/api/org/info\");\n      \n      // Check cache first\n      const cached = apiCache.get<OrganizationResponse>(cacheKey);\n      if (cached) {\n        return cached;\n      }\n\n      console.log(\"🔍 Fetching organization info from:\", `${BASE_URL}/api/org/info`);\n      \n      try {\n        const data = await fetchWithAuth(\"/api/org/info\");\n        \n        // Cache for 5 minutes\n        apiCache.set(cacheKey, data, 5 * 60 * 1000);\n        \n        return data;\n      } catch (error) {\n        // If organization endpoint doesn't exist, return mock data\n        console.warn(\"Organization endpoint not available, using mock data:\", error);\n        \n        const mockData: OrganizationResponse = {\n          user: {\n            email: \"user@example.com\"\n          },\n          organization: {\n            name: \"Demo Organization\",\n            email: \"org@example.com\",\n            plan_id: \"free\"\n          }\n        };\n        \n        // Cache mock data for 1 minute\n        apiCache.set(cacheKey, mockData, 1 * 60 * 1000);\n        \n        return mockData;\n      }\n    } catch (error) {\n      console.error(\"Error fetching organization info:\", error);\n      console.error(\"Error details:\", {\n        name: error instanceof Error ? error.name : 'Unknown',\n        message: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      throw error;\n    }\n  },\n\n  updateOrganization: async (\n    request: UpdateOrganizationRequest\n  ): Promise<UpdateOrganizationResponse> => {\n    try {\n      console.log(\"🏢 Updating organization:\", {\n        name: request.name,\n        email: request.email.substring(0, 3) + \"***\" // Log partial email for security\n      });\n\n      // Debug: Log the full URL being called\n      console.log(\"🔍 Calling organization update endpoint:\", `${BASE_URL}/api/org/update`);\n\n      // Try the organization update endpoint\n      try {\n        const response = await fetchWithAuth(\"/api/org/update\", {\n          method: \"PATCH\",\n          body: JSON.stringify(request),\n        });\n\n        console.log(\"✅ Organization update response:\", response);\n\n        // Handle different response formats\n        if (response && typeof response === 'object') {\n          // If response has success field, use it as is\n          if ('success' in response) {\n            // Invalidate organization cache after successful update\n            apiCache.deleteMatching(\"/api/org\");\n            return response as UpdateOrganizationResponse;\n          }\n          \n          // If response has message field, format it properly\n          if ('message' in response) {\n            const formattedResponse: UpdateOrganizationResponse = {\n              success: true,\n              message: response.message as string,\n              organization: {\n                name: request.name,\n                email: request.email\n              }\n            };\n            \n            // Invalidate organization cache after successful update\n            apiCache.deleteMatching(\"/api/org\");\n            return formattedResponse;\n          }\n        }\n\n        // If response doesn't match expected format, create a success response\n        console.log(\"⚠️ Unexpected response format, creating success response\");\n        const successResponse: UpdateOrganizationResponse = {\n          success: true,\n          message: \"Organization updated successfully\",\n          organization: {\n            name: request.name,\n            email: request.email\n          }\n        };\n\n        // Invalidate organization cache after successful update\n        apiCache.deleteMatching(\"/api/org\");\n        return successResponse;\n      } catch (orgError) {\n        console.warn(\"Organization update endpoint failed, trying alternative paths...\");\n        \n        // Try alternative endpoint paths that might exist\n        const alternativeEndpoints = [\n          \"/api/user/organization/update\", \n          \"/api/settings/org/update\"\n        ];\n\n        for (const endpoint of alternativeEndpoints) {\n          try {\n            console.log(`🔄 Trying alternative endpoint: ${endpoint}`);\n            const response = await fetchWithAuth(endpoint, {\n              method: \"PATCH\",\n              body: JSON.stringify(request),\n            });\n            \n            console.log(`✅ Success with endpoint: ${endpoint}`);\n            apiCache.deleteMatching(\"/api/org\");\n            return response;\n          } catch (altError) {\n            console.log(`❌ Failed with endpoint: ${endpoint}`, altError);\n            continue;\n          }\n        }\n        \n        // If all alternatives fail, return a mock success response for development\n        console.warn(\"All organization endpoints failed, returning mock success response\");\n        console.warn(\"Original error:\", orgError);\n        \n        const mockResponse: UpdateOrganizationResponse = {\n          success: true,\n          message: \"Organization updated successfully (mock response - backend endpoint not available)\",\n          organization: {\n            name: request.name,\n            email: request.email\n          }\n        };\n        \n        // Invalidate cache anyway\n        apiCache.deleteMatching(\"/api/org\");\n        \n        return mockResponse;\n      }\n    } catch (error) {\n      console.error(\"Error updating organization:\", error);\n      console.error(\"Error details:\", {\n        name: error instanceof Error ? error.name : 'Unknown',\n        message: error instanceof Error ? error.message : String(error),\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      throw error;\n    }\n  },\n\n  getChatbots: async (): Promise<ChatbotInfo[]> => {\n    try {\n      const data = await fetchWithAuth(\"/api/org/chatbots\");\n      return data.chatbots || data || [];\n    } catch (error) {\n      console.error(\"Error fetching organization chatbots:\", error);\n      throw error;\n    }\n  },\n};\n\n// Export additional utility functions\nexport const apiUtils = {\n  formatError: (error: unknown): string => {\n    if (error instanceof Error) {\n      return error.message;\n    }\n    if (typeof error === \"string\") {\n      return error;\n    }\n    return \"An unexpected error occurred. Please try again.\";\n  },\n\n  isAuthenticated: async (): Promise<boolean> => {\n    try {\n      await getAuthInfo();\n      return true;\n    } catch {\n      return false;\n    }\n  },\n\n  getBaseUrl: (): string => BASE_URL,\n\n  createRequestId: (): string =>\n    `req-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n\n  // Helper function to invalidate cache when data changes\n  invalidateCache: (pattern?: string) => {\n    if (pattern) {\n      // Use the new pattern matching method\n      const deletedCount = apiCache.deleteMatching(pattern);\n      console.log(`Cache invalidation: deleted ${deletedCount} entries matching \"${pattern}\"`);\n    } else {\n      // Clear all cache\n      apiCache.clear();\n      console.log('Cache invalidation: cleared all cache entries');\n    }\n  },\n};\n\n// Export types for use in components\nexport type {\n  ChatResponse,\n  ContextConfig,\n  PerformanceMetrics,\n  ConversationInfo,\n  FeedbackRequest,\n  HealthCheck,\n  PerformanceRecommendation,\n  PerformanceInsights,\n  ContextAnalytics,\n  UpdateOrganizationRequest,\n  OrganizationInfo,\n  OrganizationResponse,\n  UpdateOrganizationResponse,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/stores/customizeStore.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { devtools } from \"zustand/middleware\";\nimport type {\n  ChatbotInfo,\n  UploadFile,\n  ConversationInfo,\n} from \"@/types/schemaTypes\";\nimport type {\n  ContextConfig,\n  PerformanceMetrics,\n  ChatResponse,\n} from \"@/app/api/routes\";\nimport type { User } from \"@supabase/supabase-js\";\nimport { chatbotApi, conversationApi, uploadsApi } from \"@/app/api/routes\";\nimport { toast } from \"sonner\";\n\n// Define the store state interface\ninterface CustomizeState {\n  // Loading states\n  loading: boolean;\n  saving: boolean;\n  analyticsLoading: boolean;\n  uploading: boolean;\n\n  // UI state\n  activeTab: string;\n  showCreateForm: boolean;\n  showEmbedModal: boolean;\n  isEditMode: boolean;\n\n  // User and organization data\n  currentUser: User | null;\n  orgChatbots: ChatbotInfo[];\n  selectedChatbot: ChatbotInfo | null;\n\n  // Upload and embed data\n  uploads: UploadFile[];\n  embedCode: string;\n\n  // Analytics and performance\n  performanceMetrics: PerformanceMetrics | null;\n  conversations: ConversationInfo[];\n\n  // Deletion state\n  deletingChatbotId: string | null;\n\n  // Configuration\n  contextConfig: ContextConfig;\n  config: ChatbotInfo;\n\n  // Error states\n  error: string | null;\n  connectionStatus: \"connected\" | \"disconnected\" | \"checking\" | \"partial\";\n\n  // Chat state\n  chatMessages: ChatResponse[];\n  currentConversationId: string | null;\n\n  // Basic Actions\n  setLoading: (loading: boolean) => void;\n  setSaving: (saving: boolean) => void;\n  setActiveTab: (activeTab: string) => void;\n  setShowCreateForm: (showCreateForm: boolean) => void;\n  setShowEmbedModal: (showEmbedModal: boolean) => void;\n  setIsEditMode: (isEditMode: boolean) => void;\n  setAnalyticsLoading: (analyticsLoading: boolean) => void;\n  setUploading: (uploading: boolean) => void;\n  setCurrentUser: (currentUser: User | null) => void;\n  setError: (error: string | null) => void;\n  setConnectionStatus: (\n    status: \"connected\" | \"disconnected\" | \"checking\"\n  ) => void;\n\n  // Data Actions\n  setOrgChatbots: (orgChatbots: ChatbotInfo[]) => void;\n  setSelectedChatbot: (selectedChatbot: ChatbotInfo | null) => void;\n  setUploads: (uploads: UploadFile[]) => void;\n  setEmbedCode: (embedCode: string) => void;\n  setPerformanceMetrics: (\n    performanceMetrics: PerformanceMetrics | null\n  ) => void;\n  setDeletingChatbotId: (deletingChatbotId: string | null) => void;\n  setConversations: (conversations: ConversationInfo[]) => void;\n  setChatMessages: (messages: ChatResponse[]) => void;\n  setCurrentConversationId: (id: string | null) => void;\n\n  // Configuration Actions\n  setContextConfig: (contextConfig: ContextConfig) => void;\n  updateContextConfig: (updates: Partial<ContextConfig>) => void;\n  setConfig: (config: ChatbotInfo) => void;\n  updateConfig: (updates: Partial<ChatbotInfo>) => void;\n\n  // Enhanced Async Actions\n  loadChatbots: () => Promise<void>;\n  loadUploads: () => Promise<void>;\n  loadContextConfig: () => Promise<void>;\n  loadPerformanceMetrics: (days?: number) => Promise<void>;\n  createChatbot: (config: ChatbotInfo) => Promise<ChatbotInfo | null>;\n  updateChatbot: (\n    chatbotId: string,\n    config: ChatbotInfo\n  ) => Promise<ChatbotInfo | null>;\n  deleteChatbot: (chatbotId: string) => Promise<void>;\n  saveContextConfig: (updates: Partial<ContextConfig>) => Promise<void>;\n  uploadFile: (file: File, type: string) => Promise<UploadFile | null>;\n  generateEmbedCode: (chatbotId: string) => string;\n  testConnection: () => Promise<boolean>;\n\n  // Utility Actions\n  resetState: () => void;\n  initializeStore: (retryCount?: number) => Promise<void>;\n}\n\n// Default context configuration\nconst defaultContextConfig: ContextConfig = {\n  org_id: \"\",\n  config_name: \"default\",\n  initial_retrieval_count: 20,\n  semantic_rerank_count: 10,\n  final_context_chunks: 5,\n  max_context_length: 4000,\n  enable_query_rewriting: true,\n  max_query_variants: 3,\n  conversation_context_turns: 3,\n  retrieval_strategy: \"hybrid\",\n  semantic_weight: 0.6,\n  keyword_weight: 0.4,\n  model_tier: \"balanced\",\n  embedding_model: \"text-embedding-3-small\",\n  rerank_model: \"gpt-3.5-turbo\",\n  enable_semantic_rerank: true,\n  enable_hallucination_check: true,\n  enable_source_verification: true,\n  confidence_threshold: 0.7,\n  max_response_time_ms: 5000,\n  enable_caching: true,\n  cache_ttl_minutes: 60,\n  domain_filters: {},\n  business_context: \"\",\n  specialized_instructions: \"\",\n  enable_detailed_logging: true,\n  log_user_queries: true,\n  collect_feedback: true,\n  created_at: \"\",\n  updated_at: \"\",\n};\n\n// Default chatbot configuration\nconst defaultConfig: ChatbotInfo = {\n  id: \"\",\n  name: \"\",\n  description: \"\",\n  color_hex: \"#6a8fff\",\n  tone: \"helpful\",\n  behavior: \"Be helpful and informative while maintaining professionalism\",\n  system_prompt: \"\",\n  greeting_message:\n    \"Hello! I'm your INNOVZ AI Assistant. How can I help you today?\",\n  fallback_message:\n    \"I apologize, but I don't have enough information to answer that accurately. Could you please rephrase or provide more context?\",\n  ai_model_config: {\n    model: \"gpt-4\",\n    temperature: 0.7,\n    max_tokens: 1000,\n  },\n  is_active: true,\n  chain_status: \"ready\",\n  trainer_at: \"\",\n  created_at: \"\",\n  status: \"active\",\n  deployment_config: {\n    url: \"\",\n    headers: {},\n    method: \"POST\",\n  },\n  avatar_url: \"\",\n};\n\n// Create the Zustand store\nexport const useCustomizeStore = create<CustomizeState>()(\n  devtools(\n    (set, get) => ({\n      // Initial state\n      loading: true,\n      saving: false,\n      activeTab: \"basic\",\n      showCreateForm: false,\n      showEmbedModal: false,\n      isEditMode: false,\n      analyticsLoading: false,\n      uploading: false,\n\n      currentUser: null,\n      error: null,\n      connectionStatus: \"checking\",\n\n      orgChatbots: [],\n      selectedChatbot: null,\n      uploads: [],\n      embedCode: \"\",\n      performanceMetrics: null,\n      conversations: [],\n      deletingChatbotId: null,\n\n      contextConfig: defaultContextConfig,\n      config: defaultConfig,\n      chatMessages: [],\n      currentConversationId: null,\n\n      // Basic Actions\n      setLoading: (loading) => set({ loading }, false, \"setLoading\"),\n      setSaving: (saving) => set({ saving }, false, \"setSaving\"),\n      setActiveTab: (activeTab) => set({ activeTab }, false, \"setActiveTab\"),\n      setShowCreateForm: (showCreateForm) =>\n        set({ showCreateForm }, false, \"setShowCreateForm\"),\n      setShowEmbedModal: (showEmbedModal) =>\n        set({ showEmbedModal }, false, \"setShowEmbedModal\"),\n      setIsEditMode: (isEditMode) =>\n        set({ isEditMode }, false, \"setIsEditMode\"),\n      setAnalyticsLoading: (analyticsLoading) =>\n        set({ analyticsLoading }, false, \"setAnalyticsLoading\"),\n      setUploading: (uploading) => set({ uploading }, false, \"setUploading\"),\n      setCurrentUser: (currentUser) =>\n        set({ currentUser }, false, \"setCurrentUser\"),\n      setError: (error) => set({ error }, false, \"setError\"),\n      setConnectionStatus: (connectionStatus) =>\n        set({ connectionStatus }, false, \"setConnectionStatus\"),\n\n      // Data Actions\n      setOrgChatbots: (orgChatbots) =>\n        set({ orgChatbots }, false, \"setOrgChatbots\"),\n      setSelectedChatbot: (selectedChatbot) =>\n        set({ selectedChatbot }, false, \"setSelectedChatbot\"),\n      setUploads: (uploads) => set({ uploads }, false, \"setUploads\"),\n      setEmbedCode: (embedCode) => set({ embedCode }, false, \"setEmbedCode\"),\n      setPerformanceMetrics: (performanceMetrics) =>\n        set({ performanceMetrics }, false, \"setPerformanceMetrics\"),\n      setDeletingChatbotId: (deletingChatbotId) =>\n        set({ deletingChatbotId }, false, \"setDeletingChatbotId\"),\n      setConversations: (conversations) =>\n        set({ conversations }, false, \"setConversations\"),\n      setChatMessages: (chatMessages) =>\n        set({ chatMessages }, false, \"setChatMessages\"),\n      setCurrentConversationId: (currentConversationId) =>\n        set({ currentConversationId }, false, \"setCurrentConversationId\"),\n\n      // Configuration Actions\n      setContextConfig: (contextConfig) =>\n        set({ contextConfig }, false, \"setContextConfig\"),\n      updateContextConfig: (updates) =>\n        set(\n          (state) => ({\n            contextConfig: { ...state.contextConfig, ...updates },\n          }),\n          false,\n          \"updateContextConfig\"\n        ),\n\n      setConfig: (config) => set({ config }, false, \"setConfig\"),\n      updateConfig: (updates) =>\n        set(\n          (state) => ({\n            config: { ...state.config, ...updates },\n          }),\n          false,\n          \"updateConfig\"\n        ),\n\n      // Enhanced Async Actions with better error handling\n      loadChatbots: async () => {\n        try {\n          set({ loading: true, error: null });\n          const chatbots = await chatbotApi.getChatbots();\n          set({\n            orgChatbots: chatbots,\n            loading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\") ||\n            error.message.includes(\"Not authenticated\")\n          );\n\n          // Check if this is likely an initial load error (no chatbots loaded yet)\n          const currentState = get();\n          const isInitialLoad = !currentState.orgChatbots || currentState.orgChatbots.length === 0;\n\n          if (isDevelopment && isConnectionError && isInitialLoad) {\n            // In development, suppress error messages during initial load\n            console.debug(\"Initial load - chatbots loading failed (likely auth in progress)\");\n            set({\n              loading: false,\n              connectionStatus: \"disconnected\",\n            });\n            return; // Don't set error state for initial load failures\n          }\n\n          if (isDevelopment && isConnectionError) {\n            // In development, just log a warning for connection errors\n            console.warn(\"Chatbots loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading chatbots:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load chatbots\",\n            loading: false,\n            connectionStatus: \"disconnected\",\n          });\n\n          // Only show toast for unexpected errors, not connection issues in development\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load chatbots. Please check your connection.\");\n          }\n        }\n      },\n\n      loadUploads: async () => {\n        try {\n          const uploads = await uploadsApi.getUploads();\n          set({ uploads, connectionStatus: \"connected\" });\n        } catch (error) {\n          const isDevelopment = process.env.NODE_ENV === 'development';\n          const isConnectionError = error instanceof Error && (\n            error.message.includes(\"Unable to connect\") ||\n            error.message.includes(\"Backend server unavailable\") ||\n            error.message.includes(\"ECONNREFUSED\")\n          );\n\n          if (isDevelopment && isConnectionError) {\n            console.warn(\"Uploads loading failed - backend server not available\");\n          } else {\n            console.error(\"Error loading uploads:\", error);\n          }\n\n          set({\n            error: isConnectionError ? \"Backend server unavailable\" : \"Failed to load uploads\",\n            connectionStatus: \"disconnected\",\n          });\n\n          if (!isDevelopment || !isConnectionError) {\n            toast.error(\"Failed to load knowledge base files.\");\n          }\n        }\n      },\n\n      loadContextConfig: async () => {\n        try {\n          const response = await conversationApi.getContextConfig();\n          if (response && response.success) {\n            set({\n              contextConfig: response.config,\n              connectionStatus: \"connected\",\n            });\n          }\n        } catch (error) {\n          console.error(\"Error loading context config:\", error);\n          set({\n            error: \"Failed to load context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to load AI configuration.\");\n        }\n      },\n\n      loadPerformanceMetrics: async (days = 7) => {\n        try {\n          set({ analyticsLoading: true });\n          const metrics = await conversationApi.getAnalyticsDashboard(days);\n          set({\n            performanceMetrics: metrics,\n            analyticsLoading: false,\n            connectionStatus: \"connected\",\n          });\n        } catch (error) {\n          console.error(\"Error loading performance metrics:\", error);\n          set({\n            performanceMetrics: null,\n            analyticsLoading: false,\n            error: \"Failed to load analytics\",\n            connectionStatus: \"disconnected\",\n          });\n          // Don't show error toast for analytics as it's not critical\n        }\n      },\n\n      createChatbot: async (config) => {\n        try {\n          set({ saving: true, error: null });\n          const chatbot = await chatbotApi.createChatbot(config);\n          set((state) => ({\n            orgChatbots: [...state.orgChatbots, chatbot],\n            selectedChatbot: chatbot,\n            saving: false,\n            showCreateForm: false,\n            isEditMode: true,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot created successfully!\");\n          return chatbot;\n        } catch (error) {\n          console.error(\"Error creating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to create chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to create chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      updateChatbot: async (chatbotId, config) => {\n        try {\n          set({ saving: true, error: null });\n          const updatedChatbot = await chatbotApi.updateChatbot(\n            chatbotId,\n            config\n          );\n          set((state) => ({\n            orgChatbots: state.orgChatbots.map((bot) =>\n              bot.id === chatbotId ? updatedChatbot : bot\n            ),\n            selectedChatbot: updatedChatbot,\n            saving: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot updated successfully!\");\n          return updatedChatbot;\n        } catch (error) {\n          console.error(\"Error updating chatbot:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? error.message\n              : \"Failed to update chatbot. Please try again.\";\n          toast.error(errorMessage);\n          return null;\n        }\n      },\n\n      deleteChatbot: async (chatbotId) => {\n        try {\n          set({ deletingChatbotId: chatbotId, error: null });\n          await chatbotApi.deleteChatbot(chatbotId);\n          set((state) => ({\n            orgChatbots: state.orgChatbots.filter(\n              (bot) => bot.id !== chatbotId\n            ),\n            selectedChatbot:\n              state.selectedChatbot?.id === chatbotId\n                ? null\n                : state.selectedChatbot,\n            deletingChatbotId: null,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"Chatbot deleted successfully!\");\n        } catch (error) {\n          console.error(\"Error deleting chatbot:\", error);\n          set({\n            deletingChatbotId: null,\n            error: \"Failed to delete chatbot\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to delete chatbot. Please try again.\");\n        }\n      },\n\n      saveContextConfig: async (updates) => {\n        try {\n          set({ saving: true, error: null });\n          const response = await conversationApi.updateContextConfig(updates);\n\n          if (response && response.success) {\n            set((state) => ({\n              contextConfig: { ...state.contextConfig, ...updates },\n              saving: false,\n              connectionStatus: \"connected\",\n            }));\n            toast.success(\"Context configuration updated successfully!\");\n          } else {\n            throw new Error(response?.message || \"Save failed\");\n          }\n        } catch (error) {\n          console.error(\"Error saving context config:\", error);\n          set({\n            saving: false,\n            error: \"Failed to update context configuration\",\n            connectionStatus: \"disconnected\",\n          });\n\n          const errorMessage =\n            error instanceof Error\n              ? `Failed to save: ${error.message}`\n              : \"Failed to update context configuration. Please try again.\";\n          toast.error(errorMessage);\n        }\n      },\n\n      uploadFile: async (file, type) => {\n        try {\n          set({ uploading: true, error: null });\n          const uploadResult = await uploadsApi.uploadFile(file, type);\n          set((state) => ({\n            uploads: [...state.uploads, uploadResult],\n            uploading: false,\n            connectionStatus: \"connected\",\n          }));\n          toast.success(\"File uploaded successfully!\");\n          return uploadResult;\n        } catch (error) {\n          console.error(\"Error uploading file:\", error);\n          set({\n            uploading: false,\n            error: \"Failed to upload file\",\n            connectionStatus: \"disconnected\",\n          });\n          toast.error(\"Failed to upload file. Please try again.\");\n          return null;\n        }\n      },\n\n      testConnection: async () => {\n        try {\n          set({ connectionStatus: \"checking\" });\n          // First try a simple health check without auth\n          try {\n            const healthResponse = await conversationApi.getHealthCheck();\n            if (healthResponse) {\n              // If basic health check passes, try authenticated connection\n              const result = await conversationApi.testConnection();\n              const isConnected = result.success;\n              set({\n                connectionStatus: isConnected ? \"connected\" : \"disconnected\",\n              });\n              return isConnected;\n            }\n          } catch (healthError) {\n            console.warn(\n              \"Health check failed, trying direct connection test:\",\n              healthError\n            );\n          }\n\n          // Fall back to direct authenticated test\n          const result = await conversationApi.testConnection();\n          const isConnected = result.success;\n          set({ connectionStatus: isConnected ? \"connected\" : \"disconnected\" });\n          return isConnected;\n        } catch (error) {\n          console.error(\"Connection test failed:\", error);\n          set({ connectionStatus: \"disconnected\" });\n          return false;\n        }\n      },\n\n      generateEmbedCode: (chatbotId) => {\n        const API_BASE =\n          process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n        const embedScript = `<script>\n  (function() {\n    var script = document.createElement('script');\n    script.src = '${window.location.origin}/chatbot-widget.js';\n    script.setAttribute('data-chatbot-id', '${chatbotId}');\n    script.setAttribute('data-api-url', '${API_BASE}');\n    document.head.appendChild(script);\n  })();\n</script>`;\n        set({ embedCode: embedScript, showEmbedModal: true });\n        return embedScript;\n      },\n\n      initializeStore: async (retryCount = 0) => {\n        const maxRetries = 3;\n        try {\n          set({ loading: true, error: null, connectionStatus: \"checking\" });\n\n          // Test connection first with timeout and retry logic\n          let connectionResult;\n          try {\n            connectionResult = await get().testConnection();\n          } catch (connectionError) {\n            console.warn(\n              \"Initial connection test failed, attempting to continue:\",\n              connectionError\n            );\n            // Continue with initialization even if connection test fails\n            connectionResult = false;\n          }\n\n          // Load all data in parallel with individual error handling\n          const results = await Promise.allSettled([\n            chatbotApi.getChatbots(),\n            uploadsApi.getUploads(),\n            conversationApi.getContextConfig(),\n          ]);\n\n          let hasAnySuccess = false;\n          let criticalFailures = 0;\n\n          // Handle chatbots result (critical for basic functionality)\n          if (results[0].status === \"fulfilled\") {\n            set({ orgChatbots: results[0].value });\n            hasAnySuccess = true;\n          } else {\n            console.error(\"Failed to load chatbots:\", results[0].reason);\n            criticalFailures++;\n          }\n\n          // Handle uploads result (non-critical)\n          if (results[1].status === \"fulfilled\") {\n            set({ uploads: results[1].value });\n            hasAnySuccess = true;\n          } else {\n            console.warn(\n              \"Failed to load uploads (non-critical):\",\n              results[1].reason\n            );\n          }\n\n          // Handle context config result (non-critical, has defaults)\n          if (\n            results[2].status === \"fulfilled\" &&\n            results[2].value &&\n            results[2].value.success\n          ) {\n            // Ensure loaded config has proper org_id\n            const loadedConfig = {\n              ...results[2].value.config,\n              org_id:\n                results[2].value.config.org_id || `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: loadedConfig });\n            console.debug(\"✅ Context config loaded successfully\");\n            hasAnySuccess = true;\n          } else {\n            // Context config failed to load - this is expected if backend is not available\n            console.debug(\n              \"🔧 Context config not available, using built-in defaults\"\n            );\n            // Ensure default config has proper org_id\n            const defaultConfigWithOrgId = {\n              ...defaultContextConfig,\n              org_id: `user_${Date.now()}_org`,\n            };\n            set({ contextConfig: defaultConfigWithOrgId });\n          }\n\n          // Determine if initialization was successful enough\n          if (hasAnySuccess && criticalFailures === 0) {\n            set({\n              loading: false,\n              connectionStatus: connectionResult ? \"connected\" : \"partial\",\n              error: null,\n            });\n            if (!connectionResult) {\n              toast.warning(\n                \"Some features may be limited due to connectivity issues\"\n              );\n            }\n          } else if (\n            hasAnySuccess &&\n            criticalFailures > 0 &&\n            retryCount < maxRetries\n          ) {\n            // Partial success but critical failures - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to critical failures`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else if (!hasAnySuccess && retryCount < maxRetries) {\n            // Complete failure - retry\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) due to complete failure`\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1000)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            // Final failure after retries\n            throw new Error(\n              `Failed to load critical application data after ${\n                retryCount + 1\n              } attempts`\n            );\n          }\n        } catch (error) {\n          console.error(\"Error initializing store:\", error);\n          const isRetryable =\n            retryCount < maxRetries &&\n            error instanceof Error &&\n            (error.message.includes(\"network\") ||\n              error.message.includes(\"timeout\") ||\n              error.message.includes(\"fetch\"));\n\n          if (isRetryable) {\n            console.log(\n              `Retrying initialization (${\n                retryCount + 1\n              }/${maxRetries}) after error:`,\n              error.message\n            );\n            await new Promise((resolve) =>\n              setTimeout(resolve, Math.pow(2, retryCount) * 1500)\n            );\n            return get().initializeStore(retryCount + 1);\n          } else {\n            set({\n              loading: false,\n              error: `Failed to initialize application${\n                retryCount > 0 ? ` after ${retryCount + 1} attempts` : \"\"\n              }`,\n              connectionStatus: \"disconnected\",\n            });\n            toast.error(\n              \"Failed to initialize application. Please check your connection and try refreshing the page.\"\n            );\n          }\n        }\n      },\n\n      resetState: () =>\n        set(\n          {\n            loading: true,\n            saving: false,\n            activeTab: \"basic\",\n            showCreateForm: false,\n            showEmbedModal: false,\n            isEditMode: false,\n            analyticsLoading: false,\n            uploading: false,\n            currentUser: null,\n            error: null,\n            connectionStatus: \"checking\",\n            orgChatbots: [],\n            selectedChatbot: null,\n            uploads: [],\n            embedCode: \"\",\n            performanceMetrics: null,\n            conversations: [],\n            deletingChatbotId: null,\n            contextConfig: defaultContextConfig,\n            config: defaultConfig,\n            chatMessages: [],\n            currentConversationId: null,\n          },\n          false,\n          \"resetState\"\n        ),\n    }),\n    { name: \"customize-store\" }\n  )\n);\n\n// Export convenience hooks for accessing specific parts of the store\nexport const useCustomizeLoading = () =>\n  useCustomizeStore((state) => state.loading);\nexport const useCustomizeSaving = () =>\n  useCustomizeStore((state) => state.saving);\nexport const useCustomizeActiveTab = () =>\n  useCustomizeStore((state) => state.activeTab);\nexport const useCustomizeCurrentUser = () =>\n  useCustomizeStore((state) => state.currentUser);\nexport const useCustomizeOrgChatbots = () =>\n  useCustomizeStore((state) => state.orgChatbots);\nexport const useCustomizeSelectedChatbot = () =>\n  useCustomizeStore((state) => state.selectedChatbot);\nexport const useCustomizeUploads = () =>\n  useCustomizeStore((state) => state.uploads);\nexport const useCustomizeContextConfig = () =>\n  useCustomizeStore((state) => state.contextConfig);\nexport const useCustomizeConfig = () =>\n  useCustomizeStore((state) => state.config);\nexport const useCustomizePerformanceMetrics = () =>\n  useCustomizeStore((state) => state.performanceMetrics);\nexport const useCustomizeConnectionStatus = () =>\n  useCustomizeStore((state) => state.connectionStatus);\n\n// Export compound selectors for common use cases\nexport const useCustomizeActions = () =>\n  useCustomizeStore((state) => ({\n    setLoading: state.setLoading,\n    setSaving: state.setSaving,\n    setActiveTab: state.setActiveTab,\n    updateConfig: state.updateConfig,\n    updateContextConfig: state.updateContextConfig,\n    testConnection: state.testConnection,\n  }));\n\nexport const useCustomizeUIState = () =>\n  useCustomizeStore((state) => ({\n    loading: state.loading,\n    saving: state.saving,\n    activeTab: state.activeTab,\n    showCreateForm: state.showCreateForm,\n    showEmbedModal: state.showEmbedModal,\n    isEditMode: state.isEditMode,\n    analyticsLoading: state.analyticsLoading,\n    connectionStatus: state.connectionStatus,\n  }));\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1783, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/utils/errorHandling.ts"],"sourcesContent":["/**\n * Utility functions for consistent error handling across the application\n */\n\nexport interface ConnectionErrorInfo {\n  isConnectionError: boolean;\n  shouldShowToast: boolean;\n  logLevel: 'warn' | 'error';\n  message: string;\n}\n\n/**\n * Analyzes an error and determines how it should be handled\n * @param error - The error to analyze\n * @returns Information about how to handle the error\n */\nexport const analyzeError = (error: unknown): ConnectionErrorInfo => {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  \n  const isConnectionError = error instanceof Error && (\n    error.message.includes(\"Unable to connect\") ||\n    error.message.includes(\"Backend server unavailable\") ||\n    error.message.includes(\"ECONNREFUSED\") ||\n    error.message.includes(\"Failed to fetch\") ||\n    error.message.includes(\"network\") ||\n    error.message.includes(\"timeout\")\n  );\n\n  return {\n    isConnectionError,\n    shouldShowToast: !isDevelopment || !isConnectionError,\n    logLevel: isDevelopment && isConnectionError ? 'warn' : 'error',\n    message: isConnectionError ? \"Backend server unavailable\" : \"An unexpected error occurred\"\n  };\n};\n\n/**\n * Logs an error with appropriate level and detail\n * @param error - The error to log\n * @param context - Additional context for the error\n * @param info - Connection error information\n */\nexport const logError = (\n  error: unknown, \n  context: string, \n  info: ConnectionErrorInfo\n): void => {\n  if (info.logLevel === 'warn') {\n    console.warn(`${context} - backend server not available`);\n  } else {\n    console.error(`Error in ${context}:`, error);\n  }\n};\n\n/**\n * Gets a user-friendly error message from an error\n * @param error - The error to get a message from\n * @returns A user-friendly error message\n */\nexport const getUserFriendlyErrorMessage = (error: unknown): string => {\n  const info = analyzeError(error);\n  \n  if (info.isConnectionError) {\n    return \"Unable to connect to the server. Please check your connection and try again.\";\n  }\n  \n  if (error instanceof Error) {\n    return error.message;\n  }\n  \n  return \"An unexpected error occurred. Please try again.\";\n};\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;;;;AAeuB;AADjB,MAAM,eAAe,CAAC;IAC3B,MAAM,gBAAgB,oDAAyB;IAE/C,MAAM,oBAAoB,iBAAiB,SAAS,CAClD,MAAM,OAAO,CAAC,QAAQ,CAAC,wBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,iCACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,mBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,sBACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,cACvB,MAAM,OAAO,CAAC,QAAQ,CAAC,UACzB;IAEA,OAAO;QACL;QACA,iBAAiB,CAAC,iBAAiB,CAAC;QACpC,UAAU,iBAAiB,oBAAoB,SAAS;QACxD,SAAS,oBAAoB,+BAA+B;IAC9D;AACF;AAQO,MAAM,WAAW,CACtB,OACA,SACA;IAEA,IAAI,KAAK,QAAQ,KAAK,QAAQ;QAC5B,QAAQ,IAAI,CAAC,AAAC,GAAU,OAAR,SAAQ;IAC1B,OAAO;QACL,QAAQ,KAAK,CAAC,AAAC,YAAmB,OAAR,SAAQ,MAAI;IACxC;AACF;AAOO,MAAM,8BAA8B,CAAC;IAC1C,MAAM,OAAO,aAAa;IAE1B,IAAI,KAAK,iBAAiB,EAAE;QAC1B,OAAO;IACT;IAEA,IAAI,iBAAiB,OAAO;QAC1B,OAAO,MAAM,OAAO;IACtB;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1828, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/hooks/useDashboardData.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\nimport { useCustomizeStore } from '@/stores/customizeStore';\nimport { conversationApi } from '@/app/api/routes';\nimport { analyzeError, logError } from '@/utils/errorHandling';\nimport { ConversationInfo } from '@/types/schemaTypes';\n/**\n * Custom hook for optimized dashboard data loading\n * Handles sequential loading of critical data first, then secondary data\n */\nexport const useDashboardData = () => {\n  const {\n    loading,\n    analyticsLoading,\n    orgChatbots: chatbots,\n    uploads,\n    conversations,\n    performanceMetrics: analyticsMetrics,\n    connectionStatus,\n    loadChatbots,\n    loadUploads,\n    loadPerformanceMetrics,\n    setConversations,\n    testConnection,\n  } = useCustomizeStore();\n\n  // Fast conversation count for immediate display\n  const [conversationCount, setConversationCount] = useState<number>(0);\n  const [conversationCountLoading, setConversationCountLoading] = useState(false);\n\n  // Fast conversation count loading\n  const loadConversationCount = useCallback(async () => {\n    try {\n      setConversationCountLoading(true);\n      const count = await conversationApi.getConversationCount();\n      setConversationCount(count);\n    } catch (error) {\n      console.error(\"Error loading conversation count:\", error);\n      setConversationCount(0);\n    } finally {\n      setConversationCountLoading(false);\n    }\n  }, []);\n\n  // Non-blocking data loading for better dashboard performance\n  const loadDashboardData = useCallback(async () => {\n    try {\n      // Load critical data first (chatbots and uploads) for immediate UI display\n      await Promise.allSettled([\n        loadChatbots(),\n        loadUploads(),\n        loadConversationCount(), // Load conversation count immediately\n      ]);\n\n      // Load conversation details in background (much smaller sample)\n      setTimeout(async () => {\n        try {\n          const conversationPromise = conversationApi.getConversations(10); // Only 10 for dashboard\n          const timeoutPromise = new Promise((_, reject) => \n            setTimeout(() => reject(new Error('Conversation loading timeout')), 1500)\n          );\n          \n          const userConversations = await Promise.race([conversationPromise, timeoutPromise]);\n          setConversations(userConversations as ConversationInfo[]);\n        } catch (error) {\n          const errorInfo = analyzeError(error);\n          logError(error, \"loading conversations\", errorInfo);\n          setConversations([]);\n        }\n      }, 100);\n\n      // Load analytics data in background\n      setTimeout(() => {\n        loadPerformanceMetrics(7);\n      }, 200);\n    } catch (error) {\n      const errorInfo = analyzeError(error);\n      logError(error, \"loading dashboard data\", errorInfo);\n    }\n  }, [loadChatbots, loadUploads, loadConversationCount, setConversations, loadPerformanceMetrics]);\n\n  const handleRefreshAnalytics = useCallback(async () => {\n    await loadPerformanceMetrics(7);\n  }, [loadPerformanceMetrics]);\n\n  const refreshConnection = useCallback(() => {\n    testConnection();\n    loadDashboardData();\n  }, [testConnection, loadDashboardData]);\n\n  return {\n    // Data\n    loading,\n    analyticsLoading,\n    chatbots,\n    uploads,\n    conversations,\n    analyticsMetrics,\n    isOffline: connectionStatus === 'disconnected',\n    \n    // Fast conversation data\n    conversationCount,\n    conversationCountLoading,\n    \n    // Actions\n    loadDashboardData,\n    handleRefreshAnalytics,\n    refreshConnection,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAMO,MAAM,mBAAmB;;IAC9B,MAAM,EACJ,OAAO,EACP,gBAAgB,EAChB,aAAa,QAAQ,EACrB,OAAO,EACP,aAAa,EACb,oBAAoB,gBAAgB,EACpC,gBAAgB,EAChB,YAAY,EACZ,WAAW,EACX,sBAAsB,EACtB,gBAAgB,EAChB,cAAc,EACf,GAAG,IAAA,wLAAiB;IAErB,gDAAgD;IAChD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,IAAA,0MAAQ,EAAS;IACnE,MAAM,CAAC,0BAA0B,4BAA4B,GAAG,IAAA,0MAAQ,EAAC;IAEzE,kCAAkC;IAClC,MAAM,wBAAwB,IAAA,6MAAW;+DAAC;YACxC,IAAI;gBACF,4BAA4B;gBAC5B,MAAM,QAAQ,MAAM,kLAAe,CAAC,oBAAoB;gBACxD,qBAAqB;YACvB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,qCAAqC;gBACnD,qBAAqB;YACvB,SAAU;gBACR,4BAA4B;YAC9B;QACF;8DAAG,EAAE;IAEL,6DAA6D;IAC7D,MAAM,oBAAoB,IAAA,6MAAW;2DAAC;YACpC,IAAI;gBACF,2EAA2E;gBAC3E,MAAM,QAAQ,UAAU,CAAC;oBACvB;oBACA;oBACA;iBACD;gBAED,gEAAgE;gBAChE;uEAAW;wBACT,IAAI;4BACF,MAAM,sBAAsB,kLAAe,CAAC,gBAAgB,CAAC,KAAK,wBAAwB;4BAC1F,MAAM,iBAAiB,IAAI;mFAAQ,CAAC,GAAG,SACrC;2FAAW,IAAM,OAAO,IAAI,MAAM;0FAAkC;;4BAGtE,MAAM,oBAAoB,MAAM,QAAQ,IAAI,CAAC;gCAAC;gCAAqB;6BAAe;4BAClF,iBAAiB;wBACnB,EAAE,OAAO,OAAO;4BACd,MAAM,YAAY,IAAA,iLAAY,EAAC;4BAC/B,IAAA,6KAAQ,EAAC,OAAO,yBAAyB;4BACzC,iBAAiB,EAAE;wBACrB;oBACF;sEAAG;gBAEH,oCAAoC;gBACpC;uEAAW;wBACT,uBAAuB;oBACzB;sEAAG;YACL,EAAE,OAAO,OAAO;gBACd,MAAM,YAAY,IAAA,iLAAY,EAAC;gBAC/B,IAAA,6KAAQ,EAAC,OAAO,0BAA0B;YAC5C;QACF;0DAAG;QAAC;QAAc;QAAa;QAAuB;QAAkB;KAAuB;IAE/F,MAAM,yBAAyB,IAAA,6MAAW;gEAAC;YACzC,MAAM,uBAAuB;QAC/B;+DAAG;QAAC;KAAuB;IAE3B,MAAM,oBAAoB,IAAA,6MAAW;2DAAC;YACpC;YACA;QACF;0DAAG;QAAC;QAAgB;KAAkB;IAEtC,OAAO;QACL,OAAO;QACP;QACA;QACA;QACA;QACA;QACA;QACA,WAAW,qBAAqB;QAEhC,yBAAyB;QACzB;QACA;QAEA,UAAU;QACV;QACA;QACA;IACF;AACF;GAnGa;;QAcP,wLAAiB","debugId":null}},
    {"offset": {"line": 1958, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/hooks/useDashboardNavigation.ts"],"sourcesContent":["import { useCallback, useMemo } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { Bot, Upload, MessageSquare, TrendingUp } from \"lucide-react\";\nimport { QuickActionProps } from \"@/types/dashboard\";\n\nexport const useDashboardNavigation = (userId: string) => {\n  const router = useRouter();\n\n  // Memoized navigation handlers\n  const handleTrainClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/train`);\n  }, [router, userId]);\n\n  const handleCustomizeClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/customize`);\n  }, [router, userId]);\n\n  const handleChatClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/chat`);\n  }, [router, userId]);\n\n  const handleSettingsClick = useCallback(() => {\n    router.push(`/dashboard/${userId}/settings`);\n  }, [router, userId]);\n\n  // Configuration-driven quick actions\n  const quickActions = useMemo<QuickActionProps[]>(\n    () => [\n      {\n        id: \"create-chatbot\",\n        icon: Bot,\n        title: \"Create Chatbot\",\n        onClick: handleCustomizeClick,\n      },\n      {\n        id: \"upload-data\",\n        icon: Upload,\n        title: \"Upload Data\",\n        onClick: handleTrainClick,\n      },\n      {\n        id: \"test-chat\",\n        icon: MessageSquare,\n        title: \"Test Chat\",\n        onClick: handleChatClick,\n      },\n      {\n        id: \"view-analytics\",\n        icon: TrendingUp,\n        title: \"View Analytics\",\n        onClick: handleSettingsClick,\n      },\n    ],\n    [handleCustomizeClick, handleTrainClick, handleChatClick, handleSettingsClick]\n  );\n\n  return {\n    handleTrainClick,\n    handleCustomizeClick,\n    handleChatClick,\n    handleSettingsClick,\n    quickActions,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;;;;;AAGO,MAAM,yBAAyB,CAAC;;IACrC,MAAM,SAAS,IAAA,mLAAS;IAExB,+BAA+B;IAC/B,MAAM,mBAAmB,IAAA,6MAAW;gEAAC;YACnC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;+DAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,uBAAuB,IAAA,6MAAW;oEAAC;YACvC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;mEAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,kBAAkB,IAAA,6MAAW;+DAAC;YAClC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;8DAAG;QAAC;QAAQ;KAAO;IAEnB,MAAM,sBAAsB,IAAA,6MAAW;mEAAC;YACtC,OAAO,IAAI,CAAC,AAAC,cAAoB,OAAP,QAAO;QACnC;kEAAG;QAAC;QAAQ;KAAO;IAEnB,qCAAqC;IACrC,MAAM,eAAe,IAAA,yMAAO;wDAC1B,IAAM;gBACJ;oBACE,IAAI;oBACJ,MAAM,2OAAG;oBACT,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,oPAAM;oBACZ,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,6QAAa;oBACnB,OAAO;oBACP,SAAS;gBACX;gBACA;oBACE,IAAI;oBACJ,MAAM,oQAAU;oBAChB,OAAO;oBACP,SAAS;gBACX;aACD;uDACD;QAAC;QAAsB;QAAkB;QAAiB;KAAoB;IAGhF,OAAO;QACL;QACA;QACA;QACA;QACA;IACF;AACF;GA1Da;;QACI,mLAAS","debugId":null}},
    {"offset": {"line": 2062, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/hooks/useDashboardStats.ts"],"sourcesContent":["import { useMemo } from \"react\";\nimport { DashboardStats } from \"@/types/dashboard\";\n\nexport const useDashboardStats = (\n  chatbots: unknown[],\n  uploads: unknown[],\n  conversations: unknown[],\n  conversationCount?: number\n): DashboardStats => {\n  return useMemo(\n    () => ({\n      totalChatbots: chatbots.length,\n      totalUploads: uploads.length,\n      totalConversations: conversationCount || conversations.length,\n      activeUsers: 0, // This could be calculated from analytics data\n    }),\n    [chatbots.length, uploads.length, conversations.length, conversationCount]\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAGO,MAAM,oBAAoB,CAC/B,UACA,SACA,eACA;;IAEA,OAAO,IAAA,yMAAO;qCACZ,IAAM,CAAC;gBACL,eAAe,SAAS,MAAM;gBAC9B,cAAc,QAAQ,MAAM;gBAC5B,oBAAoB,qBAAqB,cAAc,MAAM;gBAC7D,aAAa;YACf,CAAC;oCACD;QAAC,SAAS,MAAM;QAAE,QAAQ,MAAM;QAAE,cAAc,MAAM;QAAE;KAAkB;AAE9E;GAfa","debugId":null}},
    {"offset": {"line": 2093, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/hooks/useUserAuth.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { supabase } from \"@/lib/supabase\";\nimport { toast } from \"sonner\";\nimport { User } from \"@/types/schemaTypes\";\nimport { User as SupabaseUser } from \"@supabase/supabase-js\";\n\nexport const useUserAuth = (userId: string, \n  setCurrentUser: (user: SupabaseUser | null) => void) => {\n  const router = useRouter();\n  const [user, setUser] = useState<User | null>(null);\n  const [isAuthLoading, setIsAuthLoading] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const checkUserAccess = async () => {\n      try {\n        setIsAuthLoading(true);\n        const {\n          data: { session },\n        } = await supabase.auth.getSession();\n\n        if (!mounted) return;\n\n        if (!session?.user) {\n          router.replace(\"/auth/login\");\n          return;\n        }\n\n        // Check if the userId in URL matches the logged-in user\n        if (session.user.id !== userId) {\n          toast.error(\"Unauthorized access\");\n          router.replace(`/dashboard/${session.user.id}`);\n          return;\n        }\n\n        const userData: User = {\n          id: session.user.id,\n          email: session.user.email || \"\",\n          name: session.user.user_metadata?.name || session.user.email || \"\",\n          display_name: session.user.user_metadata?.display_name || session.user.user_metadata?.name || session.user.email || \"\",\n        };\n\n        setUser(userData);\n        setCurrentUser(session.user);\n      } catch (error) {\n        console.error(\"Error checking user access:\", error);\n        if (mounted) {\n          router.replace(\"/auth/login\");\n        }\n      } finally {\n        if (mounted) {\n          setIsAuthLoading(false);\n        }\n      }\n    };\n\n    checkUserAccess();\n\n    return () => {\n      mounted = false;\n    };\n  }, [userId, router, setCurrentUser]);\n\n  return {\n    user,\n    isAuthLoading,\n  };\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAIO,MAAM,cAAc,CAAC,QAC1B;;IACA,MAAM,SAAS,IAAA,mLAAS;IACxB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,0MAAQ,EAAc;IAC9C,MAAM,CAAC,eAAe,iBAAiB,GAAG,IAAA,0MAAQ,EAAC;IAEnD,IAAA,2MAAS;iCAAC;YACR,IAAI,UAAU;YAEd,MAAM;yDAAkB;oBACtB,IAAI;4BAuBM,6BACQ,8BAA4C;wBAvB5D,iBAAiB;wBACjB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,sKAAQ,CAAC,IAAI,CAAC,UAAU;wBAElC,IAAI,CAAC,SAAS;wBAEd,IAAI,EAAC,oBAAA,8BAAA,QAAS,IAAI,GAAE;4BAClB,OAAO,OAAO,CAAC;4BACf;wBACF;wBAEA,wDAAwD;wBACxD,IAAI,QAAQ,IAAI,CAAC,EAAE,KAAK,QAAQ;4BAC9B,qLAAK,CAAC,KAAK,CAAC;4BACZ,OAAO,OAAO,CAAC,AAAC,cAA6B,OAAhB,QAAQ,IAAI,CAAC,EAAE;4BAC5C;wBACF;wBAEA,MAAM,WAAiB;4BACrB,IAAI,QAAQ,IAAI,CAAC,EAAE;4BACnB,OAAO,QAAQ,IAAI,CAAC,KAAK,IAAI;4BAC7B,MAAM,EAAA,8BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,kDAAA,4BAA4B,IAAI,KAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;4BAChE,cAAc,EAAA,+BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,mDAAA,6BAA4B,YAAY,OAAI,+BAAA,QAAQ,IAAI,CAAC,aAAa,cAA1B,mDAAA,6BAA4B,IAAI,KAAI,QAAQ,IAAI,CAAC,KAAK,IAAI;wBACtH;wBAEA,QAAQ;wBACR,eAAe,QAAQ,IAAI;oBAC7B,EAAE,OAAO,OAAO;wBACd,QAAQ,KAAK,CAAC,+BAA+B;wBAC7C,IAAI,SAAS;4BACX,OAAO,OAAO,CAAC;wBACjB;oBACF,SAAU;wBACR,IAAI,SAAS;4BACX,iBAAiB;wBACnB;oBACF;gBACF;;YAEA;YAEA;yCAAO;oBACL,UAAU;gBACZ;;QACF;gCAAG;QAAC;QAAQ;QAAQ;KAAe;IAEnC,OAAO;QACL;QACA;IACF;AACF;GA9Da;;QAEI,mLAAS","debugId":null}},
    {"offset": {"line": 2180, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/DashboardHeader.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, Plus } from \"lucide-react\";\nimport { DashboardHeaderProps } from \"@/types/dashboard\";\nimport { getUserFirstName } from \"@/utils/userUtils\";\n\nexport const DashboardHeader = memo<DashboardHeaderProps>(\n  ({ user, onTrainClick, onCustomizeClick }) => (\n    <header className=\"flex justify-between items-center bg-color-gradient p-8 rounded-t-xl\">\n      <div>\n        <h1 className=\"text-3xl text-white font-bold\">\n          Welcome back, {getUserFirstName(user)}!\n        </h1>\n        <p className=\"text-white mt-1\">\n          Manage your AI chatbots and training data\n        </p>\n      </div>\n      <div className=\"flex gap-2\" role=\"group\" aria-label=\"Primary actions\">\n        <Button\n          onClick={onTrainClick}\n          variant=\"outline\"\n          className=\"pointer flex items-center gap-2\"\n          aria-label=\"Add training data\"\n        >\n          <Upload className=\"h-4 w-4\" aria-hidden=\"true\" />\n          Add Training Data\n        </Button>\n        <Button\n          onClick={onCustomizeClick}\n          className=\"pointer flex items-center gap-2\"\n          aria-label=\"Create new chatbot\"\n        >\n          <Plus className=\"h-4 w-4\" aria-hidden=\"true\" />\n          Create Chatbot\n        </Button>\n      </div>\n    </header>\n  )\n);\n\nDashboardHeader.displayName = \"DashboardHeader\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;AAEA;;;;;;AAEO,MAAM,gCAAkB,IAAA,sMAAI,OACjC;QAAC,EAAE,IAAI,EAAE,YAAY,EAAE,gBAAgB,EAAE;yBACvC,8NAAC;QAAO,WAAU;;0BAChB,8NAAC;;kCACC,8NAAC;wBAAG,WAAU;;4BAAgC;4BAC7B,IAAA,iLAAgB,EAAC;4BAAM;;;;;;;kCAExC,8NAAC;wBAAE,WAAU;kCAAkB;;;;;;;;;;;;0BAIjC,8NAAC;gBAAI,WAAU;gBAAa,MAAK;gBAAQ,cAAW;;kCAClD,8NAAC,gLAAM;wBACL,SAAS;wBACT,SAAQ;wBACR,WAAU;wBACV,cAAW;;0CAEX,8NAAC,oPAAM;gCAAC,WAAU;gCAAU,eAAY;;;;;;4BAAS;;;;;;;kCAGnD,8NAAC,gLAAM;wBACL,SAAS;wBACT,WAAU;wBACV,cAAW;;0CAEX,8NAAC,8OAAI;gCAAC,WAAU;gCAAU,eAAY;;;;;;4BAAS;;;;;;;;;;;;;;;;;;;;;AAQzD,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2299, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/StatusCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { StatusCardProps } from \"@/types/dashboard\";\n\nexport const StatusCard = memo<StatusCardProps>(\n  ({\n    icon: Icon,\n    title,\n    value,\n    className = \"text-white\",\n    isLoading = false,\n  }) => (\n    <div\n      className=\"px-4 py-3 bg-color border rounded-lg pointer border-0 hover:-translate-y-1 duration-500\"\n      role=\"article\"\n      aria-label={`${title} statistics`}\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <Icon size={22} className={className} aria-hidden=\"true\" />\n          <p className=\"text-sm font-medium text-white\">{title}</p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {isLoading ? (\n            <div className=\"flex items-center space-x-1\">\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">Loading</span>\n            </div>\n          ) : (\n            <span aria-label={`${value} ${title.toLowerCase()}`}>{value}</span>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n);\n\nStatusCard.displayName = \"StatCard\";\n"],"names":[],"mappings":";;;;;AAAA;;;AAGO,MAAM,2BAAa,IAAA,sMAAI,OAC5B;QAAC,EACC,MAAM,IAAI,EACV,KAAK,EACL,KAAK,EACL,YAAY,YAAY,EACxB,YAAY,KAAK,EAClB;yBACC,8NAAC;QACC,WAAU;QACV,MAAK;QACL,cAAY,AAAC,GAAQ,OAAN,OAAM;kBAErB,cAAA,8NAAC;YAAI,WAAU;;8BACb,8NAAC;;sCACC,8NAAC;4BAAK,MAAM;4BAAI,WAAW;4BAAW,eAAY;;;;;;sCAClD,8NAAC;4BAAE,WAAU;sCAAkC;;;;;;;;;;;;8BAEjD,8NAAC;oBAAI,WAAU;8BACZ,0BACC,8NAAC;wBAAI,WAAU;;0CACb,8NAAC;gCAAI,WAAU;;;;;;0CACf,8NAAC;gCAAK,WAAU;0CAAwB;;;;;;;;;;;iFAG1C,8NAAC;wBAAK,cAAY,AAAC,GAAW,OAAT,OAAM,KAAuB,OAApB,MAAM,WAAW;kCAAO;;;;;;;;;;;;;;;;;;;;;;;;AAQlE,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2403, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/ConversationsCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { MessageSquare } from \"lucide-react\";\nimport { ConversationsCardProps } from \"@/types/dashboard\";\n\nexport const ConversationsCard = memo<ConversationsCardProps>(\n  ({\n    conversations,\n    totalConversations,\n    loading,\n    conversationCount,\n    conversationCountLoading,\n  }) => (\n    <div\n      className=\"px-4 py-3 bg-color border rounded-lg pointer border-0 hover:-translate-y-1 duration-500\"\n      role=\"article\"\n      aria-label=\"Conversations statistics\"\n    >\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <MessageSquare size={20} className=\"text-white\" aria-hidden=\"true\" />\n          <p className=\"text-sm font-medium text-white\">Conversations</p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {conversationCountLoading ? (\n            <div\n              className=\"flex items-center space-x-1\"\n              role=\"status\"\n              aria-label=\"Loading conversation count\"\n            >\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">0</span>\n            </div>\n          ) : typeof conversationCount === \"number\" && conversationCount > 0 ? (\n            <span aria-label={`${conversationCount} conversations`}>\n              {conversationCount}\n            </span>\n          ) : conversations.length > 0 ? (\n            <span aria-label={`${totalConversations} conversations`}>\n              {totalConversations}\n            </span>\n          ) : (\n            <span className=\"text-md\" aria-label=\"No conversations\">\n              0\n            </span>\n          )}\n        </div>\n      </div>\n      {!loading && conversations.length === 0 && (\n        <div className=\"mt-2 text-center\"></div>\n      )}\n    </div>\n  )\n);\n\nConversationsCard.displayName = \"ConversationsCard\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAGO,MAAM,kCAAoB,IAAA,sMAAI,OACnC;QAAC,EACC,aAAa,EACb,kBAAkB,EAClB,OAAO,EACP,iBAAiB,EACjB,wBAAwB,EACzB;yBACC,8NAAC;QACC,WAAU;QACV,MAAK;QACL,cAAW;;0BAEX,8NAAC;gBAAI,WAAU;;kCACb,8NAAC;;0CACC,8NAAC,6QAAa;gCAAC,MAAM;gCAAI,WAAU;gCAAa,eAAY;;;;;;0CAC5D,8NAAC;gCAAE,WAAU;0CAAiC;;;;;;;;;;;;kCAEhD,8NAAC;wBAAI,WAAU;kCACZ,yCACC,8NAAC;4BACC,WAAU;4BACV,MAAK;4BACL,cAAW;;8CAEX,8NAAC;oCAAI,WAAU;;;;;;8CACf,8NAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;uEAExC,OAAO,sBAAsB,YAAY,oBAAoB,kBAC/D,8NAAC;4BAAK,cAAY,AAAC,GAAoB,OAAlB,mBAAkB;sCACpC;;;;;uEAED,cAAc,MAAM,GAAG,kBACzB,8NAAC;4BAAK,cAAY,AAAC,GAAqB,OAAnB,oBAAmB;sCACrC;;;;;qFAGH,8NAAC;4BAAK,WAAU;4BAAU,cAAW;sCAAmB;;;;;;;;;;;;;;;;;YAM7D,CAAC,WAAW,cAAc,MAAM,KAAK,mBACpC,8NAAC;gBAAI,WAAU;;;;;;;;;;;;;;AAMvB,kBAAkB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2535, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/TokenUsageCard.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Zap } from \"lucide-react\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { Progress } from \"@/components/ui/progress\";\n\ninterface TokenUsageCardProps {\n  className?: string;\n}\n\nexport const TokenUsageCard = memo<TokenUsageCardProps>(({ className }) => {\n  const { subscription, isLoading } = useSubscription();\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const getUsagePercentage = () => {\n    if (!subscription) return 0;\n    return subscription.usage_percentage;\n  };\n\n  const getStatusColor = () => {\n    const percentage = getUsagePercentage();\n    if (percentage >= 95) return \"text-red-400\";\n    if (percentage >= 80) return \"text-yellow-400\";\n    return \"text-green-400\";\n  };\n\n  return (\n    <div\n      className={`px-4 py-3 bg-color border rounded-lg pointer border-0 hover:-translate-y-1 duration-500 ${\n        className || \"\"\n      }`}\n      role=\"article\"\n      aria-label=\"Token usage statistics\"\n    >\n      <div className=\"flex items-center justify-between mb-2\">\n        <div>\n          <Zap size={20} className=\"text-white\" aria-hidden=\"true\" />\n          <p className=\"text-sm font-medium text-white\">Token Usage</p>\n        </div>\n        <div className=\"text-xl glass shadow-xl font-bold px-4 py-1 rounded-lg text-white\">\n          {isLoading ? (\n            <div\n              className=\"flex items-center space-x-1\"\n              role=\"status\"\n              aria-label=\"Loading token usage\"\n            >\n              <div className=\"animate-pulse bg-white/30 rounded-full w-4 h-4\" />\n              <span className=\"text-sm animate-pulse\">0%</span>\n            </div>\n          ) : subscription ? (\n            <span\n              className={getStatusColor()}\n              aria-label={`${getUsagePercentage().toFixed(1)}% token usage`}\n            >\n              {getUsagePercentage().toFixed(1)}%\n            </span>\n          ) : (\n            <span className=\"text-md\" aria-label=\"No subscription\">\n              0%\n            </span>\n          )}\n        </div>\n      </div>\n\n      {subscription && (\n        <div className=\"space-y-2\">\n          <div className=\"flex justify-between text-xs text-white/80\">\n            <span>\n              {formatNumber(subscription.tokens_used_this_month)} used\n            </span>\n            <span>{formatNumber(subscription.monthly_limit)} limit</span>\n          </div>\n          <Progress\n            value={getUsagePercentage()}\n            className=\"h-2 bg-white/20\"\n            style={{ backgroundColor: \"#ffffff20\" }}\n          />\n          <div className=\"flex justify-between text-xs text-white/60\">\n            <span>{formatNumber(subscription.tokens_remaining)} remaining</span>\n            <span className={getStatusColor()}>\n              {getUsagePercentage() >= 95\n                ? \"Critical\"\n                : getUsagePercentage() >= 80\n                ? \"Warning\"\n                : \"Healthy\"}\n            </span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n\nTokenUsageCard.displayName = \"TokenUsageCard\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;;AAMO,MAAM,+BAAiB,GAAA,IAAA,sMAAI,UAAsB;QAAC,EAAE,SAAS,EAAE;;IACpE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,IAAA,8LAAe;IAEnD,MAAM,eAAe,CAAC;QACpB,OAAO,IAAI,KAAK,YAAY,GAAG,MAAM,CAAC;IACxC;IAEA,MAAM,qBAAqB;QACzB,IAAI,CAAC,cAAc,OAAO;QAC1B,OAAO,aAAa,gBAAgB;IACtC;IAEA,MAAM,iBAAiB;QACrB,MAAM,aAAa;QACnB,IAAI,cAAc,IAAI,OAAO;QAC7B,IAAI,cAAc,IAAI,OAAO;QAC7B,OAAO;IACT;IAEA,qBACE,8NAAC;QACC,WAAW,AAAC,2FAEX,OADC,aAAa;QAEf,MAAK;QACL,cAAW;;0BAEX,8NAAC;gBAAI,WAAU;;kCACb,8NAAC;;0CACC,8NAAC,2OAAG;gCAAC,MAAM;gCAAI,WAAU;gCAAa,eAAY;;;;;;0CAClD,8NAAC;gCAAE,WAAU;0CAAiC;;;;;;;;;;;;kCAEhD,8NAAC;wBAAI,WAAU;kCACZ,0BACC,8NAAC;4BACC,WAAU;4BACV,MAAK;4BACL,cAAW;;8CAEX,8NAAC;oCAAI,WAAU;;;;;;8CACf,8NAAC;oCAAK,WAAU;8CAAwB;;;;;;;;;;;uEAExC,6BACF,8NAAC;4BACC,WAAW;4BACX,cAAY,AAAC,GAAkC,OAAhC,qBAAqB,OAAO,CAAC,IAAG;;gCAE9C,qBAAqB,OAAO,CAAC;gCAAG;;;;;;qFAGnC,8NAAC;4BAAK,WAAU;4BAAU,cAAW;sCAAkB;;;;;;;;;;;;;;;;;YAO5D,8BACC,8NAAC;gBAAI,WAAU;;kCACb,8NAAC;wBAAI,WAAU;;0CACb,8NAAC;;oCACE,aAAa,aAAa,sBAAsB;oCAAE;;;;;;;0CAErD,8NAAC;;oCAAM,aAAa,aAAa,aAAa;oCAAE;;;;;;;;;;;;;kCAElD,8NAAC,oLAAQ;wBACP,OAAO;wBACP,WAAU;wBACV,OAAO;4BAAE,iBAAiB;wBAAY;;;;;;kCAExC,8NAAC;wBAAI,WAAU;;0CACb,8NAAC;;oCAAM,aAAa,aAAa,gBAAgB;oCAAE;;;;;;;0CACnD,8NAAC;gCAAK,WAAW;0CACd,wBAAwB,KACrB,aACA,wBAAwB,KACxB,YACA;;;;;;;;;;;;;;;;;;;;;;;;AAOlB;;QAnFsC,8LAAe;;;;QAAf,8LAAe;;;;AAqFrD,eAAe,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2761, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/types/dashboard.ts"],"sourcesContent":["import { LucideIcon } from \"lucide-react\";\nimport { IconType } from \"react-icons\";\n\n// Dashboard Statistics Interface\nexport interface DashboardStats {\n  totalChatbots: number;\n  totalUploads: number;\n  totalConversations: number;\n  activeUsers: number;\n}\n\n// Component Props Interfaces\nexport interface StatusCardProps {\n  icon: LucideIcon | IconType;\n  title: string;\n  value: number;\n  className?: string;\n  isLoading?: boolean;\n}\n\nexport interface ConversationsCardProps {\n  conversationsLoaded: boolean;\n  conversations: unknown[];\n  totalConversations: number;\n  loading: boolean;\n  conversationCount?: number;\n  conversationCountLoading?: boolean;\n  onCreateClick: () => void;\n}\n\nexport interface DashboardHeaderProps {\n  user: {\n    id: string;\n    email: string;\n    name?: string;\n  } | null;\n  userId: string;\n  onTrainClick: () => void;\n  onCustomizeClick: () => void;\n}\n\nexport interface QuickActionProps {\n  id: string;\n  icon: LucideIcon;\n  title: string;\n  onClick: () => void;\n}\n\nexport interface QuickActionsGridProps {\n  actions: QuickActionProps[];\n}\n\nexport interface StatusGridProps {\n  stats: DashboardStats;\n  conversationsLoaded: boolean;\n  conversations: unknown[];\n  loading: boolean;\n  conversationCount?: number;\n  conversationCountLoading?: boolean;\n  onCreateConversation: () => void;\n}\n\n// Dashboard Configuration\nexport const DASHBOARD_CONFIG = {\n  SKELETON_ITEMS_COUNT: 4,\n  STATS_GRID_CLASSES: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6\",\n  QUICK_ACTIONS_GRID_CLASSES: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\",\n  CONTAINER_CLASSES: \"mx-auto ml-[4.5vw] bg-gradient-to-b from-[#dbeafe] to-white rounded-3xl space-y-6 shadow-lg\",\n} as const;\n\n// Dashboard Sections for better organization\nexport enum DashboardSection {\n  HEADER = \"header\",\n  STATS = \"stats\", \n  ANALYTICS = \"analytics\",\n  QUICK_ACTIONS = \"quickActions\",\n}\n\n// Error types for better error handling\nexport interface DashboardError {\n  section: DashboardSection;\n  message: string;\n  code?: string;\n}\n"],"names":[],"mappings":";;;;;;AA+DO,MAAM,mBAAmB;IAC9B,sBAAsB;IACtB,oBAAoB;IACpB,4BAA4B;IAC5B,mBAAmB;AACrB;AAGO,IAAA,AAAK,0CAAA;;;;;WAAA","debugId":null}},
    {"offset": {"line": 2787, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/StatusGrid.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Brain } from \"lucide-react\";\nimport { RiRobot3Line } from \"react-icons/ri\";\nimport { StatusCard } from \"./StatusCard\";\nimport { ConversationsCard } from \"./ConversationsCard\";\nimport { TokenUsageCard } from \"./TokenUsageCard\";\nimport { StatusGridProps, DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nexport const StatusGrid = memo<StatusGridProps>(\n  ({\n    stats,\n    conversationsLoaded,\n    conversations,\n    loading,\n    conversationCount,\n    conversationCountLoading,\n    onCreateConversation,\n  }) => (\n    <section\n      aria-label=\"Dashboard Statistics\"\n      className={DASHBOARD_CONFIG.STATS_GRID_CLASSES}\n    >\n      {/* <h2 className=\"text-gray-500 font-bold sr-only\">Dashboard Statistics</h2> */}\n\n      <StatusCard\n        icon={RiRobot3Line}\n        title=\"Total Chatbots\"\n        value={stats.totalChatbots}\n      />\n\n      <StatusCard\n        icon={Brain}\n        title=\"Training Files\"\n        value={stats.totalUploads}\n        className=\"glass-b text-white\"\n      />\n\n      <ConversationsCard\n        conversationsLoaded={conversationsLoaded}\n        conversations={conversations}\n        totalConversations={stats.totalConversations}\n        loading={loading}\n        conversationCount={conversationCount}\n        conversationCountLoading={conversationCountLoading}\n        onCreateClick={onCreateConversation}\n      />\n\n      <TokenUsageCard />\n    </section>\n  )\n);\n\nStatusGrid.displayName = \"StatusGrid\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AAEO,MAAM,2BAAa,IAAA,sMAAI,OAC5B;QAAC,EACC,KAAK,EACL,mBAAmB,EACnB,aAAa,EACb,OAAO,EACP,iBAAiB,EACjB,wBAAwB,EACxB,oBAAoB,EACrB;yBACC,8NAAC;QACC,cAAW;QACX,WAAW,iLAAgB,CAAC,kBAAkB;;0BAI9C,8NAAC,uMAAU;gBACT,MAAM,kMAAY;gBAClB,OAAM;gBACN,OAAO,MAAM,aAAa;;;;;;0BAG5B,8NAAC,uMAAU;gBACT,MAAM,iPAAK;gBACX,OAAM;gBACN,OAAO,MAAM,YAAY;gBACzB,WAAU;;;;;;0BAGZ,8NAAC,qNAAiB;gBAChB,qBAAqB;gBACrB,eAAe;gBACf,oBAAoB,MAAM,kBAAkB;gBAC5C,SAAS;gBACT,mBAAmB;gBACnB,0BAA0B;gBAC1B,eAAe;;;;;;0BAGjB,8NAAC,+MAAc;;;;;;;;;;;;;AAKrB,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2869, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/QuickActionsGrid.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { QuickActionsGridProps, DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nconst QuickActionButton = memo<{\n  icon: React.ComponentType<{ className?: string }>;\n  title: string;\n  onClick: () => void;\n}>(({ icon: Icon, title, onClick }) => (\n  <Button\n    variant=\"outline\"\n    className=\"h-20 flex flex-col gap-2\"\n    onClick={onClick}\n    aria-label={title}\n  >\n    <Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\n    <span>{title}</span>\n  </Button>\n));\nQuickActionButton.displayName = \"QuickActionButton\";\n\nexport const QuickActionsGrid = memo<QuickActionsGridProps>(({ actions }) => (\n  <Card className=\"mt-8\">\n    <CardHeader>\n      <CardTitle>Quick Actions</CardTitle>\n    </CardHeader>\n    <CardContent>\n      <nav\n        aria-label=\"Quick Actions\"\n        className={DASHBOARD_CONFIG.QUICK_ACTIONS_GRID_CLASSES}\n      >\n        {actions.map(({ id, icon, title, onClick }) => (\n          <QuickActionButton\n            key={id}\n            icon={icon}\n            title={title}\n            onClick={onClick}\n          />\n        ))}\n      </nav>\n    </CardContent>\n  </Card>\n));\n\nQuickActionsGrid.displayName = \"QuickActionsGrid\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA,MAAM,kCAAoB,IAAA,sMAAI,EAI3B;QAAC,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;yBAChC,8NAAC,gLAAM;QACL,SAAQ;QACR,WAAU;QACV,SAAS;QACT,cAAY;;0BAEZ,8NAAC;gBAAK,WAAU;gBAAU,eAAY;;;;;;0BACtC,8NAAC;0BAAM;;;;;;;;;;;;;KAZL;AAeN,kBAAkB,WAAW,GAAG;AAEzB,MAAM,iCAAmB,IAAA,sMAAI,QAAwB;QAAC,EAAE,OAAO,EAAE;yBACtE,8NAAC,4KAAI;QAAC,WAAU;;0BACd,8NAAC,kLAAU;0BACT,cAAA,8NAAC,iLAAS;8BAAC;;;;;;;;;;;0BAEb,8NAAC,mLAAW;0BACV,cAAA,8NAAC;oBACC,cAAW;oBACX,WAAW,iLAAgB,CAAC,0BAA0B;8BAErD,QAAQ,GAAG,CAAC;4BAAC,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;6CACxC,8NAAC;4BAEC,MAAM;4BACN,OAAO;4BACP,SAAS;2BAHJ;;;;;;;;;;;;;;;;;;;;;;;;AAWjB,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2979, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/LoadingSkeleton.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nexport const LoadingSkeleton = memo(() => (\n  <div\n    className={DASHBOARD_CONFIG.CONTAINER_CLASSES}\n    role=\"status\"\n    aria-label=\"Loading dashboard\"\n  >\n    <div className=\"animate-pulse space-y-6\">\n      {/* Header skeleton */}\n      <div className=\"flex justify-between items-center\">\n        <div className=\"space-y-2\">\n          <div className=\"h-8 bg-gray-200 rounded w-64\" />\n          <div className=\"h-4 bg-gray-200 rounded w-48\" />\n        </div>\n        <div className=\"flex gap-2\">\n          <div className=\"h-10 bg-gray-200 rounded w-32\" />\n          <div className=\"h-10 bg-gray-200 rounded w-32\" />\n        </div>\n      </div>\n\n      {/* Stats cards skeleton */}\n      <div className={DASHBOARD_CONFIG.STATS_GRID_CLASSES}>\n        {Array.from(\n          { length: DASHBOARD_CONFIG.SKELETON_ITEMS_COUNT },\n          (_, i) => (\n            <div key={i} className=\"h-24 bg-gray-200 rounded-lg\" />\n          )\n        )}\n      </div>\n\n      {/* Content skeleton */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <div className=\"h-96 bg-gray-200 rounded-lg\" />\n        <div className=\"h-96 bg-gray-200 rounded-lg\" />\n      </div>\n    </div>\n  </div>\n));\n\nLoadingSkeleton.displayName = \"LoadingSkeleton\";\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AAEO,MAAM,gCAAkB,IAAA,sMAAI,OAAC,kBAClC,8NAAC;QACC,WAAW,iLAAgB,CAAC,iBAAiB;QAC7C,MAAK;QACL,cAAW;kBAEX,cAAA,8NAAC;YAAI,WAAU;;8BAEb,8NAAC;oBAAI,WAAU;;sCACb,8NAAC;4BAAI,WAAU;;8CACb,8NAAC;oCAAI,WAAU;;;;;;8CACf,8NAAC;oCAAI,WAAU;;;;;;;;;;;;sCAEjB,8NAAC;4BAAI,WAAU;;8CACb,8NAAC;oCAAI,WAAU;;;;;;8CACf,8NAAC;oCAAI,WAAU;;;;;;;;;;;;;;;;;;8BAKnB,8NAAC;oBAAI,WAAW,iLAAgB,CAAC,kBAAkB;8BAChD,MAAM,IAAI,CACT;wBAAE,QAAQ,iLAAgB,CAAC,oBAAoB;oBAAC,GAChD,CAAC,GAAG,kBACF,8NAAC;4BAAY,WAAU;2BAAb;;;;;;;;;;8BAMhB,8NAAC;oBAAI,WAAU;;sCACb,8NAAC;4BAAI,WAAU;;;;;;sCACf,8NAAC;4BAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAMvB,gBAAgB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 3113, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/components/dashboard/home/SubscriptionAnalyticsWidget.tsx"],"sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useSubscription } from \"@/contexts/SubscriptionContext\";\nimport { subscriptionApi } from \"@/app/api/subscription\";\nimport {\n  Zap,\n  Calendar,\n  AlertTriangle,\n  Loader2,\n  RefreshCw,\n  Bug,\n} from \"lucide-react\";\n\ninterface SubscriptionAnalyticsWidgetProps {\n  className?: string;\n}\n\nexport const SubscriptionAnalyticsWidget: React.FC<\n  SubscriptionAnalyticsWidgetProps\n> = ({ className }) => {\n  const { subscription, isLoading, error, refreshSubscription } =\n    useSubscription();\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const formatPercentage = (num: number) => {\n    return `${num.toFixed(1)}%`;\n  };\n\n  if (isLoading) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"flex items-center justify-center space-x-2\">\n            <Loader2 className=\"h-5 w-5 animate-spin\" />\n            <span className=\"text-sm\">Loading subscription...</span>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <Alert variant=\"destructive\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription className=\"flex items-center justify-between\">\n              <span>{error}</span>\n              <RefreshCw\n                className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform\"\n                onClick={refreshSubscription}\n              />\n            </AlertDescription>\n          </Alert>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (!subscription) {\n    return (\n      <Card className={className}>\n        <CardContent className=\"p-6\">\n          <div className=\"text-center text-gray-500\">\n            <Zap className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p className=\"text-sm\">No subscription found</p>\n            <p className=\"text-xs mt-1\">\n              Please contact admin to set up your subscription\n            </p>\n            <div className=\"mt-3 flex gap-2 justify-center\">\n              <button\n                onClick={async () => {\n                  console.log(\"🔍 Debug: Testing subscription endpoints...\");\n                  await subscriptionApi.debugSubscriptionEndpoints();\n                }}\n                className=\"px-3 py-1 text-xs bg-gray-100 hover:bg-gray-200 rounded-md flex items-center gap-1\"\n              >\n                <Bug className=\"h-3 w-3\" />\n                Debug Subscription\n              </button>\n              <button\n                onClick={async () => {\n                  console.log(\"🔍 Testing backend health...\");\n                  try {\n                    const response = await fetch(\"http://localhost:8001/\");\n                    console.log(\n                      \"Backend health check:\",\n                      response.ok,\n                      response.status\n                    );\n                    if (response.ok) {\n                      const data = await response.text();\n                      console.log(\"Backend response:\", data);\n                    } else {\n                      console.error(\"Backend not responding:\", response.status);\n                    }\n                  } catch (error) {\n                    console.error(\"Backend connection failed:\", error);\n                  }\n                }}\n                className=\"px-3 py-1 text-xs bg-blue-100 hover:bg-blue-200 rounded-md flex items-center gap-1\"\n              >\n                <RefreshCw className=\"h-3 w-3\" />\n                Test Backend\n              </button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const usagePercentage = subscription.usage_percentage;\n  const isNearLimit = usagePercentage >= 80;\n  const isAtLimit = usagePercentage >= 95;\n\n  const getStatusBadge = () => {\n    if (isAtLimit)\n      return <Badge className=\"bg-red-100 text-red-800\">At Limit</Badge>;\n    if (isNearLimit)\n      return (\n        <Badge className=\"bg-yellow-100 text-yellow-800\">Near Limit</Badge>\n      );\n    return <Badge className=\"bg-green-100 text-green-800\">Healthy</Badge>;\n  };\n\n  return (\n    <Card className={className}>\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center justify-between text-lg\">\n          <span className=\"flex items-center\">\n            <Zap className=\"h-5 w-5 mr-2 text-blue-500\" />\n            Subscription Status\n          </span>\n          <RefreshCw\n            className=\"h-4 w-4 cursor-pointer hover:rotate-180 transition-transform text-gray-400\"\n            onClick={refreshSubscription}\n          />\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Plan Information */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <p className=\"text-sm text-gray-600\">Current Plan</p>\n            <p className=\"text-lg font-semibold\">\n              {subscription.plan_name || \"Basic Plan\"}\n            </p>\n          </div>\n          {getStatusBadge()}\n        </div>\n\n        {/* Token Usage */}\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-gray-600\">Token Usage</span>\n            <span className=\"font-medium\">\n              {formatNumber(subscription.tokens_used_this_month)} /{\" \"}\n              {formatNumber(subscription.monthly_limit)}\n            </span>\n          </div>\n          <Progress value={usagePercentage} className=\"h-2\" />\n          <div className=\"flex items-center justify-between text-xs text-gray-500\">\n            <span>{formatPercentage(usagePercentage)} used</span>\n            <span>{formatNumber(subscription.tokens_remaining)} remaining</span>\n          </div>\n        </div>\n\n        {/* Billing Cycle */}\n        <div className=\"flex items-center justify-between text-sm\">\n          <div className=\"flex items-center text-gray-600\">\n            <Calendar className=\"h-4 w-4 mr-1\" />\n            <span>Resets</span>\n          </div>\n          <span className=\"font-medium\">\n            {new Date(subscription.reset_date).toLocaleDateString()}\n          </span>\n        </div>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default SubscriptionAnalyticsWidget;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3613, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy/frontend/src/app/dashboard/%5BuserId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, Suspense } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport dynamic from \"next/dynamic\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport { WifiOff, RefreshCw } from \"lucide-react\";\nimport ErrorBoundary, { SimpleErrorFallback } from \"@/components/ErrorBoundary\";\nimport { useCustomizeStore } from \"@/stores/customizeStore\";\nimport { useDashboardData } from \"@/hooks/useDashboardData\";\nimport { useDashboardNavigation } from \"@/hooks/useDashboardNavigation\";\nimport { useDashboardStats } from \"@/hooks/useDashboardStats\";\nimport { useUserAuth } from \"@/hooks/useUserAuth\";\nimport { DashboardHeader } from \"@/components/dashboard/home/DashboardHeader\";\nimport { StatusGrid } from \"@/components/dashboard/home/StatusGrid\";\nimport { QuickActionsGrid } from \"@/components/dashboard/home/QuickActionsGrid\";\nimport { LoadingSkeleton } from \"@/components/dashboard/home/LoadingSkeleton\";\nimport { SubscriptionAnalyticsWidget } from \"@/components/dashboard/home/SubscriptionAnalyticsWidget\";\nimport { DASHBOARD_CONFIG } from \"@/types/dashboard\";\n\nconst DevModeAlert = dynamic(() => import(\"@/components/DevModeAlert\"), {\n  ssr: false,\n});\n\n// Lazy load components with optimized loading states\nconst AnalyticsDashboard = dynamic(\n  () => import(\"@/components/dashboard/home/AnalyticsDashboard\"),\n  {\n    loading: () => <LoadingSkeleton />,\n    ssr: false,\n  }\n);\n\nconst PerformanceMonitor = dynamic(\n  () => import(\"@/components/PerformanceMonitor\"),\n  {\n    ssr: false,\n  }\n);\n\nconst OfflineMode = dynamic(\n  () => import(\"@/components/dashboard/home/OfflineMode\"),\n  {\n    ssr: false,\n  }\n);\n\nexport default function UserDashboard() {\n  const { userId } = useParams();\n  const userIdString = userId as string;\n\n  // Custom hooks for separation of concerns\n  const { setCurrentUser } = useCustomizeStore();\n  const { user, isAuthLoading } = useUserAuth(userIdString, setCurrentUser);\n  const { quickActions, handleCustomizeClick, handleTrainClick } =\n    useDashboardNavigation(userIdString);\n\n  const {\n    loading,\n    analyticsLoading,\n    chatbots,\n    uploads,\n    conversations,\n    analyticsMetrics,\n    isOffline,\n    conversationCount,\n    conversationCountLoading,\n    loadDashboardData,\n    handleRefreshAnalytics,\n    refreshConnection,\n  } = useDashboardData();\n\n  const stats = useDashboardStats(\n    chatbots,\n    uploads,\n    conversations,\n    conversationCount\n  );\n  const [conversationsLoaded, setConversationsLoaded] = useState(false);\n\n  // Load dashboard data after user authentication with a small delay\n  useEffect(() => {\n    if (user && !isAuthLoading) {\n      // Add a small delay to ensure authentication is fully complete\n      const timer = setTimeout(() => {\n        loadDashboardData();\n      }, 100);\n\n      return () => clearTimeout(timer);\n    }\n  }, [user, isAuthLoading, loadDashboardData]);\n\n  // Track conversation loading state for better UX\n  useEffect(() => {\n    if (conversations.length > 0) {\n      setConversationsLoaded(true);\n    }\n  }, [conversations.length]);\n\n  // Early returns for loading and authentication states\n  if (isAuthLoading || loading) {\n    return <LoadingSkeleton />;\n  }\n\n  // Show offline mode if we can't connect to the server\n  if (isOffline) {\n    return <OfflineMode onRetry={refreshConnection} isRetrying={loading} />;\n  }\n\n  return (\n    <div\n      className={DASHBOARD_CONFIG.CONTAINER_CLASSES}\n      role=\"main\"\n      aria-label=\"User Dashboard\"\n    >\n      <PerformanceMonitor name=\"Dashboard Render\" />\n\n      {/* Development Mode Alert */}\n      <DevModeAlert show={isOffline} />\n\n      {/* Offline Status Banner */}\n      {isOffline && (\n        <Alert variant=\"destructive\" role=\"alert\">\n          <WifiOff className=\"h-4 w-4\" aria-hidden=\"true\" />\n          <AlertDescription className=\"flex items-center justify-between\">\n            <span>\n              Unable to connect to server. Some features may not work properly.\n            </span>\n            <Button\n              size=\"sm\"\n              variant=\"outline\"\n              onClick={refreshConnection}\n              className=\"ml-4\"\n              aria-label=\"Retry connection\"\n            >\n              <RefreshCw className=\"h-4 w-4 mr-1\" aria-hidden=\"true\" />\n              Retry\n            </Button>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Dashboard Header */}\n      <DashboardHeader\n        user={user}\n        userId={userIdString}\n        onTrainClick={handleTrainClick}\n        onCustomizeClick={handleCustomizeClick}\n      />\n      <div className=\"p-8\">\n        {/* Stats Grid */}\n        <StatusGrid\n          stats={stats}\n          conversationsLoaded={conversationsLoaded}\n          conversations={conversations}\n          loading={loading}\n          conversationCount={conversationCount}\n          conversationCountLoading={conversationCountLoading}\n          onCreateConversation={handleCustomizeClick}\n        />\n\n        {/* Analytics Dashboard */}\n        <ErrorBoundary fallback={SimpleErrorFallback}>\n          <Suspense fallback={<LoadingSkeleton />}>\n            <AnalyticsDashboard\n              metrics={analyticsMetrics}\n              onRefresh={handleRefreshAnalytics}\n              loading={analyticsLoading}\n            />\n          </Suspense>\n        </ErrorBoundary>\n\n        {/* Subscription Analytics */}\n        <ErrorBoundary fallback={SimpleErrorFallback}>\n          <Suspense fallback={<LoadingSkeleton />}>\n            <SubscriptionAnalyticsWidget />\n          </Suspense>\n        </ErrorBoundary>\n\n        {/* Quick Actions */}\n        <QuickActionsGrid actions={quickActions} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}