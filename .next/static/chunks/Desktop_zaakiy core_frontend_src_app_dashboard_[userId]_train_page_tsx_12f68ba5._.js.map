{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/jithinjacob/Desktop/zaakiy%20core/frontend/src/app/dashboard/%5BuserId%5D/train/page.tsx"],"sourcesContent":["\"use client\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { supabase } from \"@/lib/supabase\";\nimport axios, { AxiosError } from \"axios\";\nimport {\n  Upload,\n  RefreshCw,\n  Trash2,\n  AlertCircle,\n  CheckCircle,\n  Clock,\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\n\ntype UploadItem = {\n  id: string;\n  type: string;\n  source: string;\n  status: string;\n  created_at: string;\n  error_message?: string;\n};\n\nexport default function IngestPage() {\n  const [tab, setTab] = useState<\"pdf\" | \"url\" | \"json\">(\"pdf\");\n  const [file, setFile] = useState<File | null>(null);\n  const [url, setUrl] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [uploads, setUploads] = useState<UploadItem[]>([]);\n  const [deleteStatus, setDeleteStatus] = useState<{ [key: string]: string }>(\n    {}\n  );\n  const [isUploading, setIsUploading] = useState(false);\n  const [isLoadingUploads, setIsLoadingUploads] = useState(true);\n  const [loadingMessage, setLoadingMessage] = useState(\"Loading uploads...\");\n\n  const API_BASE = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8001\";\n\n  const getAuthHeaders = async () => {\n    const {\n      data: { session },\n    } = await supabase.auth.getSession();\n\n    if (!session?.access_token) {\n      throw new Error(\"Not authenticated. Please log in again.\");\n    }\n\n    return {\n      Authorization: `Bearer ${session.access_token}`,\n    };\n  };\n\n  const handleSubmit = async () => {\n    if (isUploading) return;\n\n    setIsUploading(true);\n    setStatus(\"Processing...\");\n\n    try {\n      const headers = await getAuthHeaders();\n\n      if (tab === \"pdf\" || tab === \"json\") {\n        if (!file) {\n          setStatus(\"No file selected\");\n          return;\n        }\n\n        // Validate file size (10MB limit)\n        const maxSize = 10 * 1024 * 1024; // 10MB in bytes\n        if (file.size > maxSize) {\n          setStatus(\"File size exceeds 10MB limit\");\n          return;\n        }\n\n        // Validate file type\n        const allowedTypes = {\n          pdf: [\"application/pdf\"],\n          json: [\"application/json\", \"text/json\"],\n        };\n\n        if (!allowedTypes[tab].includes(file.type)) {\n          setStatus(\n            `Invalid file type. Please select a ${tab.toUpperCase()} file.`\n          );\n          return;\n        }\n\n        console.log(\n          \"Uploading file:\",\n          file.name,\n          \"Size:\",\n          file.size,\n          \"Type:\",\n          file.type\n        );\n\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        const response = await axios.post(\n          `${API_BASE}/api/uploads/${tab}`,\n          formData,\n          {\n            headers: {\n              ...headers,\n              // Don't set Content-Type for FormData, let browser handle it\n            },\n            timeout: 60000, // Increased timeout for large files\n            onUploadProgress: (progressEvent) => {\n              const percentCompleted = Math.round(\n                (progressEvent.loaded * 100) / (progressEvent.total || 1)\n              );\n              setStatus(`Uploading... ${percentCompleted}%`);\n            },\n          }\n        );\n\n        console.log(\"Upload response:\", response.data);\n        setStatus(\n          `${tab.toUpperCase()} uploaded successfully! Upload ID: ${\n            response.data.upload_id || response.data.id\n          }`\n        );\n      } else if (tab === \"url\") {\n        if (!url.trim()) {\n          setStatus(\"URL required\");\n          return;\n        }\n\n        // Basic URL validation\n        try {\n          new URL(url);\n        } catch {\n          setStatus(\"Please enter a valid URL\");\n          return;\n        }\n\n        console.log(\"Submitting URL:\", url);\n\n        const response = await axios.post(\n          `${API_BASE}/api/uploads/url`,\n          { url: url.trim() },\n          {\n            headers,\n            timeout: 30000,\n          }\n        );\n\n        console.log(\"URL response:\", response.data);\n        setStatus(\n          `URL registered for ingestion! Upload ID: ${\n            response.data.upload_id || response.data.id\n          }`\n        );\n      }\n\n      // Clear form\n      setFile(null);\n      setUrl(\"\");\n\n      // Reset file input\n      const fileInput = document.getElementById(\n        \"file-upload\"\n      ) as HTMLInputElement;\n      if (fileInput) fileInput.value = \"\";\n\n      // Refresh uploads list after a short delay\n      setTimeout(() => {\n        fetchUploads();\n      }, 1000);\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n\n      let errorMessage = \"Unknown error occurred\";\n\n      if (axios.isAxiosError(error)) {\n        const axiosError = error as AxiosError<{\n          detail?: string;\n          message?: string;\n        }>;\n\n        if (axiosError.response) {\n          console.log(\"Response status:\", axiosError.response.status);\n          console.log(\"Response data:\", axiosError.response.data);\n\n          if (axiosError.response.data?.detail) {\n            errorMessage = axiosError.response.data.detail;\n          } else if (axiosError.response.data?.message) {\n            errorMessage = axiosError.response.data.message;\n          } else if (typeof axiosError.response.data === \"string\") {\n            errorMessage = axiosError.response.data;\n          } else {\n            errorMessage = `Server error (${axiosError.response.status})`;\n          }\n        } else if (axiosError.request) {\n          errorMessage =\n            \"Cannot connect to server - check if backend is running\";\n        } else if (axiosError.message) {\n          errorMessage = axiosError.message;\n        }\n      } else if (error instanceof Error) {\n        errorMessage = error.message;\n      }\n\n      setStatus(`Error: ${errorMessage}`);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const handleDelete = async (uploadId: string) => {\n    if (\n      !window.confirm(\n        \"Are you sure you want to delete this upload? This will also remove all associated vectors from the knowledge base.\"\n      )\n    ) {\n      return;\n    }\n\n    setDeleteStatus((prev) => ({ ...prev, [uploadId]: \"Deleting...\" }));\n\n    try {\n      const headers = await getAuthHeaders();\n      console.log(\"Deleting upload:\", uploadId);\n\n      const response = await axios.delete(\n        `${API_BASE}/api/uploads/${uploadId}`,\n        {\n          headers,\n          timeout: 30000,\n        }\n      );\n\n      console.log(\"Delete response:\", response.data);\n\n      setDeleteStatus((prev) => ({\n        ...prev,\n        [uploadId]: \"Deleted successfully!\",\n      }));\n\n      // Remove the deleted item from the local state\n      setUploads((prev) => prev.filter((upload) => upload.id !== uploadId));\n\n      // Clear the delete status after a short delay\n      setTimeout(() => {\n        setDeleteStatus((prev) => {\n          const newStatus = { ...prev };\n          delete newStatus[uploadId];\n          return newStatus;\n        });\n      }, 2000);\n    } catch (error) {\n      console.error(\"Delete error:\", error);\n\n      let errorMessage = \"Failed to delete upload\";\n\n      if (axios.isAxiosError(error)) {\n        const axiosError = error as AxiosError<{\n          detail?: string;\n          message?: string;\n        }>;\n\n        if (axiosError.response) {\n          if (axiosError.response.data?.detail) {\n            errorMessage = axiosError.response.data.detail;\n          } else if (axiosError.response.data?.message) {\n            errorMessage = axiosError.response.data.message;\n          } else if (typeof axiosError.response.data === \"string\") {\n            errorMessage = axiosError.response.data;\n          } else {\n            errorMessage = `Delete failed (${axiosError.response.status})`;\n          }\n        } else if (axiosError.request) {\n          errorMessage =\n            \"Cannot connect to server - check if backend is running\";\n        } else if (axiosError.message) {\n          errorMessage = axiosError.message;\n        }\n      } else if (error instanceof Error) {\n        errorMessage = error.message;\n      }\n\n      setDeleteStatus((prev) => ({\n        ...prev,\n        [uploadId]: `Error: ${errorMessage}`,\n      }));\n\n      // Clear the error status after a delay\n      setTimeout(() => {\n        setDeleteStatus((prev) => {\n          const newStatus = { ...prev };\n          delete newStatus[uploadId];\n          return newStatus;\n        });\n      }, 5000);\n    }\n  };\n\n  const fetchUploads = useCallback(async () => {\n    setIsLoadingUploads(true);\n    setLoadingMessage(\"Loading uploads...\");\n    try {\n      const headers = await getAuthHeaders();\n      console.log(\"Fetching uploads...\");\n\n      // Retry logic with exponential backoff and progressive timeouts\n      const maxRetries = 3;\n      let lastError = null;\n\n      for (let attempt = 0; attempt < maxRetries; attempt++) {\n        try {\n          // Progressive timeout: 30s, 45s, 60s\n          const timeout = 30000 + attempt * 15000;\n          console.log(\n            `Attempt ${attempt + 1}/${maxRetries} with ${\n              timeout / 1000\n            }s timeout`\n          );\n\n          setLoadingMessage(\n            `Loading uploads... (attempt ${attempt + 1}/${maxRetries})`\n          );\n\n          const response = await axios.get(`${API_BASE}/api/uploads`, {\n            headers,\n            timeout: timeout,\n          });\n\n          console.log(\"Uploads response:\", response.data);\n\n          const uploadsData = response.data.uploads || response.data || [];\n          setUploads(Array.isArray(uploadsData) ? uploadsData : []);\n          setStatus(\"\"); // Clear any previous error status\n          setLoadingMessage(\"Loading uploads...\");\n          return; // Success, exit retry loop\n        } catch (error) {\n          console.error(\n            `Failed to fetch uploads (attempt ${attempt + 1}/${maxRetries}):`,\n            error\n          );\n          lastError = error;\n\n          if (axios.isAxiosError(error)) {\n            // Don't retry if it's a 4xx error (client error)\n            if (\n              error.response &&\n              error.response.status >= 400 &&\n              error.response.status < 500\n            ) {\n              console.log(\"Client error detected, stopping retries\");\n              break;\n            }\n\n            // For network errors or 5xx errors, wait before retrying\n            if (attempt < maxRetries - 1) {\n              const delay = Math.min(2000 * Math.pow(2, attempt), 8000); // Longer delays: 2s, 4s, 8s\n              console.log(`Waiting ${delay / 1000}s before retry...`);\n              setStatus(\n                `Request timed out, retrying in ${delay / 1000} seconds...`\n              );\n              setLoadingMessage(\n                `Request timed out, retrying in ${delay / 1000} seconds...`\n              );\n              await new Promise((resolve) => setTimeout(resolve, delay));\n              continue;\n            }\n          }\n\n          // For non-Axios errors, don't retry\n          break;\n        }\n      }\n\n      // If we get here, all retries failed\n      if (lastError) {\n        if (axios.isAxiosError(lastError)) {\n          const axiosError = lastError as AxiosError<{ detail?: string }>;\n\n          if (axiosError.code === \"ECONNABORTED\") {\n            setStatus(\n              \"⚠️ Server is taking longer than expected to respond. This might be due to a large amount of data or server load. You can try refreshing the page or contact support if this persists.\"\n            );\n            // Set uploads to empty array so UI doesn't stay in loading state\n            setUploads([]);\n          } else {\n            const errorMsg =\n              axiosError.response?.data?.detail || axiosError.message;\n            setStatus(`Error fetching uploads: ${errorMsg}`);\n          }\n        } else if (lastError instanceof Error) {\n          setStatus(`Error fetching uploads: ${lastError.message}`);\n        }\n      }\n    } catch (error) {\n      console.error(\"Failed to fetch uploads:\", error);\n\n      if (axios.isAxiosError(error)) {\n        const axiosError = error as AxiosError<{ detail?: string }>;\n        const errorMsg =\n          axiosError.response?.data?.detail || axiosError.message;\n        setStatus(`Error fetching uploads: ${errorMsg}`);\n      } else if (error instanceof Error) {\n        setStatus(`Error fetching uploads: ${error.message}`);\n      }\n    } finally {\n      setIsLoadingUploads(false);\n    }\n  }, [API_BASE]);\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return <CheckCircle className=\"h-4 w-4 text-green-600\" />;\n      case \"failed\":\n        return <AlertCircle className=\"h-4 w-4 text-red-600\" />;\n      case \"processing\":\n        return <Clock className=\"h-4 w-4 text-yellow-600\" />;\n      default:\n        return <Clock className=\"h-4 w-4 text-gray-600\" />;\n    }\n  };\n\n  const getStatusBadgeColor = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"bg-green-100 text-green-800 border-green-200\";\n      case \"failed\":\n        return \"bg-red-100 text-red-800 border-red-200\";\n      case \"processing\":\n        return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      default:\n        return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  // Load uploads on component mount\n  useEffect(() => {\n    fetchUploads();\n  }, [fetchUploads]);\n\n  return (\n    <div className=\"mx-auto ml-[4.5vw] bg-white rounded-3xl p-8\">\n      <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-6\">\n        {/* Main Content */}\n        <div className=\"xl:col-span-2 space-y-6\">\n          {/* Upload Form */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <Upload className=\"h-5 w-5\" />\n                Data Ingestion\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {/* Tab Selection */}\n              <div className=\"flex gap-2\">\n                {[\n                  { key: \"pdf\", label: \"PDF\" },\n                  { key: \"url\", label: \"URL\" },\n                  { key: \"json\", label: \"JSON\" },\n                ].map((tabOption) => (\n                  <Button\n                    key={tabOption.key}\n                    variant={tab === tabOption.key ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() =>\n                      setTab(tabOption.key as \"pdf\" | \"url\" | \"json\")\n                    }\n                  >\n                    {tabOption.label}\n                  </Button>\n                ))}\n              </div>\n\n              {/* File Upload Area */}\n              {tab === \"pdf\" || tab === \"json\" ? (\n                <div className=\"space-y-4\">\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors\">\n                    <input\n                      type=\"file\"\n                      id=\"file-upload\"\n                      accept={tab === \"pdf\" ? \".pdf\" : \".json\"}\n                      onChange={(e) => setFile(e.target.files?.[0] || null)}\n                      className=\"hidden\"\n                    />\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"cursor-pointer flex flex-col items-center justify-center space-y-3\"\n                    >\n                      <Upload className=\"h-12 w-12 text-gray-400\" />\n                      <div className=\"space-y-1\">\n                        <p className=\"text-sm font-medium text-gray-900\">\n                          Click to upload {tab.toUpperCase()} files\n                        </p>\n                        <p className=\"text-xs text-gray-500\">\n                          Max file size: 10MB\n                        </p>\n                      </div>\n                    </label>\n                  </div>\n\n                  {file && (\n                    <div className=\"p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <p className=\"text-sm font-medium text-blue-900\">\n                            {file.name}\n                          </p>\n                          <p className=\"text-xs text-blue-600\">\n                            {(file.size / 1024 / 1024).toFixed(2)} MB\n                          </p>\n                        </div>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            setFile(null);\n                            const input = document.getElementById(\n                              \"file-upload\"\n                            ) as HTMLInputElement;\n                            if (input) input.value = \"\";\n                          }}\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  <label className=\"text-sm font-medium text-gray-700\">\n                    Website URL\n                  </label>\n                  <input\n                    type=\"url\"\n                    className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"https://example.com/content\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                  />\n                </div>\n              )}\n\n              {/* Submit Button */}\n              <Button\n                onClick={handleSubmit}\n                disabled={\n                  isUploading ||\n                  (!file && tab !== \"url\") ||\n                  (!url && tab === \"url\")\n                }\n                className=\"w-full\"\n                size=\"lg\"\n              >\n                {isUploading ? (\n                  <>\n                    <RefreshCw className=\"h-4 w-4 mr-2 animate-spin\" />\n                    Processing...\n                  </>\n                ) : (\n                  <>\n                    <Upload className=\"h-4 w-4 mr-2\" />\n                    Submit\n                  </>\n                )}\n              </Button>\n\n              {/* Status Message */}\n              {status && (\n                <div\n                  className={`p-3 rounded-lg text-sm ${\n                    status.includes(\"Error\")\n                      ? \"bg-red-50 text-red-800 border border-red-200\"\n                      : status.includes(\"successfully\")\n                      ? \"bg-green-50 text-green-800 border border-green-200\"\n                      : \"bg-blue-50 text-blue-800 border border-blue-200\"\n                  }`}\n                >\n                  {status}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Uploads List */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex justify-between items-center\">\n                <CardTitle>Recent Uploads</CardTitle>\n                <Button\n                  onClick={fetchUploads}\n                  disabled={isLoadingUploads}\n                  variant=\"outline\"\n                  size=\"sm\"\n                >\n                  {isLoadingUploads ? (\n                    <RefreshCw className=\"h-4 w-4 animate-spin\" />\n                  ) : (\n                    <RefreshCw className=\"h-4 w-4\" />\n                  )}\n                  Refresh\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {isLoadingUploads ? (\n                <div className=\"flex items-center justify-center py-8\">\n                  <RefreshCw className=\"h-6 w-6 animate-spin mr-2\" />\n                  {loadingMessage}\n                </div>\n              ) : uploads.length === 0 ? (\n                <div className=\"text-center py-8 text-gray-500\">\n                  <Upload className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                  <p>No uploads found.</p>\n                  <p className=\"text-sm\">Upload some files to get started!</p>\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full\">\n                    <thead>\n                      <tr className=\"border-b\">\n                        <th className=\"text-left py-3 px-4 font-medium\">\n                          Type\n                        </th>\n                        <th className=\"text-left py-3 px-4 font-medium\">\n                          Source\n                        </th>\n                        <th className=\"text-left py-3 px-4 font-medium\">\n                          Status\n                        </th>\n                        <th className=\"text-left py-3 px-4 font-medium\">\n                          Created\n                        </th>\n                        <th className=\"text-left py-3 px-4 font-medium\">\n                          Actions\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {uploads.map((upload) => (\n                        <tr\n                          key={upload.id}\n                          className=\"border-b hover:bg-gray-50\"\n                        >\n                          <td className=\"py-3 px-4\">\n                            <Badge variant=\"outline\" className=\"font-mono\">\n                              {upload.type.toUpperCase()}\n                            </Badge>\n                          </td>\n                          <td className=\"py-3 px-4 max-w-xs\">\n                            <div className=\"truncate\" title={upload.source}>\n                              {upload.source}\n                            </div>\n                          </td>\n                          <td className=\"py-3 px-4\">\n                            <div className=\"flex items-center gap-2\">\n                              {getStatusIcon(upload.status)}\n                              <Badge\n                                variant=\"outline\"\n                                className={getStatusBadgeColor(upload.status)}\n                              >\n                                {upload.status}\n                              </Badge>\n                            </div>\n                            {upload.status === \"failed\" &&\n                              upload.error_message && (\n                                <div\n                                  className=\"text-xs text-red-600 mt-1\"\n                                  title={upload.error_message}\n                                >\n                                  {upload.error_message.length > 50\n                                    ? upload.error_message.substring(0, 50) +\n                                      \"...\"\n                                    : upload.error_message}\n                                </div>\n                              )}\n                          </td>\n                          <td className=\"py-3 px-4 text-sm text-gray-600\">\n                            {new Date(upload.created_at).toLocaleString()}\n                          </td>\n                          <td className=\"py-3 px-4\">\n                            <div className=\"flex items-center gap-2\">\n                              <Button\n                                onClick={() => handleDelete(upload.id)}\n                                disabled={deleteStatus[upload.id]?.includes(\n                                  \"Deleting\"\n                                )}\n                                variant=\"destructive\"\n                                size=\"sm\"\n                              >\n                                {deleteStatus[upload.id]?.includes(\n                                  \"Deleting\"\n                                ) ? (\n                                  <RefreshCw className=\"h-3 w-3 animate-spin\" />\n                                ) : (\n                                  <Trash2 className=\"h-3 w-3\" />\n                                )}\n                              </Button>\n                            </div>\n                            {deleteStatus[upload.id] &&\n                              !deleteStatus[upload.id].includes(\"Deleting\") && (\n                                <div\n                                  className={`text-xs mt-1 ${\n                                    deleteStatus[upload.id].includes(\"Error\")\n                                      ? \"text-red-600\"\n                                      : \"text-green-600\"\n                                  }`}\n                                >\n                                  {deleteStatus[upload.id]}\n                                </div>\n                              )}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          <Card className=\"bg-gradient-to-br from-cyan-50 to-teal-50 border-cyan-200\">\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center gap-2\">\n                🎨 Customization Guide\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <ul className=\"text-sm text-gray-600 space-y-2\">\n                <li className=\"flex items-start gap-2\">\n                  <span className=\"text-cyan-600\">•</span>\n                  Match your brand colors\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <span className=\"text-cyan-600\">•</span>\n                  Set appropriate welcome messages\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <span className=\"text-cyan-600\">•</span>\n                  Configure widget position\n                </li>\n                <li className=\"flex items-start gap-2\">\n                  <span className=\"text-cyan-600\">•</span>\n                  Enable/disable features as needed\n                </li>\n              </ul>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-gradient-to-br from-amber-50 to-orange-50 border-amber-200\">\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center gap-2\">\n                📊 Upload Guidelines\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-sm text-gray-600 space-y-3\">\n                <div>\n                  <p className=\"font-medium text-gray-800\">\n                    Supported Formats:\n                  </p>\n                  <ul className=\"mt-1 space-y-1\">\n                    <li>• PDF documents</li>\n                    <li>• JSON data files</li>\n                    <li>• Website URLs</li>\n                  </ul>\n                </div>\n                <div>\n                  <p className=\"font-medium text-gray-800\">Best Practices:</p>\n                  <ul className=\"mt-1 space-y-1\">\n                    <li>• Keep files under 10MB</li>\n                    <li>• Use clear, structured content</li>\n                    <li>• Test with sample questions</li>\n                  </ul>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}